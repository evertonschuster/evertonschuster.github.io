{"version":3,"sources":["webpack:///./src/pages/Pessoas/Users/Login/LoginUserStyle.less?0cf8","pages/Pessoas/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","hoc/WithFormItem.tsx","layouts/BasicLayout/BasicLayout.tsx","components/WithFormItem/withFormItem.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","pages/Movimentos/Categorias/FormCategoria/CategoriaSchema.ts","apis/Api.configure.ts","apis/Api.ts","apis/Movimentos/CategoriaApi.ts","models/Pessoas/Pessoa.ts","pages/Movimentos/Categorias/FormCategoria/FormCategoria.tsx","pages/Pessoas/Clientes/FormCliente/ClienteSchema.ts","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalFormContext.ts","components/ModalForm/ModalForm.tsx","hoc/useDebouncedCallback.ts","components/SelectModel/SelectModelOne.tsx","apis/Cidades/CidadeApi.ts","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","pages/Pessoas/Clientes/FormCliente/components/GeralForm.tsx","pages/Pessoas/Clientes/FormCliente/FormCliente.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FuncaoFuncionarioSchema.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","hoc/UseListPagined.ts","apis/Cidades/PaisApi.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx","apis/Movimentos/ServicoApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","pages/Movimentos/Marcas/FormMarca/FormMarcaSchema.ts","apis/Movimentos/MarcaApi.ts","pages/Movimentos/Marcas/FormMarca/FormMarca.tsx","pages/Movimentos/Produtos/FormProduto/ProdutoSchema.ts","apis/Movimentos/UnidadeMedidaApi.ts","pages/Movimentos/Produtos/FormProduto/FormProduto.tsx","pages/Movimentos/Servicos/FormServico/ServicoSchema.ts","pages/Movimentos/Servicos/FormServico/FormServico.tsx","pages/Pessoas/Associados/FormTitular/TitularSchema.ts","pages/Pessoas/Associados/FormTitular/Components/CreateAssociado.tsx","pages/Pessoas/Associados/FormTitular/Components/Dependente.tsx","apis/Pessoas/AssociadoApi.ts","pages/Pessoas/Associados/FormTitular/FormTitular.tsx","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","pages/Movimentos/Categorias/ListCategoria/ListCategoria.tsx","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","apis/Pessoas/ClienteApi.ts","pages/Pessoas/Clientes/ListCliente/ListCliente.tsx","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/ListEstado/ListEstado.tsx","apis/Pessoas/Fornecedor.Api.ts","pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario.tsx","apis/Pessoas/FuncionarioApi.ts","pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario.tsx","pages/Movimentos/Marcas/ListCategoria/ListMarca.tsx","pages/Cidades/Pais/ListPais/ListPais.tsx","apis/Movimentos/ProdutoApi.ts","pages/Movimentos/Produtos/ListProduto/ListProduto.tsx","pages/Movimentos/Servicos/ListServico/ListServico.tsx","pages/Pessoas/Associados/ListTitular/ListTitular.tsx","apis/Pessoas/UserApi.ts","pages/Pessoas/Users/FormUser/FormUser.tsx","pages/Pessoas/Users/ListUser/ListUser.tsx","pages/Cidades/Pais/FormPais/PaisSchema.ts","pages/Cidades/Pais/FormPais/FormPais.tsx","pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida.tsx","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/UnidadeMedidaSchema.ts","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida.tsx","pages/Cidades/Cidade/FormCidade/CidadeSchema.ts","pages/Cidades/Cidade/FormCidade/FormCidade.tsx","pages/Cidades/Estado/FormEstado/EstadoSchema.ts","pages/Cidades/Estado/FormEstado/FormEstado.tsx","pages/Pessoas/Users/FormUser/UserSchema.ts","pages/Pessoas/Users/FormUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/FormUser/Components/ChangePassword.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/Percentual.tsx","apis/CondicaoPagamento/FormaPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/RenderSelectionFormaPagamento.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento.tsx","pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Pessoas/Users/Login/LoginUserSchema.ts","pages/Pessoas/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","disabled","ContentApp","props","Content","style","margin","padding","background","minHeight","children","history","createHistory","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","Field","propsConf","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","display","flex","withFormItem","basicLayoutContext","isViewMode","isDisabled","name","label","required","autoComplete","width","WithItemNone","showLabel","ItemFormRender","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","useEffect","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","mensagem","Array","isArray","errorArray","textAlign","setFieldError","reduce","p","c","find","withRouter","values","formikHelpers","a","onSubmit","onKeyDown","keyEvent","charCode","keyCode","enableReinitialize","isSubmitting","isLoading","zIndex","height","left","top","position","fontSize","color","isFunction","paddingTop","flexDirection","dataCriacao","Date","toLocaleString","day","month","year","hour","minute","dataAtualizacao","marginRight","backPath","submitForm","CategoriaSchema","Yup","shape","nome","max","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","ApiBase","endPoint","EndPoint","t","post","put","id","get","toString","delete","query","SEXO","ESTADO_CIVIL","TIPO_PESSOA","CategoriaApi","FormCategoria","categoria","setCategoria","loading","setLoading","match","params","Update","Save","GetById","bdCategoria","getCategoria","CrudFormLayout","initialValues","validationSchema","placeholder","readOnly","ClienteSchema","basename","value","path","ModalFormContext","state","setState","ModalFormContextProvider","CloseForm","setVisible","visible","concat","destroyOnClose","onOk","length","errorMessage","noSelection","SelectMultiple","okText","onCancel","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","description","setDescription","keyId","keyDescription","useField","field","meta","helpers","objectName","helpersObject","setSubmitting","useFormikContext","showDescription","getDesciptionValues","fetchMethod","respose","setValue","handleClick","validateStatus","touched","help","col","inputId","min","onChange","setTouched","onBlur","btnSearch","inputDescription","SelectOne","isNaN","Number","CidadeApi","CondicaoPagamentoApi","GeralForm","setFieldValue","Option","Fisica","Juridica","hidden","bind","format","rows","FormCliente","apelido","bairro","cep","complemento","cPFCPNJ","dataNascimento","email","endereco","estadoCivil","limiteCredito","nacionalidade","observacoes","rgInscricaoEstadual","sexo","telefone","tipo","cliente","getCliente","FornecedorSchema","FormFornecedor","fornecedor","getFornecedor","FuncaoFuncionarioSchema","cargaHoraria","FuncaoFuncionarioApi","FormFuncaoFuncionario","requerCNH","descricao","observacao","funcaofuncionario","setFuncaofuncionario","bdFuncaofuncionario","getFuncaoFuncionario","checkedChildren","unCheckedChildren","FuncionarioSchema","UseListPagined","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","total","dataSource","responseBack","setResponseBack","getDataBack","getListPagined","totalItem","result","valuesFilter","requestResult","reflesh","PaisApi","SelectModelMore","setDataSource","GetListPagined","onSearch","text","filter","md","filterOption","onSelect","newSelection","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","setData","helper","columns","render","record","placement","oldData","onRemoveClick","old","lefJoin","ee","ServicoApi","dataIndex","FormFuncionario","cnh","funcionario","getFuncionario","MarcaSchema","MarcaApi","FormMarca","marca","setMarca","bdMarca","getMarca","ProdutoSchema","marcaId","quantidade","quantidadeMinima","valorCompra","valorVenda","categoriaId","unidadeMedidaId","UnidadeMedidaApi","FormProduto","taxa","codigoBarra","referencia","produto","getProduto","parser","replace","ServicoSchema","valor","FormServico","servico","getServico","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","showModal","onSave","onCancelForm","resetForm","handleSubmit","Dependente","indexEvent","dependentes","indexRow","onRemoveAssocido","setShowModal","onSaveAssociado","insert","justifyContent","bordered","rowKey","arrayHelpers","item","TitularApi","FormTitular","numero","titular","setTitular","bdestado","getTitular","dashed","isSelectMode","keyProp","ListSelectedItem","setRecord","Edit","deleteFunction","Delete","showExluir","rowSelection","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","tableProps","List","cancelText","okType","okButtonProps","autoFocus","cancelButtonProps","pagination","page","onRow","useFixedHeader","filterValues","setFilterValues","target","onPressEnter","New","paddingBottom","ListCategoria","Excluir","ListCidade","useMemo","ClienteApi","ListCliente","ListCondicaoPagamento","EstadoApi","ListEstado","FornecedorApi","ListFornecedor","ListFuncaoFuncionario","FuncionarioApi","ListFuncionario","ListMarca","ProdutoApi","ListProduto","ListServico","Menus","UserApi","ListUser","PaisSchema","ddi","sigla","pais","setPais","bdpais","getPais","ListUnidadeMedida","UnidadeMedidaSchema","FormUnidadeMedida","unidademedida","setUnidadeMedida","bdCidade","getUnidadeMedida","CidadeSchema","ddd","estadoId","nullable","typeError","FormCidade","cidade","setCidade","getCidade","EstadoSchema","uf","paisId","FormEstado","estado","setEstado","getEstado","UserSchema","phoneNumber","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","ChangePasswordUser","initialErrors","FormUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","ty","toFixed","init","every","valid","RowMode","TypeAttribute","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","rowIndex","number","handleRowMode","edit","handleRemove","new","onNewRow","mapRecord","components","body","row","cell","errorStyle","borderWidth","borderStyle","borderColor","borderRadius","hasListError","columnsAction","editable","onCell","useCallback","dataSourceNew","handleRowNew","mapedDataSource","now","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","FormaPagamentoApi","CondicaoPagamentoGeneral","Math","round","FormCondicaoPagamento","condicaopagamento","setCondicaoPagamento","getCondicaoPagamento","ListFormaPagamento","FormaPagamentoSchema","FormFormaPagamento","formapagamento","setFormaPagamento","getFormaPagamento","RoutePath","component","exact","ListPais","FormPais","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","TryLoginUser","success","xs","sm","lg","xl","xxl","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1103ac5.chunk.js","sourcesContent":["var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n        >\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\">\r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"Categoria\">\r\n                        <Link to=\"/categoria\">Categoria</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Cliente\">\r\n                        <Link to=\"/cliente\">Clientes</Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"CondicaoPagamento\"\r\n                        title={\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FormaPagamentoCrud\">\r\n                            <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                    <Menu.Item key=\"Fornecedor\">\r\n                        <Link to=\"/fornecedor\">Fornecedores</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"FuncaoFuncionario\">\r\n                        <Link to=\"/funcao-funcionario\">Função Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Funcionario\">\r\n                        <Link to=\"/funcionario\">Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Marca\">\r\n                        <Link to=\"/marca\">Marcas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Produto\">\r\n                        <Link to=\"/produto\">Produtos</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Servico\">\r\n                        <Link to=\"/servico\">Serviços</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"unidadeMedidaCrud\">\r\n                        <Link to=\"/unidade-medida\">Unidade de medidas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuários</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"Movimento\"\r\n                    disabled={true}\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"shop\" />\r\n                            <span>Movimento</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"venda\">\r\n                        <Link to=\"/venda\">Vendas</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"compra\">\r\n                        <Link to=\"/compra\">Compras</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                </SubMenu>\r\n\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Content\r\n            style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#fff',\r\n                minHeight: \"90%\",\r\n            }}>\r\n\r\n\r\n            {props.children}\r\n\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory();","import AuthenticatedUser from \"../models/Pessoas/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <PerfectScrollbar >\r\n                        <HeaderApp breadcrumbList={breadcrumb} />\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik?: FormikHelpers<any> | null, response?: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n\r\n        formik?.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem)) {\r\n                let errorArray: any[] = errors[element]\r\n\r\n                mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                formik?.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element)) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Button, Icon } from 'antd';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, isFunction } from 'formik';\r\nimport { Form } from 'formik-antd';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            await props.onSubmit(values, formikHelpers);\r\n\r\n        } catch (e) {\r\n\r\n            errorBack(formikHelpers, e)\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(keyEvent: any) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                {(formik) => (\r\n                    <Form onKeyDown={onKeyDown} >\r\n                        {renderLoading(formik.isSubmitting)}\r\n\r\n                        {isFunction(props.children)\r\n                            ? props.children(formik)\r\n                            : props.children}\r\n\r\n                        < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                            <Col\r\n                                span={7}\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    paddingRight: 20\r\n                                }}>\r\n                                <span style={{ textAlign: \"end\" }} >\r\n                                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                                    day: \"numeric\",\r\n                                    month: \"numeric\",\r\n                                    year: \"numeric\",\r\n\r\n                                    hour: \"numeric\",\r\n                                    minute: \"numeric\"\r\n                                }) : \"  /  /\"}</span>\r\n                                <span style={{ textAlign: \"end\" }} >\r\n                                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                                    day: \"numeric\",\r\n                                    month: \"numeric\",\r\n                                    year: \"numeric\",\r\n\r\n                                    hour: \"numeric\",\r\n                                    minute: \"numeric\"\r\n                                }) : \"  /  /\"}</span>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => props.history.push(props.backPath)}>Cancelar</Button>\r\n                                <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import * as Yup from 'yup';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const CategoriaSchema = Yup.object().shape<Categoria>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Categoria não pode ser vaziu.')\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if (error.response!.data!.code === 422 || error.response.status === 422) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import { AxiosResponse } from 'axios';\r\nimport api from './Api.configure';\r\nimport { IBaseEntity, PaginationResult, PaginationQuery } from '../models/BaseEntity';\r\n\r\nexport class ApiBase<T extends IBaseEntity<any>> {\r\n\r\n    EndPoint: string;\r\n\r\n    constructor(endPoint: string) {\r\n        this.EndPoint = endPoint;\r\n    }\r\n\r\n\r\n    Save(t: T): Promise<AxiosResponse<any>> {\r\n        return api.post(this.EndPoint, t);\r\n    }\r\n\r\n    Update(t: T): Promise<AxiosResponse<any>> {\r\n        return api.put(`${this.EndPoint}/${t.id}`, t);\r\n    }\r\n\r\n    GetById(id: number): Promise<AxiosResponse<T>> {\r\n        return api.get(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    Excluir(id: number): Promise<AxiosResponse<any>> {\r\n        return api.delete(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    GetListPagined(query: PaginationQuery): Promise<AxiosResponse<PaginationResult<T>>> {\r\n        return api.post(`${this.EndPoint}/list`, query);\r\n    }\r\n}\r\n\r\n","import { Categoria } from '../../models/Movimentos/Categoria';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/categoria';\r\n\r\nclass Api extends ApiBase<Categoria>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CategoriaApi = new Api();","export interface Pessoa {\r\n    id?: string,\r\n    nome?: string,\r\n    apelido?: string,\r\n    rgInscricaoEstadual?: string,\r\n    cPFCPNJ?: string,\r\n    endereco?: string,\r\n    bairro?: string,\r\n    complemento?: string,\r\n    cep?: string,\r\n    dataNascimento?: Date,\r\n    nacionalidade?: string,\r\n    telefone?: string,\r\n    email?: string,\r\n    observacoes?: string,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaSchema } from './CategoriaSchema';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nconst FormCategoria: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCategoria(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Categoria, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await CategoriaApi.Update(values);\r\n            } else {\r\n                await CategoriaApi.Save(values);\r\n            }\r\n            props.history.push(\"/categoria\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCategoria(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCategoria = await CategoriaApi.GetById(id);\r\n            setCategoria(bdCategoria.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/categoria\"\r\n            breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Nova categoria\", URL: undefined }]}\r\n            initialValues={categoria}\r\n            validationSchema={CategoriaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={9}>\r\n                    <Input name=\"nome\" label=\"Categoria\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCategoria;\r\n","import * as Yup from 'yup';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\n\r\n\r\nexport const ClienteSchema = Yup.object().shape<Cliente | any>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cliente não pode ser vaziu.'),\r\n});","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: number | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<CondicaoPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CondicaoPagamentoApi = new Api();","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Cliente } from '../../../../../models/Pessoas/Cliente';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    const { setFieldValue } = useFormikContext<Cliente>();\r\n\r\n    useEffect(() => {\r\n\r\n        setFieldValue(\"estadoCivil\", undefined);\r\n        setFieldValue(\"sexo\", undefined);\r\n        setFieldValue(\"dataNascimento\", undefined);\r\n        setFieldValue(\"nacionalidade\", undefined);\r\n\r\n    }, [field.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Cliente\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Input name=\"nacionalidade\" label=\"Nacionalidade\" placeholder=\"Brasileiro.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label={field.value === TIPO_PESSOA.Fisica ? \"Data Nascimento\" : \"Data de Fundação\"} placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { ClienteSchema } from './ClienteSchema';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormCliente: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cliente] = useState<Cliente>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: \"\",\r\n        limiteCredito: undefined,\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Fisica\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCliente();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getCliente() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cliente\"\r\n            breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Novo Cliente\", URL: undefined }]}\r\n            initialValues={cliente}\r\n            validationSchema={ClienteSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCliente;\r\n","import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor | {}>({\r\n    // nome: Yup.string()\r\n    //     .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n    //     .required('[Nome] do Fornecedor não pode ser vaziu.'),\r\n});\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Fornecedor } from './../../../../../models/Pessoas/Fornecedor';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    const { setFieldValue } = useFormikContext<Fornecedor>();\r\n\r\n    useEffect(() => {\r\n\r\n        setFieldValue(\"estadoCivil\", undefined);\r\n        setFieldValue(\"sexo\", undefined);\r\n        setFieldValue(\"dataNascimento\", undefined);\r\n        setFieldValue(\"nacionalidade\", undefined);\r\n\r\n    }, [field.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [fornecedor] = useState<Fornecedor>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Juridica\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFornecedor() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import * as Yup from 'yup';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const FuncaoFuncionarioSchema = Yup.object().shape<FuncaoFuncionario>({\r\n    id: Yup.number(),\r\n    \r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Função do Funcionário não pode ser vaziu.'),\r\n\r\n    cargaHoraria: Yup.number()\r\n        .min(0.0001,\"A Carga Horária não pode ser igual ou inferior a 0.\")\r\n        .required('A Carga Horária deve ser informada.'),\r\n    \r\n});\r\n","import { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcao-funcionarios';\r\n\r\nclass Api extends ApiBase<FuncaoFuncionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncaoFuncionarioApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, Switch, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { FuncaoFuncionarioSchema } from './FuncaoFuncionarioSchema';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormFuncaoFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [funcaofuncionario, setFuncaofuncionario] = useState<FuncaoFuncionario>({\r\n        nome: \"\",\r\n        requerCNH: false,\r\n        descricao: \"\",\r\n        cargaHoraria: undefined,\r\n        observacao: \"\"\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncaoFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FuncaoFuncionario, formikHelpers: FormikHelpers<FuncaoFuncionario>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncaoFuncionarioApi.Update(values);\r\n            } else {\r\n                await FuncaoFuncionarioApi.Save(values);\r\n            }\r\n            props.history.push(\"/funcao-funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFuncaoFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncaofuncionario = await FuncaoFuncionarioApi.GetById(id);\r\n            setFuncaofuncionario(bdFuncaofuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcao-funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: \"Nova Função Funcionário\", URL: undefined }]}\r\n            initialValues={funcaofuncionario}\r\n            validationSchema={FuncaoFuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Função Funcionário\" placeholder=\"técnico\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputNumber name=\"cargaHoraria\" label=\"Carga Horária\" placeholder=\"8\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Switch name=\"requerCNH\" label=\"Requer CNH?\" checkedChildren=\"Requer\" unCheckedChildren=\"Opcional\" ></Switch>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    )\r\n}\r\n\r\nexport default FormFuncaoFuncionario\r\n","import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\n\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario | any>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Funcionario não pode ser vaziu.'),\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../apis/Cidades/PaisApi';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi)  });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useState } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Label, ErrorMessage } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: Label;\r\n    columns: ColumnProps<any>[];\r\n    errorMessage: ErrorMessage;\r\n    path: string;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n    const [, meta, helper] = useField<any[]>({ name: props.name + \"SelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        width: 100,\r\n        title: \"Ações\",\r\n        render: renderAction\r\n    })\r\n\r\n    function onSaveClick() {\r\n\r\n\r\n        setData((old) => {\r\n\r\n            let lefJoin = meta.value.filter(e => {\r\n                return old.filter((ee) => ee[keyId] === e[keyId]).length === 0\r\n            });\r\n\r\n            return [...old, ...lefJoin]\r\n        });\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        setData((oldData) => oldData.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={props.fetchMethod}\r\n                            name={props.name + \"SelectionIds\"}\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={props.label}\r\n                            errorMessage={props.errorMessage}\r\n                            path={props.path} />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={data} size=\"small\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { ServicoApi } from '../../../../../apis/Movimentos/ServicoApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Funcionário\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <Input name=\"nacionalidade\" label=\"Nacionalidade\" placeholder=\"Brasileiro.\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label=\"CPF\" placeholder=\"000.000.000-00\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"FuncaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataValidadeCNH\" label=\"Data de Validade\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={ServicoApi.GetById.bind(ServicoApi)}\r\n                        label={{ label: \"Serviços\", title: \"Selecione um Serviço\" }}\r\n                        name=\"servicoIds\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Serviço\" }}\r\n                        path=\"servico\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario] = useState<Funcionario>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        cnh: \"\"\r\n\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFuncionario() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Novo Funcionário\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import * as Yup from 'yup';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\n\r\n\r\nexport const MarcaSchema = Yup.object().shape<Marca>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Marca não pode ser vaziu.')\r\n});","import { Marca } from '../../models/Movimentos/Marca';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/marcas';\r\n\r\nclass Api extends ApiBase<Marca>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const MarcaApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaSchema } from './FormMarcaSchema';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst FormMarca: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [marca, setMarca] = useState<Marca>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMarca(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Marca, formikHelpers: FormikHelpers<Marca>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await MarcaApi.Update(values);\r\n            } else {\r\n                await MarcaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/marca\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getMarca(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdMarca = await MarcaApi.GetById(id);\r\n            setMarca(bdMarca.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/marca\"\r\n            breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Nova marca\", URL: undefined }]}\r\n            initialValues={marca}\r\n            validationSchema={MarcaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Marca\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormMarca;\r\n","import * as Yup from 'yup';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\n\r\n\r\nexport const ProdutoSchema = Yup.object().shape<Produto>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do produto não pode ser vaziu.'),\r\n\r\n    marcaId: Yup.number()\r\n        .required(\"Informe uma Marca ao produto.\")\r\n        .min(0, \"Informe uma Marca ao produto.\"),\r\n\r\n    quantidade: Yup.number()\r\n        .required(\"Informe a Quantidade.\")\r\n        .min(0, \"Informe a Quantidade.\"),\r\n\r\n    quantidadeMinima: Yup.number()\r\n        .required(\"Informe a Quantidade Mínima.\")\r\n        .min(0, \"Informe a Quantidade Mínima.\"),\r\n\r\n    valorCompra: Yup.number()\r\n        .required(\"Informe o Valor de Compra.\")\r\n        .min(0, \"Informe o Valor de Compra.\"),\r\n\r\n    valorVenda: Yup.number()\r\n        .required(\"Informe o Valor de Venda.\")\r\n        .min(0, \"Informe o Valor de Venda.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe uma Categoria ao produto.\")\r\n        .min(0, \"Informe uma Categoria ao produto.\"),\r\n\r\n    unidadeMedidaId: Yup.number()\r\n        .required(\"Informe uma Unidade Medida ao produto.\")\r\n        .min(0, \"Informe uma Unidade de Medida ao produto.\"),\r\n});\r\n","import { UnidadeMedida } from '../../models/Movimentos/UnidadeMedida';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/unidades-medida';\r\n\r\nclass Api extends ApiBase<UnidadeMedida>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const UnidadeMedidaApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ProdutoSchema } from './ProdutoSchema';\r\nimport SelectModelOne from '../../../../components/SelectModel/SelectModelOne';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormProduto: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [produto] = useState<Produto>({\r\n        nome: \"\",\r\n        categoriaId: undefined,\r\n        quantidade: undefined,\r\n        quantidadeMinima: undefined,\r\n        valorCompra: undefined,\r\n        valorVenda: undefined,\r\n        taxa: undefined,\r\n        unidadeMedidaId: undefined,\r\n        codigoBarra: \"\",\r\n        referencia: \"\",\r\n        marcaId: undefined,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getProduto();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getProduto() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/produto\"\r\n            breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: \"Novo Produto\", URL: undefined }]}\r\n            initialValues={produto}\r\n            validationSchema={ProdutoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Produto\" placeholder=\"Produto\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <SelectModelOne\r\n                        fetchMethod={UnidadeMedidaApi.GetById.bind(UnidadeMedidaApi)}\r\n                        name=\"unidadeMedidaId\"\r\n                        keyDescription=\"Unidade de Medida\"\r\n                        required={true}\r\n                        showDescription={false}\r\n                        label={{ title: \"Seleção de Unidade de Medida\", label: \"Unidade de Medida\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Unidade de Medida!\" }}\r\n                        path=\"unidade-medida\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"codigoBarra\" label=\"Codigo Barras\" placeholder=\"Codigo Barras\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"referencia\" label=\"Referência\" placeholder=\"Codigo\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={MarcaApi.GetById.bind(MarcaApi)}\r\n                        name=\"marcaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Marca\", label: \"Marca\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Marca!\" }}\r\n                        path=\"marca\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidadeMinima\" label=\"Quantidade Mínima\" placeholder=\"2\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name=\"valorCompra\" label=\"Valor Compra\" placeholder=\"10,20\" required\r\n                        parser={(value) => value?.replace(/\\$\\s?|(,*)/g, '') || \"\"}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"taxa\" label=\"Margem de lucro (%)\" min={0} max={100} placeholder=\"15,50\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"valorVenda\" label=\"Valor Venda\" placeholder=\"15,50\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidade\" label=\"Quantidade\" placeholder=\"10\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormProduto\r\n","import * as Yup from 'yup';\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\n\r\n\r\nexport const ServicoSchema = Yup.object().shape<Servico>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Serviço não pode ser vaziu.'),\r\n\r\n    valor: Yup.number().required(\"Informe o valor do serviço.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe uma Categoria ao serviço.\")\r\n        .min(0, \"Informe uma Categoria ao serviço.\"),\r\n\r\n});\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ServicoSchema } from './ServicoSchema';\r\nimport { TextArea } from './../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormServico: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [servico] = useState<Servico>({\r\n        nome: \"\",\r\n        valor: undefined,\r\n        categoriaId: undefined,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Idade',\r\n            dataIndex: 'idade',\r\n        },\r\n        {\r\n            title: 'Função',\r\n            dataIndex: 'funcaoFuncionario.nome',\r\n        },\r\n    ];\r\n\r\n\r\n    useEffect(() => {\r\n        getServico();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    \r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getServico() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/servico\"\r\n            breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Novo Serviço\", URL: undefined }]}\r\n            initialValues={servico}\r\n            validationSchema={ServicoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Serviço\" placeholder=\"Serviço\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <InputNumber name=\"valor\" label=\"Valor\" required />\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoriaa!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={3} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"oservacao\" label=\"Observação\" rows={3} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        label={{ label: \"Funcionários\", title: \"Selecione um Funcionário\" }}\r\n                        name=\"funcionarioIds\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um funcionário\" }}\r\n                        path=\"funcionario\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormServico\r\n","import * as Yup from 'yup';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport { Associado } from '../../../../models/Pessoas/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Tooltip, Tag } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from '../../../../../models/Pessoas/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => {\r\n\r\n                return (\r\n                    <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                        <Tag color=\"red\" key={index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => onRemoveAssocido(index)} >Remover</Tag>\r\n                    </Tooltip>)\r\n                    ;\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\", dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                size=\"small\"\r\n                dataSource={formik.values.dependentes || []}\r\n                rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import { Titular } from '../../models/Pessoas/Titular';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\nclass Api extends ApiBase<Titular>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const TitularApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport Dependente from './Components/Dependente';\r\nimport { TitularApi } from '../../../../apis/Pessoas/AssociadoApi';\r\n\r\nconst FormTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await TitularApi.Update(values);\r\n            } else {\r\n                await TitularApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await TitularApi.GetById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/titular\"\r\n            breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n            initialValues={titular}\r\n            validationSchema={TitularSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Id\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Divider dashed >Dependentes</Divider>\r\n\r\n            <Dependente />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormTitular;\r\n","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => { setFormMode(FormMode.Edit); setState(undefined) }}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    try {\r\n\r\n                        props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                        setLoading(false);\r\n                        props.tableProps.reflesh();\r\n                    }\r\n                    catch (e) {\r\n                        errorBack(null, e);\r\n                    }\r\n                    finally {\r\n                        setFormMode(FormMode.List)\r\n                        hidenExluir();\r\n                    }\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading,\r\n                    autoFocus: true,\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../models/BaseEntity';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\n\r\nconst ListCategoria: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CategoriaApi.GetListPagined.bind(CategoriaApi) });\r\n\r\n    const columns: ColumnProps<Categoria>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CategoriaApi.Excluir.bind(CategoriaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCategoria;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CidadeApi.GetListPagined.bind(CidadeApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'estado.nome',\r\n        },\r\n    ], []);\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CidadeApi.Excluir.bind(CidadeApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import { Cliente } from '../../models/Pessoas/Cliente';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<Cliente>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ClienteApi = new Api();\r\n\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport ListForm from '../../../../components/ListForm/ListForm'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\n\r\nconst ListCliente:React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: ClienteApi.GetListPagined.bind(ClienteApi)  });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cliente',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF/CNPJ',\r\n            dataIndex: 'cpfcnpj',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n    \r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ClienteApi.Excluir.bind(ClienteApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListCliente\r\n\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CondicaoPagamentoApi.GetListPagined.bind(CondicaoPagamentoApi) });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CondicaoPagamentoApi.Excluir.bind(CondicaoPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import { Estado } from '../../models/Cidades/Estado';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\nclass Api extends ApiBase<Estado>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const EstadoApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: EstadoApi.GetListPagined.bind(EstadoApi)});\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'pais.nome',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={EstadoApi.Excluir.bind(EstadoApi)}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import { Fornecedor } from '../../models/Pessoas/Fornecedor';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<Fornecedor>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FornecedorApi = new Api();\r\n\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\n\r\nconst ListFornecedor: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FornecedorApi.GetListPagined.bind(FornecedorApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'fornecedor',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'cargo',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FornecedorApi.Excluir.bind(FornecedorApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFornecedor;","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFuncaoFuncionario: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: FuncaoFuncionarioApi.GetListPagined.bind(FuncaoFuncionarioApi) });\r\n\r\n    const columns: ColumnProps<FuncaoFuncionario>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Função Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'cargaHoraria',\r\n        },\r\n        {\r\n            title: 'CNH?',\r\n            dataIndex: 'requerCNH',\r\n            render: (text: any, record: FuncaoFuncionario, index: number) => record.requerCNH ? \"Sim\" : \"Não\"\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncaoFuncionarioApi.Excluir.bind(FuncaoFuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncaoFuncionario\r\n","import { Funcionario } from '../../models/Pessoas/Funcionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<Funcionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncionarioApi = new Api();","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\n\r\nconst ListFuncionario: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FuncionarioApi.GetListPagined.bind(FuncionarioApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'funcionario',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'cargo',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncionarioApi.Excluir.bind(FuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncionario;","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst ListMarca: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: MarcaApi.GetListPagined.bind(MarcaApi) });\r\n\r\n    const columns: ColumnProps<Marca>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={MarcaApi.Excluir.bind(MarcaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListMarca;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={PaisApi.Excluir.bind(PaisApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import { Produto } from '../../models/Movimentos/Produto';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/produtos';\r\n\r\nclass Api extends ApiBase<Produto>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ProdutoApi = new Api();","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\n\r\n const ListProduto: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ProdutoApi.GetListPagined.bind(ProdutoApi) \r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Produto',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ProdutoApi.Excluir.bind(ProdutoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListProduto;","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ServicoApi.GetListPagined.bind(ServicoApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Servico',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ServicoApi.Excluir.bind(ServicoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { TitularApi } from '../../../../apis/Pessoas/AssociadoApi';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: TitularApi.GetListPagined.bind(TitularApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={TitularApi.Excluir}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import api from '../Api.configure';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Pessoas/LoginUser';\r\nimport AuthenticatedUser from '../../models/Pessoas/AuthenticatedUser';\r\nimport UserModel from '../../models/Pessoas/UserModel';\r\nimport UserChangePasswordModel from '../../models/Pessoas/UserChangePasswordModel';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\nclass Api extends ApiBase<UserModel>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n\r\n    TryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n        return api.post(endPoint + \"/authorize\", user);\r\n    }\r\n    \r\n    ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n        return api.put(endPoint + \"/Change-Password\", user);\r\n    }\r\n}\r\nexport const UserApi = new Api();\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./FormUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst FormUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUser;\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: UserApi.GetListPagined.bind(UserApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst FormPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: Pais, formikHelpers: FormikHelpers<Pais>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await PaisApi.Update(values);\r\n            } else {\r\n                await PaisApi.Save(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await PaisApi.GetById(id);\r\n            setPais(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(FormPais);\r\n","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst ListUnidadeMedida: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: UnidadeMedidaApi.GetListPagined.bind(UnidadeMedidaApi)});\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Unidade de Medida',\r\n            dataIndex: 'nome',\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={UnidadeMedidaApi.Excluir.bind(UnidadeMedidaApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListUnidadeMedida\r\n","import * as Yup from 'yup';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const UnidadeMedidaSchema = Yup.object().shape<UnidadeMedida>({\r\n    id: Yup.string()\r\n        .max(3, \"O campo Código não deve possuir mais de 3 caracteres.\")\r\n        .min(1, \"O campo Código deve possuir mais de 1 caracter.\")\r\n        .required('O campo Código não pode ser vaziu.'),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Unidade Medida não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\nimport { UnidadeMedidaSchema } from './UnidadeMedidaSchema';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst FormUnidadeMedida: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [unidademedida, setUnidadeMedida] = useState<UnidadeMedida>({ nome: \"\", id: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getUnidadeMedida(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: UnidadeMedida, formikHelpers: FormikHelpers<UnidadeMedida>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UnidadeMedidaApi.Update(values);\r\n            } else {\r\n                await UnidadeMedidaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/unidade-medida\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n\r\n    }\r\n\r\n    async function getUnidadeMedida(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await UnidadeMedidaApi.GetById(id);\r\n            setUnidadeMedida(bdCidade.data);\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/unidade-medida\"\r\n            breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Nova Unida de Medida\", URL: undefined }]}\r\n            initialValues={unidademedida}\r\n            validationSchema={UnidadeMedidaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Unidade Medida\" placeholder=\"Unidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUnidadeMedida;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst FormCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<Cidade>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CidadeApi.Update(values);\r\n            } else {\r\n                await CidadeApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await CidadeApi.GetById(id);\r\n            setCidade(bdCidade.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={EstadoApi.GetById.bind(EstadoApi)}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCidade;\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst FormEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await EstadoApi.Update(values);\r\n            } else {\r\n                await EstadoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await EstadoApi.GetById(id);\r\n            setEstado(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={PaisApi.GetById.bind(PaisApi)}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormEstado;\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await UserApi.GetById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UserApi.Update(values);\r\n            } else {\r\n                await UserApi.Save(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await UserApi.ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Dondição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem ser sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = useMemo(() => props.rowKey ?? \"id\", [props.rowKey]);\r\n    const dataSource = useMemo(() => mapRecord(field.value as any[]), [field.value]);\r\n    const components: TableComponents = useMemo(() => {\r\n        return {\r\n            body: {\r\n                row: (props) => <EditableFormRow {...props} />,\r\n                cell: (props) => <EditableCell {...props} />,\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const errorStyle: React.CSSProperties = useMemo(() => {\r\n        return {\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderRadius: \"5px\",\r\n        }\r\n    }, []);\r\n\r\n    const hasListError = useMemo(() => !Array.isArray(meta.error) && meta.touched && (meta.error?.length ?? \"\") > 2, [meta.error, meta.touched]);\r\n\r\n    const columnsAction = useMemo(() => props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    }), [props.columns]);\r\n\r\n    const columns: ColumnProps<any>[] = useMemo(() => columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    }), [columnsAction])\r\n\r\n    const handleSave = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource]);\r\n\r\n    const handleRemove = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowMode = useCallback(\r\n        (record: RecordTable & any, rowMode: RowMode) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowNew = useCallback(\r\n        () => {\r\n\r\n            let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n            helpers.setValue(mapedDataSource);\r\n        }, [dataSource])\r\n\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n\r\n    \r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nclass Api extends ApiBase<FormaPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FormaPagamentoApi = new Api();","import React, { memo } from 'react'\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { FormaPagamentoApi } from '../../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst RenderSelectionFormaPagamento: React.FC = () => {\r\n\r\n    return (\r\n        <SelectModelOne\r\n            fetchMethod={FormaPagamentoApi.GetById.bind(FormaPagamentoApi)}\r\n            name=\"formaPagamento.id\"\r\n            objectName=\"formaPagamento\"\r\n            keyDescription=\"nome\"\r\n            required={true}\r\n            showLabel={false}\r\n            label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n            errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n            col={{\r\n                inputId: 4,\r\n                btnSearch: 2,\r\n                inputDescription: 18\r\n            }}\r\n            path=\"forma-pagamento\" />\r\n    )\r\n}\r\n\r\nexport default memo(RenderSelectionFormaPagamento);","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport RenderSelectionMode from './RenderSelectionFormaPagamento'\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual (%)\", editable: true,\r\n            render: (text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"600px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <RenderSelectionMode />\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={13}>\r\n                    <Input name=\"nome\" label=\"Nome da Condição de Pagamento\" placeholder=\"Pagamento em 30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <br></br>\r\n            <Divider>Parcelas</Divider>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst FormCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CondicaoPagamentoApi.Update(values);\r\n            } else {\r\n                await CondicaoPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await CondicaoPagamentoApi.GetById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCondicaoPagamento;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FormaPagamentoApi.GetListPagined.bind(FormaPagamentoApi) });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FormaPagamentoApi.Excluir.bind(FormaPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst FormFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await FormaPagamentoApi.Update(values);\r\n            } else {\r\n                await FormaPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdestado = await FormaPagamentoApi.GetById(id);\r\n            setFormaPagamento(bdestado.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFormaPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport FormCategoria from '../../../pages/Movimentos/Categorias/FormCategoria/FormCategoria';\r\nimport FormCliente from '../../../pages/Pessoas/Clientes/FormCliente/FormCliente';\r\nimport FormFornecedor from '../../../pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor';\r\nimport FormFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario';\r\nimport FormFuncionario from '../../../pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario';\r\nimport FormMarca from './../../../pages/Movimentos/Marcas/FormMarca/FormMarca';\r\nimport FormProduto from '../../../pages/Movimentos/Produtos/FormProduto/FormProduto';\r\nimport FormServico from '../../../pages/Movimentos/Servicos/FormServico/FormServico';\r\nimport FormTitular from '../../../pages/Pessoas/Associados/FormTitular/FormTitular';\r\nimport ListCategoria from './../../../pages/Movimentos/Categorias/ListCategoria/ListCategoria';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport ListCliente from '../../../pages/Pessoas/Clientes/ListCliente/ListCliente';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListFornecedor from '../../../pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor';\r\nimport ListFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario';\r\nimport ListFuncionario from '../../../pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario';\r\nimport ListMarca from '../../../pages/Movimentos/Marcas/ListCategoria/ListMarca';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport ListProduto from '../../../pages/Movimentos/Produtos/ListProduto/ListProduto';\r\nimport ListServico from './../../../pages/Movimentos/Servicos/ListServico/ListServico';\r\nimport ListTitular from '../../../pages/Pessoas/Associados/ListTitular/ListTitular';\r\nimport ListUser from '../../../pages/Pessoas/Users/ListUser/ListUser';\r\nimport FormPais from '../../../pages/Cidades/Pais/FormPais/FormPais';\r\nimport ListUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida';\r\nimport FormUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida';\r\nimport FormCidade from '../../../pages/Cidades/Cidade/FormCidade/FormCidade';\r\nimport FormEstado from '../../../pages/Cidades/Estado/FormEstado/FormEstado';\r\nimport FormUser from '../../../pages/Pessoas/Users/FormUser/FormUser';\r\nimport FormCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport FormFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/categoria\" component={ListCategoria} exact />\r\n            <Route path=\"/categoria/edit/:id\" component={FormCategoria} />\r\n            <Route path=\"/categoria/new\" component={FormCategoria} />\r\n\r\n            <Route path=\"/cidade\" component={ListCidade} exact />\r\n            <Route path=\"/cidade/edit/:id\" component={FormCidade} />\r\n            <Route path=\"/cidade/new\" component={FormCidade} />\r\n\r\n            <Route path=\"/cliente\" component={ListCliente} exact />\r\n            <Route path=\"/cliente/edit/:id\" component={FormCliente} />\r\n            <Route path=\"/cliente/new\" component={FormCliente} />\r\n\r\n            <Route path=\"/condicao-pagamento\" component={ListCondicaoPagamento} exact />\r\n            <Route path=\"/condicao-pagamento/edit/:id\" component={FormCondicaoPagamento} />\r\n            <Route path=\"/condicao-pagamento/new\" component={FormCondicaoPagamento} />\r\n\r\n            <Route path=\"/estado\" component={ListEstado} exact />\r\n            <Route path=\"/estado/edit/:id\" component={FormEstado} />\r\n            <Route path=\"/estado/new\" component={FormEstado} />\r\n\r\n            <Route path=\"/forma-pagamento\" component={ListFormaPagamento} exact />\r\n            <Route path=\"/forma-pagamento/edit/:id\" component={FormFormaPagamento} />\r\n            <Route path=\"/forma-pagamento/new\" component={FormFormaPagamento} />\r\n\r\n            <Route path=\"/fornecedor\" component={ListFornecedor} exact />\r\n            <Route path=\"/fornecedor/edit/:id\" component={FormFornecedor} />\r\n            <Route path=\"/fornecedor/new\" component={FormFornecedor} />\r\n\r\n            <Route path=\"/funcao-funcionario\" component={ListFuncaoFuncionario} exact />\r\n            <Route path=\"/funcao-funcionario/edit/:id\" component={FormFuncaoFuncionario} />\r\n            <Route path=\"/funcao-funcionario/new\" component={FormFuncaoFuncionario} />\r\n\r\n            <Route path=\"/funcionario\" component={ListFuncionario} exact />\r\n            <Route path=\"/funcionario/edit/:id\" component={FormFuncionario} />\r\n            <Route path=\"/funcionario/new\" component={FormFuncionario} />\r\n\r\n            <Route path=\"/marca\" component={ListMarca} exact />\r\n            <Route path=\"/marca/edit/:id\" component={FormMarca} />\r\n            <Route path=\"/marca/new\" component={FormMarca} />\r\n\r\n            <Route path=\"/pais\" component={ListPais} exact />\r\n            <Route path=\"/pais/edit/:id\" component={FormPais} />\r\n            <Route path=\"/pais/new\" component={FormPais} />\r\n\r\n            <Route path=\"/produto\" component={ListProduto} exact />\r\n            <Route path=\"/produto/edit/:id\" component={FormProduto} />\r\n            <Route path=\"/produto/new\" component={FormProduto} />\r\n\r\n            <Route path=\"/servico\" component={ListServico} exact />\r\n            <Route path=\"/servico/edit/:id\" component={FormServico} />\r\n            <Route path=\"/servico/new\" component={FormServico} />\r\n\r\n            <Route path=\"/titular\" component={ListTitular} exact />\r\n            <Route path=\"/titular/edit/:id\" component={FormTitular} />\r\n            <Route path=\"/titular/new\" component={FormTitular} />\r\n\r\n            <Route path=\"/user\" component={ListUser} exact />\r\n            <Route path=\"/user/edit/:id\" component={FormUser} />\r\n            <Route path=\"/user/new\" component={FormUser} />\r\n\r\n            <Route path=\"/unidade-medida\" component={ListUnidadeMedida} exact />\r\n            <Route path=\"/unidade-medida/edit/:id\" component={FormUnidadeMedida} />\r\n            <Route path=\"/unidade-medida/new\" component={FormUnidadeMedida} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../../models/Pessoas/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../../services/Authenticate';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await UserApi.TryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout, { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Pessoas/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\" component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}