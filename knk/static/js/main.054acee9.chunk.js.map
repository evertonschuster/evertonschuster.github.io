{"version":3,"sources":["webpack:///./src/components/NationalitySelect/nationality-select-styles.less?585d","components/NationalitySelect/nationality-select-styles.less","webpack:///./src/components/ModalForm/modal-form.less?ad2b","components/ModalForm/modal-form.less","webpack:///./src/pages/Pessoas/Users/Login/LoginUserStyle.less?0cf8","pages/Pessoas/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","hoc/WithFormItem.tsx","layouts/BasicLayout/BasicLayout.tsx","components/WithFormItem/withFormItem.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","hoc/useDebouncedCallback.ts","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","pages/Movimentos/Categorias/FormCategoria/CategoriaSchema.ts","apis/Api.configure.ts","apis/Api.ts","apis/Movimentos/CategoriaApi.ts","components/NationalitySelect/NationalitySelect.tsx","pages/Movimentos/Categorias/FormCategoria/FormCategoria.tsx","models/Pessoas/Pessoa.ts","pages/Pessoas/Clientes/FormCliente/ClienteSchema.ts","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalFormContext.ts","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","apis/Cidades/CidadeApi.ts","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","pages/Pessoas/Clientes/FormCliente/components/GeralForm.tsx","apis/Pessoas/ClienteApi.ts","pages/Pessoas/Clientes/FormCliente/FormCliente.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","apis/Pessoas/Fornecedor.Api.ts","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FuncaoFuncionarioSchema.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","hoc/UseListPagined.ts","apis/Cidades/PaisApi.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx","apis/Movimentos/ServicoApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","apis/Pessoas/FuncionarioApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","pages/Movimentos/Marcas/FormMarca/FormMarcaSchema.ts","apis/Movimentos/MarcaApi.ts","pages/Movimentos/Marcas/FormMarca/FormMarca.tsx","pages/Movimentos/Produtos/FormProduto/ProdutoSchema.ts","apis/Movimentos/ProdutoApi.ts","apis/Movimentos/UnidadeMedidaApi.ts","pages/Movimentos/Produtos/FormProduto/components/FormGeneral.tsx","pages/Movimentos/Produtos/FormProduto/FormProduto.tsx","pages/Movimentos/Servicos/FormServico/ServicoSchema.ts","pages/Movimentos/Servicos/FormServico/components/GeneralForm.tsx","pages/Movimentos/Servicos/FormServico/FormServico.tsx","pages/Pessoas/Associados/FormTitular/TitularSchema.ts","pages/Pessoas/Associados/FormTitular/Components/CreateAssociado.tsx","pages/Pessoas/Associados/FormTitular/Components/Dependente.tsx","apis/Pessoas/AssociadoApi.ts","pages/Pessoas/Associados/FormTitular/FormTitular.tsx","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","pages/Movimentos/Categorias/ListCategoria/ListCategoria.tsx","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Pessoas/Clientes/ListCliente/ListCliente.tsx","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/ListEstado/ListEstado.tsx","pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario.tsx","pages/Movimentos/Marcas/ListCategoria/ListMarca.tsx","pages/Cidades/Pais/ListPais/ListPais.tsx","pages/Movimentos/Produtos/ListProduto/ListProduto.tsx","pages/Movimentos/Servicos/ListServico/ListServico.tsx","pages/Pessoas/Associados/ListTitular/ListTitular.tsx","apis/Pessoas/UserApi.ts","pages/Pessoas/Users/FormUser/FormUser.tsx","pages/Pessoas/Users/ListUser/ListUser.tsx","pages/Cidades/Pais/FormPais/PaisSchema.ts","pages/Cidades/Pais/FormPais/FormPais.tsx","pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida.tsx","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/UnidadeMedidaSchema.ts","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida.tsx","pages/Cidades/Cidade/FormCidade/CidadeSchema.ts","pages/Cidades/Cidade/FormCidade/FormCidade.tsx","pages/Cidades/Estado/FormEstado/EstadoSchema.ts","pages/Cidades/Estado/FormEstado/FormEstado.tsx","pages/Pessoas/Users/FormUser/UserSchema.ts","pages/Pessoas/Users/FormUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/FormUser/Components/ChangePassword.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/Percentual.tsx","apis/CondicaoPagamento/FormaPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/RenderSelectionFormaPagamento.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento.tsx","pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Pessoas/Users/Login/LoginUserSchema.ts","pages/Pessoas/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","disabled","ContentApp","props","Content","style","display","flex","alignItems","flexWrap","children","history","createHistory","basename","process","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","background","padding","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","Field","propsConf","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","withFormItem","basicLayoutContext","isViewMode","isDisabled","anotherProps","validateStatus","help","name","label","required","autoComplete","width","WithItemNone","showLabel","ItemFormRender","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","useEffect","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","mensagem","Array","isArray","length","errorArray","textAlign","setFieldError","reduce","p","c","find","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","FormikForm","forwardRef","ref","useHistory","useFormikContext","keyLocalStorage","toLowerCase","Modal","confirm","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","values","ceatedDate","Date","formData","savedForm","setValues","initialValues","onKeyUp","onKeyDown","isSubmitting","isLoading","zIndex","height","margin","left","top","position","fontSize","color","isFunction","paddingTop","flexDirection","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","backPath","submitForm","withRouter","childRef","formikHelpers","a","onSubmit","enableReinitialize","keyEvent","charCode","keyCode","CategoriaSchema","Yup","shape","nome","max","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","ApiBase","endPoint","EndPoint","t","post","put","id","get","toString","delete","query","NATIONALITY_TYPE","CategoriaApi","FormCategoria","categoria","setCategoria","loading","setLoading","match","params","Update","Save","GetById","bdCategoria","getCategoria","CrudFormLayout","validationSchema","placeholder","readOnly","SEXO","ESTADO_CIVIL","TIPO_PESSOA","NationalitySelect","useField","field","meta","helpers","nameIsBrasileiro","brasileiroHelpers","value","selectedValue","setSelectedValue","BRASILEIRO","ESTRANGEIRO","touched","Group","compact","onSelect","setValue","Option","hidden","regexCPF","ClienteSchema","min","apelido","bairro","cep","complemento","observacao","cpfcpnj","when","nacionalidade","schema","matches","dataNascimento","email","endereco","estadoCivil","tipo","Juridica","limiteCredito","typeError","rgInscricaoEstadual","sexo","telefone","cidadeId","numero","condicaoPagamentoId","path","ModalFormContext","state","setState","ModalFormContextProvider","CloseForm","setVisible","visible","concat","wrapClassName","destroyOnClose","errorMessage","noSelection","SelectMultiple","description","setDescription","keyId","idIsInt","keyDescription","objectName","helpersObject","setSubmitting","showDescription","getDesciptionValues","fetchMethod","respose","handleClick","onChangeId","setTouched","onBlurId","col","inputId","onChange","onBlur","target","btnSearch","inputDescription","SelectOne","isNaN","Number","CidadeApi","CondicaoPagamentoApi","GeralForm","fieldTipoPessoa","helperIsBrasileiro","fieldNacionalidade","helperNacionalidade","helperEstadoCivil","helperSexo","Fisica","bind","format","rows","ClienteApi","FormCliente","isBrasileiro","cliente","setCliente","bdpais","getCliente","FornecedorSchema","contato","FornecedorApi","FormFornecedor","fornecedor","setFornecedor","bdFornecedor","getFornecedor","FuncaoFuncionarioSchema","cargaHoraria","FuncaoFuncionarioApi","FormFuncaoFuncionario","requerCNH","descricao","funcaofuncionario","setFuncaofuncionario","bdFuncaofuncionario","getFuncaoFuncionario","checkedChildren","unCheckedChildren","FuncionarioSchema","nullable","cnh","funcaoFuncionario","dataValidadeCNH","funcaoFuncionarioId","UseListPagined","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","total","dataSource","responseBack","setResponseBack","getDataBack","getListPagined","totalItem","result","valuesFilter","requestResult","reflesh","PaisApi","SelectModelMore","setDataSource","GetListPagined","onSearch","text","filter","md","filterOption","newSelection","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","setData","helper","columns","render","record","placement","oldData","onRemoveClick","old","lefJoin","ee","ServicoApi","fieldFuncaoFuncionario","fieldCNH","dataIndex","FuncionarioApi","FormFuncionario","funcionario","setFuncionario","Funcionario","bdFuncionario","getFuncionario","MarcaSchema","MarcaApi","FormMarca","marca","setMarca","bdMarca","getMarca","ProdutoSchema","marcaId","quantidade","quantidadeMinima","valorCompra","valorVenda","categoriaId","unidadeMedidaId","codigoBarras","referencia","ProdutoApi","UnidadeMedidaApi","FormGeneral","helperTaxa","metaValorVenda","helperValorVenda","metaValorCompra","valorVendaAtencao","setValorVendaAtencao","parser","replace","taxa","FormProduto","produto","setProduto","bdProduto","getProduto","ServicoSchema","valor","GeneralForm","FormServico","funcionarios","servico","setServico","Servico","bdServico","getServico","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","showModal","onSave","onCancelForm","resetForm","handleSubmit","Dependente","indexEvent","dependentes","indexRow","setFieldValue","onRemoveAssocido","setShowModal","onSaveAssociado","insert","justifyContent","bordered","rowKey","arrayHelpers","item","TitularApi","FormTitular","titular","setTitular","bdestado","getTitular","dashed","isSelectMode","keyProp","ListSelectedItem","setRecord","Edit","deleteFunction","Delete","showExluir","rowSelection","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","tableProps","success","List","okType","okButtonProps","autoFocus","cancelButtonProps","pagination","page","onRow","useFixedHeader","filterValues","setFilterValues","onPressEnter","New","paddingBottom","ListCategoria","Excluir","ListCidade","useMemo","ListCliente","ListCondicaoPagamento","EstadoApi","ListEstado","ListFornecedor","Intl","NumberFormat","minimumFractionDigits","ListFuncaoFuncionario","ListFuncionario","ListMarca","Text","Typography","ListProduto","ListServico","Menus","UserApi","ListUser","PaisSchema","ddi","sigla","pais","setPais","getPais","ListUnidadeMedida","UnidadeMedidaSchema","FormUnidadeMedida","unidademedida","setUnidadeMedida","bdCidade","getUnidadeMedida","CidadeSchema","ddd","estadoId","FormCidade","cidade","setCidade","getCidade","EstadoSchema","uf","paisId","FormEstado","estado","setEstado","getEstado","UserSchema","phoneNumber","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","ChangePasswordUser","initialErrors","FormUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","ty","toFixed","init","every","valid","RowMode","TypeAttribute","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","rowIndex","number","handleRowMode","edit","handleRemove","new","onNewRow","mapRecord","components","body","row","cell","errorStyle","borderWidth","borderStyle","borderColor","borderRadius","hasListError","columnsAction","editable","onCell","useCallback","dataSourceNew","handleRowNew","mapedDataSource","now","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","FormaPagamentoApi","CondicaoPagamentoGeneral","Math","round","FormCondicaoPagamento","condicaopagamento","setCondicaoPagamento","getCondicaoPagamento","ListFormaPagamento","FormaPagamentoSchema","FormFormaPagamento","formapagamento","setFormaPagamento","getFormaPagamento","RoutePath","component","exact","ListPais","FormPais","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","TryLoginUser","xs","sm","lg","xl","xxl","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.054acee9.chunk.js","sourcesContent":["var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./nationality-select-styles.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".nationality-select {\\n  flex: 1;\\n  display: flex !important;\\n}\\n.nationality-select .ant-select-selection {\\n  flex: 1;\\n}\\n.nationality-group {\\n  display: flex !important;\\n  flex: 1;\\n  margin-top: 5px !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./modal-form.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".modal-wrap .ant-modal-content {\\n  min-height: 80%;\\n}\\n.modal-wrap .ant-modal-body {\\n  padding: 0;\\n}\\n.modal-wrap .ant-modal-body .form-application-container {\\n  margin: 0 !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n        >\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\">\r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"Categoria\">\r\n                        <Link to=\"/categoria\">Categoria</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Cliente\">\r\n                        <Link to=\"/cliente\">Clientes</Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"CondicaoPagamento\"\r\n                        title={\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FormaPagamentoCrud\">\r\n                            <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                    <Menu.Item key=\"Fornecedor\">\r\n                        <Link to=\"/fornecedor\">Fornecedores</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"FuncaoFuncionario\">\r\n                        <Link to=\"/funcao-funcionario\">Função Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Funcionario\">\r\n                        <Link to=\"/funcionario\">Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Marca\">\r\n                        <Link to=\"/marca\">Marcas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Produto\">\r\n                        <Link to=\"/produto\">Produtos</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Servico\">\r\n                        <Link to=\"/servico\">Serviços</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"unidadeMedidaCrud\">\r\n                        <Link to=\"/unidade-medida\">Unidade de medidas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuários</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"Movimento\"\r\n                    disabled={true}\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"shop\" />\r\n                            <span>Movimento</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"venda\">\r\n                        <Link to=\"/venda\">Vendas</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"compra\">\r\n                        <Link to=\"/compra\">Compras</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                </SubMenu>\r\n\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            flex: \"1\",\r\n            alignItems: \"stretch\",\r\n            flexWrap: \"wrap\",\r\n        }}>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory({\r\n    basename: process.env.PUBLIC_URL\r\n});","import AuthenticatedUser from \"../models/Pessoas/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\nexport declare const ValidateStatuses: [\"success\", \"warning\", \"error\", \"validating\", \"\"];\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n    validateStatus?: typeof ValidateStatuses[number];\r\n    help?: string;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    var anotherProps: any = {} as any;\r\n    if (props.validateStatus) {\r\n        anotherProps.validateStatus = props.validateStatus;\r\n        anotherProps.help = props.help;\r\n    }\r\n\r\n\r\n    return (\r\n        <FormItem\r\n            name={props.name}\r\n            label={props.label || \"\"}\r\n            required={props.required}\r\n            className=\"form-custom-item\"\r\n            {...anotherProps}\r\n        >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field,] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <HeaderApp breadcrumbList={breadcrumb} />\r\n                    <PerfectScrollbar\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flex: \"1\",\r\n                            background: \"#F0F2F5\"\r\n                        }} >\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik?: FormikHelpers<any> | null, response?: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        formik?.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem) && mensagem.length > 0) {\r\n                let errorArray: any[] = errors[element];\r\n\r\n                if (errorArray.length > 0) {\r\n                    mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                    formik?.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n                }\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element) && mensagem.length > 0) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n    initialValues: any;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues({ ...props.initialValues, ...savedForm.formData });\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    initialValues={props.initialValues}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import * as Yup from 'yup';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const CategoriaSchema = Yup.object().shape<Categoria>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Categoria não pode ser vaziu.')\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if ((error.response!.data!.code === 422 || error.response.status === 422) ||\r\n            (error.response!.data!.code === 400 || error.response.status === 400)) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import { AxiosResponse } from 'axios';\r\nimport api from './Api.configure';\r\nimport { IBaseEntity, PaginationResult, PaginationQuery } from '../models/BaseEntity';\r\n\r\nexport class ApiBase<T extends IBaseEntity<any>> {\r\n\r\n    EndPoint: string;\r\n\r\n    constructor(endPoint: string) {\r\n        this.EndPoint = endPoint;\r\n    }\r\n\r\n\r\n    Save(t: T): Promise<AxiosResponse<any>> {\r\n        return api.post(this.EndPoint, t);\r\n    }\r\n\r\n    Update(t: T): Promise<AxiosResponse<any>> {\r\n        return api.put(`${this.EndPoint}/${t.id}`, t);\r\n    }\r\n\r\n    GetById(id: number): Promise<AxiosResponse<T>> {\r\n        return api.get(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    Excluir(id: number): Promise<AxiosResponse<any>> {\r\n        return api.delete(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    GetListPagined(query: PaginationQuery): Promise<AxiosResponse<PaginationResult<T>>> {\r\n        return api.post(`${this.EndPoint}/list`, query);\r\n    }\r\n}\r\n\r\n","import { Categoria } from '../../models/Movimentos/Categoria';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/categoria';\r\n\r\nclass Api extends ApiBase<Categoria>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CategoriaApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport Select from 'antd/lib/select'\r\nimport { Input, Form } from 'antd'\r\nimport './nationality-select-styles.less'\r\nimport { ItemFormRender } from '../../hoc/WithFormItem'\r\nimport { useField } from 'formik'\r\n\r\n\r\nexport interface Props {\r\n    name: string;\r\n    nameIsBrasileiro: string;\r\n    label: string;\r\n    placeholder?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport enum NATIONALITY_TYPE {\r\n    BRASILEIRO = \"Brasileiro\",\r\n    ESTRANGEIRO = \"Estrangeiro\"\r\n}\r\n\r\nconst NationalitySelect: React.FC<Props> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , brasileiroHelpers] = useField(props.nameIsBrasileiro);\r\n    const [selectedValue, setSelectedValue] = useState(field.value)\r\n\r\n    useEffect(() => {\r\n        setSelectedValue(field.value === NATIONALITY_TYPE.BRASILEIRO ? NATIONALITY_TYPE.BRASILEIRO : NATIONALITY_TYPE.ESTRANGEIRO);\r\n    }, [field.value])\r\n\r\n    function onSelect(value: NATIONALITY_TYPE) {\r\n        setSelectedValue(value);\r\n\r\n        if (value === NATIONALITY_TYPE.BRASILEIRO) {\r\n            helpers.setValue(value);\r\n            brasileiroHelpers.setValue(true)\r\n        }\r\n        else {\r\n            helpers.setValue(\"\");\r\n            brasileiroHelpers.setValue(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form.Item\r\n            className=\"select-model-one-style-item\"\r\n            validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n            help={meta.error && meta.touched ? meta.error : \"\"}>\r\n            <ItemFormRender label={props.label} showLabel={true} required={props.required}>\r\n\r\n                <Input.Group compact className=\"nationality-group\">\r\n                    <Select\r\n                        onSelect={onSelect}\r\n                        value={selectedValue}\r\n                        className=\"nationality-select\">\r\n                        <Select.Option value={NATIONALITY_TYPE.BRASILEIRO}>{NATIONALITY_TYPE.BRASILEIRO}</Select.Option >\r\n                        <Select.Option value={NATIONALITY_TYPE.ESTRANGEIRO}>{NATIONALITY_TYPE.ESTRANGEIRO}</Select.Option >\r\n                    </Select>\r\n                    <Input style={{ width: '80%' }} hidden={selectedValue === NATIONALITY_TYPE.BRASILEIRO} {...field} placeholder={props.placeholder} />\r\n                </Input.Group>\r\n\r\n            </ItemFormRender>\r\n        </Form.Item>\r\n    )\r\n}\r\n\r\nexport default NationalitySelect\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaSchema } from './CategoriaSchema';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nconst FormCategoria: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCategoria(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Categoria, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await CategoriaApi.Update(values);\r\n            } else {\r\n                await CategoriaApi.Save(values);\r\n            }\r\n            props.history.push(\"/categoria\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCategoria(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCategoria = await CategoriaApi.GetById(id);\r\n            setCategoria(bdCategoria.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/categoria\"\r\n            breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: props.match.params.id ? \"Edição da Categoria\" : \"Nova Categoria\", URL: undefined }]}\r\n            initialValues={categoria}\r\n            validationSchema={CategoriaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={9}>\r\n                    <Input name=\"nome\" label=\"Categoria\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCategoria;\r\n","\r\nimport { BaseEntity } from './../BaseEntity';\r\nexport interface Pessoa extends BaseEntity {\r\n    apelido?: string | null,\r\n    bairro?: string | null,\r\n    cep?: string | null,\r\n    cidadeId?: number | null;\r\n    complemento?: string | null,\r\n    cpfcpnj?: string | null,\r\n    email?: string | null,\r\n    endereco?: string | null,\r\n    nome?: string | null,\r\n    numero?: string | null,\r\n    observacao?: string | null,\r\n    rgInscricaoEstadual?: string | null,\r\n    telefone?: string | null,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}","import * as Yup from 'yup';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\n// const regexCPFV1 = /(^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$)|(^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}$)/;\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const ClienteSchema = Yup.object().shape<Cliente>({\r\n    nome: Yup.string()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O campo deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string().when(\"nacionalidade\", (nacionalidade: NATIONALITY_TYPE, schema: any) => {\r\n        if (nacionalidade === NATIONALITY_TYPE.BRASILEIRO) {\r\n            return Yup.string()\r\n                .required(\"Informe o CPF/CNPJ.\")\r\n                .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n                .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n                .matches(regexCPF, \"CPF/CNPJ não é válido.\")\r\n        }\r\n    }),\r\n\r\n    dataNascimento: Yup.date()\r\n        .required(\"Informe a data.\")\r\n        .max(new Date(), \"Data inválida.\"),\r\n\r\n    email: Yup.string()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    estadoCivil: Yup.mixed()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string();\r\n            }\r\n\r\n            return Yup.string().required('Informe o Estado Civíl.')\r\n        }),\r\n\r\n    limiteCredito: Yup.number()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode ser negativo\"),\r\n\r\n    nacionalidade: Yup.string()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string();\r\n            }\r\n\r\n            return Yup.string()\r\n                .required('Informe a Nacionalidade.')\r\n                .min(5, \"A Nacionalidade deve possuir mais de 5 caracteres.\")\r\n                .max(60, \"A Nacionalidade não deve possuir mais de 60 caracteres.\")\r\n        }),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n    sexo: Yup.mixed()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string();\r\n            }\r\n\r\n            return Yup.string().required(\"Informe o sexo.\")\r\n        }),\r\n\r\n    telefone: Yup.string()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number().required(\"Informe a Condição de pagemento.\"),\r\n\r\n});","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, memo, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport \"./modal-form.less\"\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                wrapClassName=\"modal-wrap\"\r\n                className=\"moda-container\"\r\n                width=\"80%\"\r\n                style={{ top: 10, }}\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    idIsInt?: boolean;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const keyId = props.keyId ?? \"id\";\r\n    const idIsInt = props.idIsInt ?? true;\r\n    const keyDescription = props.keyDescription ?? \"nome\";\r\n    const required = props.required ?? true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: any | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            {idIsInt ?\r\n                                <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                                :\r\n                                <InputAntd value={meta.value} onChange={(e) => onChangeId(e.target.value)} onBlur={onBlurId} ></InputAntd>\r\n                            }\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? { [keyId]: field.value } : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<CondicaoPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CondicaoPagamentoApi = new Api();","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport NationalitySelect, { NATIONALITY_TYPE } from '../../../../../components/NationalitySelect/NationalitySelect';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const [fieldTipoPessoa] = useField<TIPO_PESSOA>(\"tipo\");\r\n    const [, , helperIsBrasileiro] = useField<boolean>(\"IsBrasileiro\");\r\n    const [fieldNacionalidade, , helperNacionalidade] = useField<NATIONALITY_TYPE>(\"nacionalidade\");\r\n    const [, , helperEstadoCivil,] = useField(\"estadoCivil\");\r\n    const [, , helperSexo] = useField(\"sexo\");\r\n\r\n    useEffect(() => {\r\n\r\n        if (fieldTipoPessoa.value === TIPO_PESSOA.Fisica) {\r\n            helperEstadoCivil.setValue(\"\");\r\n            helperSexo.setValue(\"\");\r\n        } else {\r\n            helperEstadoCivil.setValue(undefined);\r\n            helperSexo.setValue(undefined);\r\n        }\r\n        helperNacionalidade.setValue(NATIONALITY_TYPE.BRASILEIRO);\r\n        helperIsBrasileiro.setValue(true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [fieldTipoPessoa.value]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Cliente\" placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Data Nascimento\" : \"Data de Fundação\"} placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n\r\n                <Col span={6} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" required></NationalitySelect>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input\r\n                        name=\"rgInscricaoEstadual\"\r\n                        label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? `RG${fieldNacionalidade.value === NATIONALITY_TYPE.BRASILEIRO ? \"\" : \" (Documento)\"}` : `Inscrição Estadual`}\r\n                        placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"}\r\n                        required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required={fieldNacionalidade.value === NATIONALITY_TYPE.BRASILEIRO} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Cliente } from '../../models/Pessoas/Cliente';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/clientes';\r\n\r\nclass Api extends ApiBase<Cliente>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ClienteApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { ClienteSchema } from './ClienteSchema';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FormikHelpers } from 'formik';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\n\r\nconst FormCliente: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [cliente, setCliente] = useState<Cliente>({\r\n        apelido: \"\",\r\n        isBrasileiro: true,\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cpfcpnj: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: \"\",\r\n        observacao: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Fisica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined,\r\n        numero: \"\"\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCliente(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(cliente: Cliente, formikHelpers: FormikHelpers<Cliente>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await ClienteApi.Update(cliente);\r\n            } else {\r\n                await ClienteApi.Save(cliente);\r\n            }\r\n            props.history.push(\"/cliente\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCliente(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await ClienteApi.GetById(id);\r\n            setCliente(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cliente\"\r\n            breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: props.match.params.id ? \"Edição do Cliente\" : \"Novo Cliente\", URL: undefined }]}\r\n            initialValues={cliente}\r\n            validationSchema={ClienteSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCliente;\r\n","import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor>({\r\n    nome: Yup.string()\r\n        .max(60, \"O Cliente não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Cliente deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .max(60, \"O Apelido não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    email: Yup.string()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n\r\n    limiteCredito: Yup.number()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode ser negativo\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n\r\n    telefone: Yup.string()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number().required(\"Informe a Condição de pagemento.\"),\r\n\r\n    contato: Yup.string()\r\n        .max(60, \"O Contato não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Contato deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n});\r\n","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    console.log(useFormikContext())\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Fornecedor } from '../../models/Pessoas/Fornecedor';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/fornecedores';\r\n\r\nclass Api extends ApiBase<Fornecedor>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FornecedorApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [fornecedor, setFornecedor] = useState<Fornecedor>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        contato: \"\",\r\n        cpfcpnj: \"\",\r\n        email: \"\",\r\n        endereco: \"\",\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nome: \"\",\r\n        numero: \"\",\r\n        observacao: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Juridica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(fornecedor: Fornecedor, formikHelpers: FormikHelpers<Fornecedor>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FornecedorApi.Update(fornecedor);\r\n            } else {\r\n                await FornecedorApi.Save(fornecedor);\r\n            }\r\n            props.history.push(\"/fornecedor\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFornecedor(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFornecedor = await FornecedorApi.GetById(id);\r\n            setFornecedor(bdFornecedor.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: props.match.params.id ? \"Edição do Fornecedor\" : \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import * as Yup from 'yup';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const FuncaoFuncionarioSchema = Yup.object().shape<FuncaoFuncionario>({\r\n    id: Yup.number(),\r\n    \r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Função do Funcionário não pode ser vaziu.'),\r\n\r\n    cargaHoraria: Yup.number()\r\n        .min(0.0001,\"A Carga Horária não pode ser igual ou inferior a 0.\")\r\n        .required('A Carga Horária deve ser informada.'),\r\n    \r\n});\r\n","import { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcao-funcionarios';\r\n\r\nclass Api extends ApiBase<FuncaoFuncionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncaoFuncionarioApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, Switch, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { FuncaoFuncionarioSchema } from './FuncaoFuncionarioSchema';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormFuncaoFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [funcaofuncionario, setFuncaofuncionario] = useState<FuncaoFuncionario>({\r\n        nome: \"\",\r\n        requerCNH: false,\r\n        descricao: \"\",\r\n        cargaHoraria: undefined,\r\n        observacao: \"\"\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncaoFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FuncaoFuncionario, formikHelpers: FormikHelpers<FuncaoFuncionario>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncaoFuncionarioApi.Update(values);\r\n            } else {\r\n                await FuncaoFuncionarioApi.Save(values);\r\n            }\r\n            props.history.push(\"/funcao-funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFuncaoFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncaofuncionario = await FuncaoFuncionarioApi.GetById(id);\r\n            setFuncaofuncionario(bdFuncaofuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcao-funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: props.match.params.id ? \"Edição da Função Funcionário\" :\"Nova Função Funcionário\", URL: undefined }]}\r\n            initialValues={funcaofuncionario}\r\n            validationSchema={FuncaoFuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Função Funcionário\" placeholder=\"técnico\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputNumber name=\"cargaHoraria\" label=\"Carga Horária\" placeholder=\"8\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Switch name=\"requerCNH\" label=\"Requer CNH?\" checkedChildren=\"Requer\" unCheckedChildren=\"Opcional\" ></Switch>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    )\r\n}\r\n\r\nexport default FormFuncaoFuncionario\r\n","import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport { FuncaoFuncionario } from './../../../../models/Pessoas/FuncaoFuncionario';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O campo deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    dataNascimento: Yup.date()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .required(\"Informe a data.\")\r\n        .max(new Date(), \"Data inválida.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    estadoCivil: Yup.mixed().nullable().required('Informe o Estado Civíl.'),\r\n\r\n    nacionalidade: Yup.string()\r\n        .nullable()\r\n        .required('Informe a Nacionalidade.')\r\n        .min(5, \"A Nacionalidade deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"A Nacionalidade não deve possuir mais de 60 caracteres.\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n    sexo: Yup.mixed().nullable().required(\"Informe o sexo.\"),\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .nullable().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    cnh: Yup.string()\r\n        .nullable()\r\n        .max(9, \"A CNH não deve possuir mais de 9 caracteres.\")\r\n        .when(\"funcaoFuncionario\", (funcaoFuncionario: FuncaoFuncionario, schema: any) => {\r\n            if (!funcaoFuncionario || (funcaoFuncionario && !funcaoFuncionario.requerCNH)) {\r\n                return schema;\r\n            }\r\n\r\n            return schema\r\n                .typeError(\"Informe um valor válido.\")\r\n                .required(\"Informe a CNH.\");\r\n        }),\r\n\r\n    dataValidadeCNH: Yup.date()\r\n        .nullable()\r\n        .when([\"funcaoFuncionario\", \"cnh\"], (funcaoFuncionario: FuncaoFuncionario, cnh: string, schema: any) => {\r\n\r\n            if (funcaoFuncionario?.requerCNH === true || cnh?.length > 0) {\r\n                return Yup.date()\r\n                    .typeError(\"Informe um valor válido.\")\r\n                    .required(\"Informe a Data de Validade.\");\r\n            }\r\n\r\n            return Yup.date().nullable();\r\n        }),\r\n\r\n    funcaoFuncionarioId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Função do Funcionario\")\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../apis/Cidades/PaisApi';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi)  });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useState } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Label, ErrorMessage } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: Label;\r\n    columns: ColumnProps<any>[];\r\n    errorMessage: ErrorMessage;\r\n    path: string;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n    const [, meta, helper] = useField<any[]>({ name: props.name + \"SelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        width: 100,\r\n        title: \"Ações\",\r\n        render: renderAction\r\n    })\r\n\r\n    function onSaveClick() {\r\n\r\n\r\n        setData((old) => {\r\n\r\n            let lefJoin = meta.value.filter(e => {\r\n                return old.filter((ee) => ee[keyId] === e[keyId]).length === 0\r\n            });\r\n\r\n            return [...old, ...lefJoin]\r\n        });\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        setData((oldData) => oldData.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={props.fetchMethod}\r\n                            name={props.name + \"SelectionIds\"}\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={props.label}\r\n                            errorMessage={props.errorMessage}\r\n                            path={props.path} />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={data} size=\"small\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { ServicoApi } from '../../../../../apis/Movimentos/ServicoApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { useField } from 'formik';\r\nimport NationalitySelect from '../../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FuncaoFuncionario } from '../../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n    ];\r\n\r\n    const [fieldFuncaoFuncionario] = useField<FuncaoFuncionario>(\"funcaoFuncionario\");\r\n    const [fieldCNH] = useField<string>(\"cnh\");\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Funcionário\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" required></NationalitySelect>\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"nome\"\r\n                        objectName=\"funcaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" required={fieldFuncaoFuncionario?.value?.requerCNH} />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataValidadeCNH\"\r\n                        label=\"Data de Validade\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        required={fieldCNH.value?.length > 0 || fieldFuncaoFuncionario?.value?.requerCNH}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={ServicoApi.GetById.bind(ServicoApi)}\r\n                        label={{ label: \"Serviços\", title: \"Selecione um Serviço\" }}\r\n                        name=\"servicoIds\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Serviço\" }}\r\n                        path=\"servico\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Funcionario } from '../../models/Pessoas/Funcionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcionarios';\r\n\r\nclass Api extends ApiBase<Funcionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncionarioApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario, setFuncionario] = useState<Funcionario>({\r\n        apelido: undefined,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        cidadeId: undefined,\r\n        cnh: undefined,\r\n        complemento: undefined,\r\n        cpfcpnj: undefined,\r\n        dataNascimento: undefined,\r\n        dataValidadeCNH: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        estadoCivil: undefined,\r\n        funcaoFuncionarioId: undefined,\r\n        isBrasileiro: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: undefined,\r\n        numero: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        sexo: undefined,\r\n        telefone: undefined,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(Funcionario: Funcionario, formikHelpers: FormikHelpers<Funcionario>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncionarioApi.Update(Funcionario);\r\n            } else {\r\n                await FuncionarioApi.Save(Funcionario);\r\n            }\r\n            props.history.push(\"/funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncionario = await FuncionarioApi.GetById(id);\r\n            setFuncionario(bdFuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: props.match.params.id ? \"Edição do Funcionário\" : \"Novo Funcionário\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <GeralForm />\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import * as Yup from 'yup';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\n\r\n\r\nexport const MarcaSchema = Yup.object().shape<Marca>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Marca não pode ser vaziu.')\r\n});","import { Marca } from '../../models/Movimentos/Marca';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/marcas';\r\n\r\nclass Api extends ApiBase<Marca>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const MarcaApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaSchema } from './FormMarcaSchema';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst FormMarca: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [marca, setMarca] = useState<Marca>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMarca(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Marca, formikHelpers: FormikHelpers<Marca>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await MarcaApi.Update(values);\r\n            } else {\r\n                await MarcaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/marca\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getMarca(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdMarca = await MarcaApi.GetById(id);\r\n            setMarca(bdMarca.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/marca\"\r\n            breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: props.match.params.id ? \"Edição da marca\" :\"Nova marca\", URL: undefined }]}\r\n            initialValues={marca}\r\n            validationSchema={MarcaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Marca\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormMarca;\r\n","import * as Yup from 'yup';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\n\r\n\r\nexport const ProdutoSchema = Yup.object().shape<Produto>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(60, \"Produto não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Produto deve possuir mais de 5 caracteres.\")\r\n        .required('Produto não pode ser vaziu.'),\r\n\r\n    marcaId: Yup.number()\r\n        .required(\"Informe a Marca.\")\r\n        .min(0, \"Informe a Marca.\"),\r\n\r\n    quantidade: Yup.number()\r\n        .required(\"Informe a Quantidade.\")\r\n        .min(0, \"Informe a Quantidade.\"),\r\n\r\n    quantidadeMinima: Yup.number()\r\n        .required(\"Informe a Quantidade Mínima.\")\r\n        .min(0, \"Informe a Quantidade Mínima.\"),\r\n\r\n    valorCompra: Yup.number()\r\n        .required(\"Informe o Valor de Compra.\")\r\n        .min(0, \"Informe o Valor de Compra.\"),\r\n\r\n    valorVenda: Yup.number()\r\n        .required(\"Informe o Valor de Venda.\")\r\n        .min(0, \"Informe o Valor de Venda.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    unidadeMedidaId: Yup.string()\r\n        .required(\"Informe uma Unidade de Medida.\"),\r\n\r\n    codigoBarras: Yup.string()\r\n        .max(20, \"Codigo de Barras não deve possuir mais de 20 caracteres.\"),\r\n\r\n    referencia: Yup.string()\r\n        .max(60, \"Referência não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Referência deve possuir mais de 5 caracteres.\")\r\n        .required('Referência não pode ser vazia.'),\r\n\r\n    descricao: Yup.string()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import { Produto } from '../../models/Movimentos/Produto';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/produtos';\r\n\r\nclass Api extends ApiBase<Produto>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ProdutoApi = new Api();","import { UnidadeMedida } from '../../models/Movimentos/UnidadeMedida';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/unidades-medida';\r\n\r\nclass Api extends ApiBase<UnidadeMedida>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const UnidadeMedidaApi = new Api();","import React, { useState,useEffect } from 'react'\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { Input, TextArea, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { MarcaApi } from '../../../../../apis/Movimentos/MarcaApi';\r\nimport { Row, Col } from 'antd';\r\nimport { UnidadeMedidaApi } from '../../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\n\r\nconst FormGeneral: React.FC = () => {\r\n\r\n    const [,, helperTaxa] = useField<number>(\"taxa\");\r\n    const [, metaValorVenda, helperValorVenda] = useField<number>(\"valorVenda\");\r\n    const [, metaValorCompra] = useField<number>(\"valorCompra\");\r\n    const [valorVendaAtencao, setValorVendaAtencao] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setValorVendaAtencao(metaValorCompra.value >= metaValorVenda.value);\r\n    }, [metaValorCompra.value, metaValorVenda.value]);\r\n\r\n    function calculeValorTaxa(valorVenda: number = 0) {\r\n        let taxa = (valorVenda - metaValorCompra.value) / (metaValorCompra.value ) * 100;\r\n        helperTaxa.setValue(taxa);\r\n    }\r\n\r\n    function calculeValorVenda(taxa: number = 0) {\r\n        let valorVenda = metaValorCompra.value * ((taxa / 100) + 1);\r\n        if (isNaN(valorVenda)) {\r\n            return;\r\n        }\r\n        helperValorVenda.setValue(valorVenda);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Produto\" placeholder=\"Produto\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <SelectModelOne\r\n                        fetchMethod={UnidadeMedidaApi.GetById.bind(UnidadeMedidaApi)}\r\n                        name=\"unidadeMedidaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        idIsInt={false}\r\n                        showDescription={false}\r\n                        label={{ title: \"Seleção de Unidade de Medida\", label: \"Unidade de Medida\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Unidade de Medida!\" }}\r\n                        path=\"unidade-medida\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"codigoBarras\" label=\"Codigo Barras\" placeholder=\"Codigo Barras\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"referencia\" label=\"Referência\" placeholder=\"Codigo\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={MarcaApi.GetById.bind(MarcaApi)}\r\n                        name=\"marcaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Marca\", label: \"Marca\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Marca!\" }}\r\n                        path=\"marca\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidadeMinima\" label=\"Quantidade Mínima\" placeholder=\"2\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name=\"valorCompra\" label=\"Valor Compra\" placeholder=\"10,20\" required\r\n                        parser={(value) => value?.replace(/\\$\\s?|(,*)/g, '') || \"\"}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"taxa\" label=\"Margem de lucro (%)\" min={0}  placeholder=\"15,50\" onChange={calculeValorVenda}/>\r\n                </Col>\r\n\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        onChange={calculeValorTaxa}\r\n                        name=\"valorVenda\"\r\n                        label=\"Valor Venda\"\r\n                        placeholder=\"15,50\"\r\n                        required\r\n                        validateStatus={valorVendaAtencao ? \"warning\" : \"\"}\r\n                        help={valorVendaAtencao ? \"Valor de Venda é Inferior ao de Compra\" : \"\"} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidade\" label=\"Quantidade\" placeholder=\"10\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormGeneral\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ProdutoSchema } from './ProdutoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport FormGeneral from './components/FormGeneral';\r\nimport { Modal } from 'antd';\r\n\r\nconst FormProduto: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [produto, setProduto] = useState<Produto>({\r\n        nome: \"\",\r\n        categoriaId: undefined,\r\n        quantidade: undefined,\r\n        quantidadeMinima: undefined,\r\n        valorCompra: undefined,\r\n        valorVenda: undefined,\r\n        taxa: undefined,\r\n        unidadeMedidaId: undefined,\r\n        codigoBarras: \"\",\r\n        referencia: \"\",\r\n        marcaId: undefined,\r\n        descricao: \"\",\r\n        observacao: \"\"\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getProduto(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmitConfirm(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n\r\n        if (produto.valorCompra && produto.valorVenda && (produto.valorCompra <= produto.valorVenda)) {\r\n            await onSubmit(produto, formikHelpers);\r\n\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Valor de Venda inconsistente\",\r\n            content: \"O Valor de Venda é inferior ao valor de compra\",\r\n            onOk: () => onSubmit(produto, formikHelpers)\r\n        })\r\n    }\r\n\r\n    async function onSubmit(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ProdutoApi.Update(produto);\r\n            } else {\r\n                await ProdutoApi.Save(produto);\r\n            }\r\n\r\n            props.history.push(\"/produto\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getProduto(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdProduto = await ProdutoApi.GetById(id);\r\n\r\n            let valorVenda = bdProduto.data.valorVenda ?? 0;\r\n            let valorCompra = bdProduto.data.valorCompra ?? 0;\r\n            setProduto({ ...bdProduto.data, taxa: (valorVenda - valorCompra) / (valorCompra) * 100 });\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/produto\"\r\n            breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: props.match.params.id ? \"Edição do Produto\" : \"Novo Produto\", URL: undefined }]}\r\n            initialValues={produto}\r\n            validationSchema={ProdutoSchema}\r\n            onSubmit={onSubmitConfirm}\r\n        >\r\n\r\n            <FormGeneral />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormProduto\r\n","import * as Yup from 'yup';\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\n\r\n\r\nexport const ServicoSchema = Yup.object().shape<Servico>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(60, \"Serviço não deve possuir mais de 60 caracteres.\")\r\n        .required('Serviço não pode ser vaziu.'),\r\n\r\n    valor: Yup.number()\r\n        .min(-0.00001, \"O valor não pode ser negativo.\")\r\n        .required(\"Informe o valor.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    descricao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import React, {  } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TextArea } from './../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Funcionario } from './../../../../../models/Pessoas/Funcionario';\r\n\r\nconst columns: ColumnProps<Funcionario>[] = [\r\n    {\r\n        title: 'Funcionário',\r\n        dataIndex: 'nome',\r\n    },\r\n    {\r\n        title: 'Idade',\r\n        dataIndex: 'idade',\r\n    },\r\n    {\r\n        title: 'Função',\r\n        dataIndex: 'funcaoFuncionario.nome',\r\n    },\r\n];\r\n\r\nconst GeneralForm: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Serviço\" placeholder=\"Serviço\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <InputNumber name=\"valor\" label=\"Valor\" required min={0}/>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoriaa!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={3} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"oservacao\" label=\"Observação\" rows={3} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        label={{ label: \"Funcionários\", title: \"Selecione um Funcionário\" }}\r\n                        name=\"funcionarioIds\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um funcionário\" }}\r\n                        path=\"funcionario\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeneralForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ServicoSchema } from './ServicoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport GeneralForm from './components/GeneralForm';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormServico: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [servico, setServico] = useState<Servico>({\r\n        nome: \"\",\r\n        valor: undefined,\r\n        categoriaId: undefined,\r\n        descricao: undefined,\r\n        observacao: undefined,\r\n        funcionarios: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getServico(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n\r\n    async function onSubmit(Servico: Servico, formikHelpers: FormikHelpers<Servico>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ServicoApi.Update(Servico);\r\n            } else {\r\n                await ServicoApi.Save(Servico);\r\n            }\r\n\r\n            props.history.push(\"/Servico\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getServico(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdServico = await ServicoApi.GetById(id);\r\n\r\n            setServico(bdServico.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/servico\"\r\n            breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: props.match.params.id ? \"Edição do Serviço\" : \"Novo Serviço\", URL: undefined }]}\r\n            initialValues={servico}\r\n            validationSchema={ServicoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeneralForm />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormServico\r\n","import * as Yup from 'yup';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport { Associado } from '../../../../models/Pessoas/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Tooltip, Tag } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from '../../../../../models/Pessoas/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => {\r\n\r\n                return (\r\n                    <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                        <Tag color=\"red\" key={index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => onRemoveAssocido(index)} >Remover</Tag>\r\n                    </Tooltip>)\r\n                    ;\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\", dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                size=\"small\"\r\n                dataSource={formik.values.dependentes || []}\r\n                rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import { Titular } from '../../models/Pessoas/Titular';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\nclass Api extends ApiBase<Titular>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const TitularApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport Dependente from './Components/Dependente';\r\nimport { TitularApi } from '../../../../apis/Pessoas/AssociadoApi';\r\n\r\nconst FormTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await TitularApi.Update(values);\r\n            } else {\r\n                await TitularApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await TitularApi.GetById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/titular\"\r\n            breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n            initialValues={titular}\r\n            validationSchema={TitularSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Id\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Divider dashed >Dependentes</Divider>\r\n\r\n            <Dependente />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormTitular;\r\n","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal, notification } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => { setFormMode(FormMode.Edit); setState(undefined) }}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    try {\r\n\r\n                        props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                        props.tableProps.reflesh();\r\n\r\n                        notification.success({\r\n                            message: \"Registro excluido com sucesso!\",\r\n                            duration: 10\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        errorBack(null, e);\r\n                    }\r\n                    finally {\r\n                        setLoading(false);\r\n                        setFormMode(FormMode.List)\r\n                        hidenExluir();\r\n                    }\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading,\r\n                    autoFocus: true,\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../models/BaseEntity';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\n\r\nconst ListCategoria: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CategoriaApi.GetListPagined.bind(CategoriaApi) });\r\n\r\n    const columns: ColumnProps<Categoria>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CategoriaApi.Excluir.bind(CategoriaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCategoria;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CidadeApi.GetListPagined.bind(CidadeApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'estado.nome',\r\n        },\r\n    ], []);\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CidadeApi.Excluir.bind(CidadeApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport ListForm from '../../../../components/ListForm/ListForm'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\n\r\nconst ListCliente:React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: ClienteApi.GetListPagined.bind(ClienteApi)  });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cliente',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Apelido/Nome Fantasia',\r\n            dataIndex: 'apelido',\r\n        },\r\n        {\r\n            title: 'CPF/CNPJ',\r\n            dataIndex: 'cpfcpnj',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n    \r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ClienteApi.Excluir.bind(ClienteApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListCliente\r\n\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CondicaoPagamentoApi.GetListPagined.bind(CondicaoPagamentoApi) });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CondicaoPagamentoApi.Excluir.bind(CondicaoPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import { Estado } from '../../models/Cidades/Estado';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\nclass Api extends ApiBase<Estado>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const EstadoApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: EstadoApi.GetListPagined.bind(EstadoApi)});\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'pais.nome',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={EstadoApi.Excluir.bind(EstadoApi)}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFornecedor: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FornecedorApi.GetListPagined.bind(FornecedorApi) });\r\n\r\n    const columns: ColumnProps<Fornecedor>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Fornecedor',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Nome Fantasia/Apelido',\r\n            dataIndex: 'bairro',\r\n        },\r\n        {\r\n            title: 'Crédito',\r\n            dataIndex: 'limiteCredito',\r\n            render: (text: any, record: Fornecedor, index: number) => {\r\n                var nf = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                });\r\n                return nf.format(record.limiteCredito ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FornecedorApi.Excluir.bind(FornecedorApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFornecedor;","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFuncaoFuncionario: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: FuncaoFuncionarioApi.GetListPagined.bind(FuncaoFuncionarioApi) });\r\n\r\n    const columns: ColumnProps<FuncaoFuncionario>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Função Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'cargaHoraria',\r\n        },\r\n        {\r\n            title: 'CNH?',\r\n            dataIndex: 'requerCNH',\r\n            render: (text: any, record: FuncaoFuncionario, index: number) => record.requerCNH ? \"Sim\" : \"Não\"\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncaoFuncionarioApi.Excluir.bind(FuncaoFuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncaoFuncionario\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\n\r\nconst ListFuncionario: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FuncionarioApi.GetListPagined.bind(FuncionarioApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'funcionario',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'cargo',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncionarioApi.Excluir.bind(FuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncionario;","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst ListMarca: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: MarcaApi.GetListPagined.bind(MarcaApi) });\r\n\r\n    const columns: ColumnProps<Marca>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={MarcaApi.Excluir.bind(MarcaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListMarca;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={PaisApi.Excluir.bind(PaisApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport { Typography } from 'antd';\r\nconst { Text } = Typography;\r\n\r\nconst ListProduto: React.FC = () => {\r\n    const response = UseListPagined({\r\n        getListPagined: ProdutoApi.GetListPagined.bind(ProdutoApi)\r\n    });\r\n\r\n    const columns: ColumnProps<Produto>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Produto',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'marca.nome',\r\n        },\r\n        {\r\n            title: 'Valor Compra',\r\n            dataIndex: 'valorCompra',\r\n            align:\"right\",\r\n            render: (valorCompra: number, record: Produto) => {\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return format.format(record.valorCompra ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Valor de Venda',\r\n            dataIndex: 'valorVenda',\r\n            align:\"right\",\r\n            render: (valorVenda: number, record: Produto) => {\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                if (record.valorVenda && record.valorCompra && record.valorVenda < record.valorCompra) {\r\n                    return <Text type=\"warning\">{format.format(record.valorVenda)}</Text>\r\n                }\r\n\r\n                return format.format(record.valorVenda ?? 0)\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ProdutoApi.Excluir.bind(ProdutoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListProduto;","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { Servico } from './../../../../models/Movimentos/Servico';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ServicoApi.GetListPagined.bind(ServicoApi) });\r\n\r\n    const columns:ColumnProps<Servico>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n            render:(text: any, record: Servico, index: number) =>{\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return format.format(record.valor ?? 0)\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ServicoApi.Excluir.bind(ServicoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { TitularApi } from '../../../../apis/Pessoas/AssociadoApi';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: TitularApi.GetListPagined.bind(TitularApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={TitularApi.Excluir}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import api from '../Api.configure';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Pessoas/LoginUser';\r\nimport AuthenticatedUser from '../../models/Pessoas/AuthenticatedUser';\r\nimport UserModel from '../../models/Pessoas/UserModel';\r\nimport UserChangePasswordModel from '../../models/Pessoas/UserChangePasswordModel';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\nclass Api extends ApiBase<UserModel>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n\r\n    TryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n        return api.post(endPoint + \"/authorize\", user);\r\n    }\r\n    \r\n    ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n        return api.put(endPoint + \"/Change-Password\", user);\r\n    }\r\n}\r\nexport const UserApi = new Api();\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./FormUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst FormUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUser;\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: UserApi.GetListPagined.bind(UserApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst FormPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: Pais, formikHelpers: FormikHelpers<Pais>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await PaisApi.Update(values);\r\n            } else {\r\n                await PaisApi.Save(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await PaisApi.GetById(id);\r\n            setPais(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: props.match.params.id ? \"Edição do Pais\" : \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(FormPais);\r\n","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst ListUnidadeMedida: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: UnidadeMedidaApi.GetListPagined.bind(UnidadeMedidaApi)});\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Unidade de Medida',\r\n            dataIndex: 'nome',\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={UnidadeMedidaApi.Excluir.bind(UnidadeMedidaApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListUnidadeMedida\r\n","import * as Yup from 'yup';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const UnidadeMedidaSchema = Yup.object().shape<UnidadeMedida>({\r\n    id: Yup.string()\r\n        .max(3, \"O campo Código não deve possuir mais de 3 caracteres.\")\r\n        .min(1, \"O campo Código deve possuir mais de 1 caracter.\")\r\n        .required('O campo Código não pode ser vaziu.'),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Unidade Medida não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\nimport { UnidadeMedidaSchema } from './UnidadeMedidaSchema';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst FormUnidadeMedida: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [unidademedida, setUnidadeMedida] = useState<UnidadeMedida>({ nome: \"\", id: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getUnidadeMedida(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: UnidadeMedida, formikHelpers: FormikHelpers<UnidadeMedida>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UnidadeMedidaApi.Update(values);\r\n            } else {\r\n                await UnidadeMedidaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/unidade-medida\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n\r\n    }\r\n\r\n    async function getUnidadeMedida(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await UnidadeMedidaApi.GetById(id);\r\n            setUnidadeMedida(bdCidade.data);\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/unidade-medida\"\r\n            breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: props.match.params.id ? \"Edição da Unida de Medida\" : \"Nova Unida de Medida\", URL: undefined }]}\r\n            initialValues={unidademedida}\r\n            validationSchema={UnidadeMedidaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Unidade Medida\" placeholder=\"Unidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUnidadeMedida;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst FormCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<Cidade>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CidadeApi.Update(values);\r\n            } else {\r\n                await CidadeApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await CidadeApi.GetById(id);\r\n            setCidade(bdCidade.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: props.match.params.id ? \"Edição da Cidade\" : \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={EstadoApi.GetById.bind(EstadoApi)}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCidade;\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst FormEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await EstadoApi.Update(values);\r\n            } else {\r\n                await EstadoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await EstadoApi.GetById(id);\r\n            setEstado(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: props.match.params.id ? \"Edição do Estado\" : \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={PaisApi.GetById.bind(PaisApi)}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormEstado;\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await UserApi.GetById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UserApi.Update(values);\r\n            } else {\r\n                await UserApi.Save(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await UserApi.ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Dondição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem ser sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = useMemo(() => props.rowKey ?? \"id\", [props.rowKey]);\r\n    const dataSource = useMemo(() => mapRecord(field.value as any[]), [field.value]);\r\n    const components: TableComponents = useMemo(() => {\r\n        return {\r\n            body: {\r\n                row: (props) => <EditableFormRow {...props} />,\r\n                cell: (props) => <EditableCell {...props} />,\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const errorStyle: React.CSSProperties = useMemo(() => {\r\n        return {\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderRadius: \"5px\",\r\n        }\r\n    }, []);\r\n\r\n    const hasListError = useMemo(() => !Array.isArray(meta.error) && meta.touched && (meta.error?.length ?? \"\") > 2, [meta.error, meta.touched]);\r\n\r\n    const columnsAction = useMemo(() => props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    }), [props.columns]);\r\n\r\n    const columns: ColumnProps<any>[] = useMemo(() => columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    }), [columnsAction])\r\n\r\n    const handleSave = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource]);\r\n\r\n    const handleRemove = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowMode = useCallback(\r\n        (record: RecordTable & any, rowMode: RowMode) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowNew = useCallback(\r\n        () => {\r\n\r\n            let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n            helpers.setValue(mapedDataSource);\r\n        }, [dataSource])\r\n\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n\r\n    \r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nclass Api extends ApiBase<FormaPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FormaPagamentoApi = new Api();","import React, { memo } from 'react'\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { FormaPagamentoApi } from '../../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst RenderSelectionFormaPagamento: React.FC = () => {\r\n\r\n    return (\r\n        <SelectModelOne\r\n            fetchMethod={FormaPagamentoApi.GetById.bind(FormaPagamentoApi)}\r\n            name=\"formaPagamento.id\"\r\n            objectName=\"formaPagamento\"\r\n            keyDescription=\"nome\"\r\n            required={true}\r\n            showLabel={false}\r\n            label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n            errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n            col={{\r\n                inputId: 4,\r\n                btnSearch: 2,\r\n                inputDescription: 18\r\n            }}\r\n            path=\"forma-pagamento\" />\r\n    )\r\n}\r\n\r\nexport default memo(RenderSelectionFormaPagamento);","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport RenderSelectionMode from './RenderSelectionFormaPagamento'\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual (%)\", editable: true,\r\n            render: (text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"500px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <RenderSelectionMode />\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={13}>\r\n                    <Input name=\"nome\" label=\"Nome da Condição de Pagamento\" placeholder=\"Pagamento em 30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <br></br>\r\n            <Divider>Parcelas</Divider>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst FormCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CondicaoPagamentoApi.Update(values);\r\n            } else {\r\n                await CondicaoPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await CondicaoPagamentoApi.GetById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: props.match.params.id ? \"Edição da Condição de Pagamento\" :\"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCondicaoPagamento;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FormaPagamentoApi.GetListPagined.bind(FormaPagamentoApi) });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FormaPagamentoApi.Excluir.bind(FormaPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst FormFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await FormaPagamentoApi.Update(values);\r\n            } else {\r\n                await FormaPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdestado = await FormaPagamentoApi.GetById(id);\r\n            setFormaPagamento(bdestado.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName:props.match.params.id ? \"Edição da Forma de Pagamento\" : \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFormaPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport FormCategoria from '../../../pages/Movimentos/Categorias/FormCategoria/FormCategoria';\r\nimport FormCliente from '../../../pages/Pessoas/Clientes/FormCliente/FormCliente';\r\nimport FormFornecedor from '../../../pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor';\r\nimport FormFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario';\r\nimport FormFuncionario from '../../../pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario';\r\nimport FormMarca from './../../../pages/Movimentos/Marcas/FormMarca/FormMarca';\r\nimport FormProduto from '../../../pages/Movimentos/Produtos/FormProduto/FormProduto';\r\nimport FormServico from '../../../pages/Movimentos/Servicos/FormServico/FormServico';\r\nimport FormTitular from '../../../pages/Pessoas/Associados/FormTitular/FormTitular';\r\nimport ListCategoria from './../../../pages/Movimentos/Categorias/ListCategoria/ListCategoria';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport ListCliente from '../../../pages/Pessoas/Clientes/ListCliente/ListCliente';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListFornecedor from '../../../pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor';\r\nimport ListFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario';\r\nimport ListFuncionario from '../../../pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario';\r\nimport ListMarca from '../../../pages/Movimentos/Marcas/ListCategoria/ListMarca';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport ListProduto from '../../../pages/Movimentos/Produtos/ListProduto/ListProduto';\r\nimport ListServico from './../../../pages/Movimentos/Servicos/ListServico/ListServico';\r\nimport ListTitular from '../../../pages/Pessoas/Associados/ListTitular/ListTitular';\r\nimport ListUser from '../../../pages/Pessoas/Users/ListUser/ListUser';\r\nimport FormPais from '../../../pages/Cidades/Pais/FormPais/FormPais';\r\nimport ListUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida';\r\nimport FormUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida';\r\nimport FormCidade from '../../../pages/Cidades/Cidade/FormCidade/FormCidade';\r\nimport FormEstado from '../../../pages/Cidades/Estado/FormEstado/FormEstado';\r\nimport FormUser from '../../../pages/Pessoas/Users/FormUser/FormUser';\r\nimport FormCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport FormFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/categoria\" component={ListCategoria} exact />\r\n            <Route path=\"/categoria/edit/:id\" component={FormCategoria} />\r\n            <Route path=\"/categoria/new\" component={FormCategoria} />\r\n\r\n            <Route path=\"/cidade\" component={ListCidade} exact />\r\n            <Route path=\"/cidade/edit/:id\" component={FormCidade} />\r\n            <Route path=\"/cidade/new\" component={FormCidade} />\r\n\r\n            <Route path=\"/cliente\" component={ListCliente} exact />\r\n            <Route path=\"/cliente/edit/:id\" component={FormCliente} />\r\n            <Route path=\"/cliente/new\" component={FormCliente} />\r\n\r\n            <Route path=\"/condicao-pagamento\" component={ListCondicaoPagamento} exact />\r\n            <Route path=\"/condicao-pagamento/edit/:id\" component={FormCondicaoPagamento} />\r\n            <Route path=\"/condicao-pagamento/new\" component={FormCondicaoPagamento} />\r\n\r\n            <Route path=\"/estado\" component={ListEstado} exact />\r\n            <Route path=\"/estado/edit/:id\" component={FormEstado} />\r\n            <Route path=\"/estado/new\" component={FormEstado} />\r\n\r\n            <Route path=\"/forma-pagamento\" component={ListFormaPagamento} exact />\r\n            <Route path=\"/forma-pagamento/edit/:id\" component={FormFormaPagamento} />\r\n            <Route path=\"/forma-pagamento/new\" component={FormFormaPagamento} />\r\n\r\n            <Route path=\"/fornecedor\" component={ListFornecedor} exact />\r\n            <Route path=\"/fornecedor/edit/:id\" component={FormFornecedor} />\r\n            <Route path=\"/fornecedor/new\" component={FormFornecedor} />\r\n\r\n            <Route path=\"/funcao-funcionario\" component={ListFuncaoFuncionario} exact />\r\n            <Route path=\"/funcao-funcionario/edit/:id\" component={FormFuncaoFuncionario} />\r\n            <Route path=\"/funcao-funcionario/new\" component={FormFuncaoFuncionario} />\r\n\r\n            <Route path=\"/funcionario\" component={ListFuncionario} exact />\r\n            <Route path=\"/funcionario/edit/:id\" component={FormFuncionario} />\r\n            <Route path=\"/funcionario/new\" component={FormFuncionario} />\r\n\r\n            <Route path=\"/marca\" component={ListMarca} exact />\r\n            <Route path=\"/marca/edit/:id\" component={FormMarca} />\r\n            <Route path=\"/marca/new\" component={FormMarca} />\r\n\r\n            <Route path=\"/pais\" component={ListPais} exact />\r\n            <Route path=\"/pais/edit/:id\" component={FormPais} />\r\n            <Route path=\"/pais/new\" component={FormPais} />\r\n\r\n            <Route path=\"/produto\" component={ListProduto} exact />\r\n            <Route path=\"/produto/edit/:id\" component={FormProduto} />\r\n            <Route path=\"/produto/new\" component={FormProduto} />\r\n\r\n            <Route path=\"/servico\" component={ListServico} exact />\r\n            <Route path=\"/servico/edit/:id\" component={FormServico} />\r\n            <Route path=\"/servico/new\" component={FormServico} />\r\n\r\n            <Route path=\"/titular\" component={ListTitular} exact />\r\n            <Route path=\"/titular/edit/:id\" component={FormTitular} />\r\n            <Route path=\"/titular/new\" component={FormTitular} />\r\n\r\n            <Route path=\"/user\" component={ListUser} exact />\r\n            <Route path=\"/user/edit/:id\" component={FormUser} />\r\n            <Route path=\"/user/new\" component={FormUser} />\r\n\r\n            <Route path=\"/unidade-medida\" component={ListUnidadeMedida} exact />\r\n            <Route path=\"/unidade-medida/edit/:id\" component={FormUnidadeMedida} />\r\n            <Route path=\"/unidade-medida/new\" component={FormUnidadeMedida} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../../models/Pessoas/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../../services/Authenticate';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await UserApi.TryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout, { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Pessoas/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\"  component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}