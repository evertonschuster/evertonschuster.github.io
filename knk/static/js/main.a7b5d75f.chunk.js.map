{"version":3,"sources":["webpack:///./src/pages/Pessoas/Users/Login/LoginUserStyle.less?0cf8","pages/Pessoas/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","layouts/BasicLayout/BasicLayout.tsx","hoc/WithFormItem.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalFormContext.ts","components/ModalForm/ModalForm.tsx","hoc/useDebouncedCallback.ts","components/SelectModel/SelectModelOne.tsx","components/WithFormItem/withFormItem.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","apis/Api.ts","apis/Cidades/CidadeApi.ts","apis/Cidades/EstadoApi.ts","pages/Cidades/Cidade/CreateCidade/CidadeSchema.ts","pages/Cidades/Cidade/CreateCidade/CreateCidade.tsx","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/Percentual.tsx","apis/CondicaoPagamento/FormaPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/RenderSelectionFormaPagamento.tsx","models/Pessoas/Pessoa.ts","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento.tsx","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento.tsx","pages/Movimentos/Categorias/FormCategoria/CategoriaSchema.ts","pages/Movimentos/Categorias/FormCategoria/FormCategoria.tsx","pages/Pessoas/Clientes/FormCliente/ClienteSchema.ts","pages/Pessoas/Clientes/FormCliente/components/GeralForm.tsx","pages/Pessoas/Clientes/FormCliente/FormCliente.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FuncaoFuncionarioSchema.ts","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","apis/Movimentos/CategoriaApi.ts","hoc/UseListPagined.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","pages/Movimentos/Marcas/FormMarca/FormMarcaSchema.ts","pages/Movimentos/Marcas/FormMarca/FormMarca.tsx","pages/Movimentos/Produtos/FormProduto/ProdutoSchema.ts","apis/Movimentos/MarcaApi.ts","pages/Movimentos/Produtos/FormProduto/FormProduto.tsx","pages/Movimentos/Servicos/FormServico/ServicoSchema.ts","pages/Movimentos/Servicos/FormServico/FormServico.tsx","apis/Pessoas/AssociadoApi.ts","pages/Pessoas/Associados/CreateTitular/TitularSchema.ts","pages/Pessoas/Associados/CreateTitular/Components/CreateAssociado.tsx","pages/Pessoas/Associados/CreateTitular/Components/Dependente.tsx","pages/Pessoas/Associados/CreateTitular/CreateTitular.tsx","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","pages/Movimentos/Categorias/ListCategoria/ListCategoria.tsx","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","apis/Pessoas/ClienteApi.ts","pages/Pessoas/Clientes/ListCliente/ListCliente.tsx","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","pages/Cidades/Estado/ListEstado/ListEstado.tsx","pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento.tsx","apis/Pessoas/Fornecedor.Api.ts","pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario.tsx","apis/Pessoas/FuncionarioApi.ts","pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario.tsx","pages/Movimentos/Marcas/ListCategoria/ListMarca.tsx","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","apis/Movimentos/ProdutoApi.ts","pages/Movimentos/Produtos/ListProduto/ListProduto.tsx","apis/Movimentos/ServicoApi.ts","pages/Movimentos/Servicos/ListServico/ListServico.tsx","pages/Pessoas/Associados/ListTitular/ListTitular.tsx","pages/Pessoas/Users/ListUser/ListUser.tsx","pages/Cidades/Estado/RegisterEstado/EstadoSchema.ts","pages/Cidades/Estado/RegisterEstado/RegisterEstado.tsx","pages/Cidades/Pais/RegisterPais/PaisSchema.ts","pages/Cidades/Pais/RegisterPais/RegisterPais.tsx","apis/Pessoas/UserApi.ts","pages/Pessoas/Users/RegisterUser/UserSchema.ts","pages/Pessoas/Users/RegisterUser/RegisterUser.tsx","pages/Pessoas/Users/RegisterUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/RegisterUser/Components/ChangePassword.tsx","apis/Movimentos/UnidadeMedida.ts","pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida.tsx","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/UnidadeMedidaSchema.ts","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida.tsx","services/RouterService/Components/RoutePath.tsx","pages/Pessoas/Users/Login/LoginUserSchema.ts","pages/Pessoas/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","disabled","ContentApp","props","Content","style","margin","padding","background","minHeight","children","history","createHistory","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","display","flex","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","isDisabled","name","label","required","autoComplete","width","WithItemNone","showLabel","ItemFormRender","withRouter","basename","value","path","ModalFormContext","state","setState","ModalFormContextProvider","CloseForm","setVisible","visible","useEffect","concat","destroyOnClose","onOk","Array","isArray","length","message","error","errorMessage","noSelection","SelectMultiple","okText","onCancel","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","description","setDescription","keyId","keyDescription","useField","field","meta","helpers","ObjectName","helpersObject","setSubmitting","useFormikContext","showDescription","getDesciptionValues","id","a","fetchMethod","respose","data","setValue","handleClick","validateStatus","touched","help","md","min","onChange","setTouched","textAlign","SelectOne","params","isNaN","Number","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","duration","setErrors","Object","keys","forEach","element","mensagem","errorArray","setFieldError","reduce","p","c","find","values","formikHelpers","onSubmit","onKeyDown","keyEvent","charCode","keyCode","enableReinitialize","isSubmitting","isLoading","zIndex","height","left","top","position","fontSize","color","isFunction","paddingTop","flexDirection","marginRight","backPath","submitForm","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","code","log","ValidationError","this","SaveCidade","cidade","post","UpdateCidade","put","GetCidadeById","get","toString","ExcluirCidade","delete","SaveEstado","estado","UpdateEstado","GetEstadoById","ExcluirEstado","CidadeSchema","Yup","shape","nome","max","ddd","estadoId","nullable","typeError","CreateCidade","setCidade","loading","setLoading","match","bdestado","getCidade","CrudFormLayout","initialValues","validationSchema","placeholder","readOnly","SaveCondicaoPagamento","condicaopagamento","UpdateCondicaoPagamento","GetCondicaoPagamentoById","ExcluirCondicaoPagamento","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","total","ty","toFixed","init","every","valid","RowMode","TypeAttribute","record","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","dataIndex","rowIndex","number","placement","handleRowMode","edit","handleRemove","new","onNewRow","rowKey","useMemo","dataSource","mapRecord","components","body","row","cell","errorStyle","borderWidth","borderStyle","borderColor","borderRadius","hasListError","columnsAction","columns","render","text","col","editable","onCell","useCallback","dataSourceNew","filter","handleRowNew","mapedDataSource","Date","now","bordered","onRow","pagination","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","SaveFormaPagamento","formapagamento","UpdateFormaPagamento","GetFormaPagamentoById","ExcluirFormaPagamento","SEXO","ESTADO_CIVIL","TIPO_PESSOA","CondicaoPagamentoGeneral","toLocaleString","Math","round","CreateCondicaoPagamento","setCondicaoPagamento","getCondicaoPagamento","FormaPagamentoSchema","CreateFormaPagamento","setFormaPagamento","getFormaPagamento","CategoriaSchema","FormCategoria","categoria","getCategoria","ClienteSchema","GeralForm","setFieldValue","Option","Fisica","Juridica","hidden","format","rows","FormCliente","apelido","bairro","cep","complemento","cPFCPNJ","dataNascimento","email","endereco","estadoCivil","limiteCredito","nacionalidade","observacoes","rgInscricaoEstadual","sexo","telefone","tipo","cliente","getCliente","FornecedorSchema","FormFornecedor","fornecedor","getFornecedor","FuncaoFuncionarioSchema","requerCNH","FormFuncaoFuncionario","descricao","funcaofuncionario","getFuncaoFuncionario","checkedChildren","unCheckedChildren","FuncionarioSchema","GetFuncaoFuncionarioById","ExcluirFuncaoFuncionario","GetCategoriaById","ExcluirCategoria","UseListPagined","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","responseBack","setResponseBack","getDataBack","valuesFilter","then","totalItem","result","finally","requestResult","reflesh","SelectModelMore","setDataSource","onSearch","filterOption","onSelect","newSelection","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","setData","helper","oldData","onRemoveClick","old","FormFuncionario","cnh","funcionario","getFuncionario","MarcaSchema","FormMarca","marca","getMarca","ProdutoSchema","marcaId","quantidade","quantidadeMinima","valorCompra","valorVenda","categoriaId","unidadeMedidaId","GetMarcaById","ExcluirMarca","FormProduto","taxa","codigoBarra","referencia","produto","getProduto","parser","replace","ServicoSchema","valor","FormServico","servico","getServico","SaveTitular","titular","UpdateTitular","GetTitularById","ExcluirTitular","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","showModal","onSave","onCancelForm","resetForm","handleSubmit","Dependente","indexEvent","dependentes","indexRow","onRemoveAssocido","setShowModal","onSaveAssociado","insert","justifyContent","arrayHelpers","item","FormTitular","numero","setTitular","getTitular","dashed","isSelectMode","keyProp","ListSelectedItem","setRecord","Edit","deleteFunction","Delete","showExluir","rowSelection","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","tableProps","List","cancelText","okType","okButtonProps","cancelButtonProps","page","useFixedHeader","filterValues","setFilterValues","target","onPressEnter","New","paddingBottom","ListCategoria","ListCidade","ExcluirCliente","ListCliente","ListCondicaoPagamento","ListEstado","ListFormaPagamento","ExcluirFornecedor","ListFornecedor","ListFuncaoFuncionario","ExcluirFuncionario","ListFuncionario","ListMarca","SavePais","pais","UpdatePais","GetPaisById","ExcluirPais","ExcluirProduto","ListProduto","ExcluirServico","ListServico","ListUser","EstadoSchema","uf","paisId","RegisterEstado","setEstado","bdpais","getEstado","PaisSchema","ddi","sigla","setPais","getPais","tryLoginUser","endPoint","UpdateUser","ChangePasswordUser","SaveUser","GetUserById","Menus","UserSchema","phoneNumber","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","initialErrors","RegisterUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","ExcluirUnidadeMedida","ListUnidadeMedida","UnidadeMedidaSchema","FormUnidadeMedida","unidademedida","getUnidadeMedida","RoutePath","component","exact","ListPais","RegisterPais","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","success","xs","sm","lg","xl","xxl","autoFocus","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7b5d75f.chunk.js","sourcesContent":["var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n        >\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\">\r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"Categoria\">\r\n                        <Link to=\"/categoria\">Categoria</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Cliente\">\r\n                        <Link to=\"/cliente\">Clientes</Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"CondicaoPagamento\"\r\n                        title={\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FormaPagamentoCrud\">\r\n                            <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                    <Menu.Item key=\"Fornecedor\">\r\n                        <Link to=\"/fornecedor\">Fornecedores</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"FuncaoFuncionario\">\r\n                        <Link to=\"/funcao-funcionario\">Função Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Funcionario\">\r\n                        <Link to=\"/funcionario\">Funcionários</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"TitularCrud\">\r\n                        <Link to=\"/Titular\">Titulares</Link>\r\n                    </Menu.Item>\r\n                    \r\n                    <Menu.Item key=\"unidadeMedidaCrud\">\r\n                        <Link to=\"/unidade-medida\">Unidade de medidas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Produto\">\r\n                        <Link to=\"/produto\">Produtos</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Servico\">\r\n                        <Link to=\"/servico\">Serviços</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"Marca\">\r\n                        <Link to=\"/marca\">Marcas</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuários</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"Movimento\"\r\n                    disabled={true}\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"shop\" />\r\n                            <span>Movimento</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"venda\">\r\n                        <Link to=\"/venda\">Vendas</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"compra\">\r\n                        <Link to=\"/compra\">Compras</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                </SubMenu>\r\n\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Content\r\n            style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#fff',\r\n                minHeight: \"90%\",\r\n            }}>\r\n\r\n\r\n            {props.children}\r\n\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory();","import AuthenticatedUser from \"../models/Pessoas/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <PerfectScrollbar >\r\n                        <HeaderApp breadcrumbList={breadcrumb} />\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.ObjectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.ObjectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col md={showDescription ? 8 : 19} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber min={0} value={meta.value} onChange={(value) => { helpers.setValue(value); helpers.setTouched(true) }} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={showDescription ? 3 : 5} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col md={13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik: FormikHelpers<any>, response: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n\r\n        formik.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem)) {\r\n                let errorArray: any[] = errors[element]\r\n\r\n                mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                formik.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element)) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Button, Icon } from 'antd';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, isFunction } from 'formik';\r\nimport { Form } from 'formik-antd';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            await props.onSubmit(values, formikHelpers);\r\n\r\n        } catch (e) {\r\n\r\n            errorBack(formikHelpers, e)\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(keyEvent: any) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                {(formik) => (\r\n                    <Form onKeyDown={onKeyDown} >\r\n                        {renderLoading(formik.isSubmitting)}\r\n\r\n                        {isFunction(props.children)\r\n                            ? props.children(formik)\r\n                            : props.children}\r\n\r\n                        < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                            <Col\r\n                                span={5}\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\"\r\n                                }}>\r\n                                <span>Data Criação: __/__/____</span>\r\n                                <span>Data Atualização: __/__/____</span>\r\n                            </Col>\r\n                            <Col>\r\n                                <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => props.history.push(props.backPath)}>Cancelar</Button>\r\n                                <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"./../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if (error.response!.data!.code === 422 || error.response.status === 422) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import api from '../Api';\r\nimport { Cidade } from '../../models/Cidades/Cidade';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nexport function SaveCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, cidade);\r\n}\r\n\r\nexport function UpdateCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, cidade);\r\n}\r\n\r\nexport function GetCidadeById(id: number): Promise<AxiosResponse<Cidade>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCidade(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import { AxiosResponse } from 'axios'\r\nimport api from '../Api';\r\nimport { Estado } from '../../models/Cidades/Estado';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\n\r\nexport function SaveEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, estado);\r\n}\r\n\r\nexport function UpdateEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, estado);\r\n}\r\n\r\nexport function GetEstadoById(id: number): Promise<AxiosResponse<Estado>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirEstado(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { UpdateCidade, SaveCidade, GetCidadeById } from '../../../../apis/Cidades/CidadeApi';\r\nimport { GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst CreateCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCidade(values);\r\n            } else {\r\n                await SaveCidade(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetCidadeById(id);\r\n        setCidade(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetEstadoById}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCidade;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function UpdateCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function GetCondicaoPagamentoById(id: number): Promise<AxiosResponse<CondicaoPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCondicaoPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Dondição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem ser sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = useMemo(() => props.rowKey ?? \"id\", [props.rowKey]);\r\n    const dataSource = useMemo(() => mapRecord(field.value as any[]), [field.value]);\r\n    const components: TableComponents = useMemo(() => {\r\n        return {\r\n            body: {\r\n                row: (props) => <EditableFormRow {...props} />,\r\n                cell: (props) => <EditableCell {...props} />,\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const errorStyle: React.CSSProperties = useMemo(() => {\r\n        return {\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderRadius: \"5px\",\r\n        }\r\n    }, []);\r\n\r\n    const hasListError = useMemo(() => !Array.isArray(meta.error) && (meta.error?.length ?? \"\") > 2, [meta.error]);\r\n\r\n    const columnsAction = useMemo(() => props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    }), [props.columns]);\r\n\r\n    const columns: ColumnProps<any>[] = useMemo(() => columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    }), [columnsAction])\r\n\r\n    const handleSave = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource]);\r\n\r\n    const handleRemove = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowMode = useCallback(\r\n        (record: RecordTable & any, rowMode: RowMode) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowNew = useCallback(\r\n        () => {\r\n\r\n            let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n            helpers.setValue(mapedDataSource);\r\n        }, [dataSource])\r\n\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        console.log(\"MAPEEEEE\")\r\n\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n\r\n    \r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nexport function SaveFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, formapagamento);\r\n}\r\n\r\nexport function UpdateFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, formapagamento);\r\n}\r\n\r\nexport function GetFormaPagamentoById(id: number): Promise<AxiosResponse<FormaPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFormaPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { memo, useEffect } from 'react'\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { GetFormaPagamentoById } from '../../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst RenderSelectionFormaPagamento: React.FC = () => {\r\n\r\n    return (\r\n        <SelectModelOne\r\n            fetchMethod={GetFormaPagamentoById}\r\n            name=\"formaPagamento.id\"\r\n            ObjectName=\"formaPagamento\"\r\n            keyDescription=\"nome\"\r\n            required={true}\r\n            showLabel={false}\r\n            label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n            errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n            path=\"forma-pagamento\" />\r\n    )\r\n}\r\n\r\nexport default memo(RenderSelectionFormaPagamento);","export interface Pessoa {\r\n    id?: string,\r\n    nome?: string,\r\n    apelido?: string,\r\n    rgInscricaoEstadual?: string,\r\n    cPFCPNJ?: string,\r\n    endereco?: string,\r\n    bairro?: string,\r\n    complemento?: string,\r\n    cep?: string,\r\n    dataNascimento?: Date,\r\n    nacionalidade?: string,\r\n    telefone?: string,\r\n    email?: string,\r\n    observacoes?: string,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}","import React from 'react';\r\nimport { Row, Col, Divider, Tooltip } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport RenderSelectionMode from './RenderSelectionFormaPagamento'\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual (%)\", editable: true,\r\n            render: (text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"700px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <RenderSelectionMode/>\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={13}>\r\n                    <Input name=\"nome\" label=\"Nome da Condição de Pagamento\" placeholder=\"Pagamento em 30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <br></br>\r\n            <Divider>Parcelas</Divider>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { UpdateCondicaoPagamento, SaveCondicaoPagamento, GetCondicaoPagamentoById } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\n\r\nconst CreateCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCondicaoPagamento(values);\r\n            } else {\r\n                await SaveCondicaoPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetCondicaoPagamentoById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCondicaoPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { UpdateFormaPagamento, SaveFormaPagamento, GetFormaPagamentoById } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\n\r\nconst CreateFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateFormaPagamento(values);\r\n            } else {\r\n                await SaveFormaPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetFormaPagamentoById(id);\r\n        setFormaPagamento(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const CategoriaSchema = Yup.object().shape<Categoria>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Categoria não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaSchema } from './CategoriaSchema';\r\n\r\nconst FormCategoria: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCategoria(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Categoria, formikHelpers: FormikHelpers<any>) {\r\n\r\n       \r\n    }\r\n\r\n    async function getCategoria(id: number) {\r\n      \r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/categoria\"\r\n            breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Nova categoria\", URL: undefined }]}\r\n            initialValues={categoria}\r\n            validationSchema={CategoriaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={9}>\r\n                    <Input name=\"nome\" label=\"Categoria\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCategoria;\r\n","import * as Yup from 'yup';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\n\r\n\r\nexport const ClienteSchema = Yup.object().shape<Cliente | any>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cliente não pode ser vaziu.'),\r\n});","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Cliente } from '../../../../../models/Pessoas/Cliente';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { GetCidadeById } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { GetCondicaoPagamentoById } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    const { setFieldValue } = useFormikContext<Cliente>();\r\n\r\n    useEffect(() => {\r\n\r\n        setFieldValue(\"estadoCivil\", undefined);\r\n        setFieldValue(\"sexo\", undefined);\r\n        setFieldValue(\"dataNascimento\", undefined);\r\n        setFieldValue(\"nacionalidade\", undefined);\r\n\r\n    }, [field.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label={field.value === TIPO_PESSOA.Fisica ? \"Nome\" : \"Razão Social\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCidadeById}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} hidden={field.value === TIPO_PESSOA.Juridica}>\r\n                    <Input name=\"nacionalidade\" label=\"Nacionalidade\" placeholder=\"Brasileiro.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label={field.value === TIPO_PESSOA.Fisica ? \"Data Nascimento\" : \"Data de Fundação\"} placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCondicaoPagamentoById}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { ClienteSchema } from './ClienteSchema';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\n\r\nconst FormCliente: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cliente] = useState<Cliente>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: \"\",\r\n        limiteCredito: undefined,\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Fisica\r\n    })\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCliente();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getCliente() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cliente\"\r\n            breadcrumbList={[{ displayName: \"Cliente\", URL: \"/cliente\" }, { displayName: \"Novo Cliente\", URL: undefined }]}\r\n            initialValues={cliente}\r\n            validationSchema={ClienteSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCliente;\r\n","import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor | {}>({\r\n    // nome: Yup.string()\r\n    //     .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n    //     .required('[Nome] do Fornecedor não pode ser vaziu.'),\r\n});\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Fornecedor } from './../../../../../models/Pessoas/Fornecedor';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { GetCondicaoPagamentoById } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport { GetCidadeById } from '../../../../../apis/Cidades/CidadeApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    const { setFieldValue } = useFormikContext<Fornecedor>();\r\n\r\n    useEffect(() => {\r\n\r\n        setFieldValue(\"estadoCivil\", undefined);\r\n        setFieldValue(\"sexo\", undefined);\r\n        setFieldValue(\"dataNascimento\", undefined);\r\n        setFieldValue(\"nacionalidade\", undefined);\r\n\r\n    }, [field.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCidadeById}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCondicaoPagamentoById}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [fornecedor] = useState<Fornecedor>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Juridica\r\n    })\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFornecedor() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedor\", URL: \"/fornecedor\" }, { displayName: \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import * as Yup from 'yup';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const FuncaoFuncionarioSchema = Yup.object().shape<FuncaoFuncionario>({\r\n    id: Yup.number(),\r\n    \r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Função do Funcionário não pode ser vaziu.'),\r\n        \r\n    requerCNH: Yup.boolean(),\r\n});\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, Switch, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { FuncaoFuncionarioSchema } from './FuncaoFuncionarioSchema';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst FormFuncaoFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [funcaofuncionario] = useState<FuncaoFuncionario>({\r\n        nome: \"\",\r\n        requerCNH: false,\r\n        descricao: \"\",\r\n    });\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncaoFuncionario();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFuncaoFuncionario() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcao-funcionario\"\r\n            breadcrumbList={[{ displayName: \"Função Funcionario\", URL: \"/funcao-funcionario\" }, { displayName: \"Nova Função Funcionario\", URL: undefined }]}\r\n            initialValues={funcaofuncionario}\r\n            validationSchema={FuncaoFuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Função Funcionário\" placeholder=\"técnico\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputNumber name=\"cargaHoraria\" label=\"Carga Horária\" placeholder=\"8\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Switch name=\"requerCNH\" label=\"Requer CNH?\" checkedChildren=\"Requer\" unCheckedChildren=\"Opcional\" ></Switch>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    )\r\n}\r\n\r\nexport default FormFuncaoFuncionario\r\n","import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\n\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario | any>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Funcionario não pode ser vaziu.'),\r\n});\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const endPoint: string = 'api/funcao-funcionario';\r\n\r\nexport function SaveFuncaoFuncionario(funcaofuncionario: FuncaoFuncionario): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, funcaofuncionario);\r\n}\r\n\r\nexport function UpdateFuncaoFuncionario(funcaofuncionario: FuncaoFuncionario): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, funcaofuncionario);\r\n}\r\n\r\nexport function GetFuncaoFuncionarioById(id: number): Promise<AxiosResponse<FuncaoFuncionario>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFuncaoFuncionario(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Categoria } from '../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const endPoint: string = 'api/categoria';\r\n\r\nexport function SaveCategoria(categoria: Categoria): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, categoria);\r\n}\r\n\r\nexport function UpdateCategoria(categoria: Categoria): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, categoria);\r\n}\r\n\r\nexport function GetCategoriaById(id: number): Promise<AxiosResponse<Categoria>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCategoria(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport api from './../apis/Api';\r\n\r\n\r\nexport interface Props {\r\n    URL: string,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport interface PaginationQuery {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    filter?: string\r\n}\r\n\r\nexport function UseListPagined(props: Props): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    function getDataBack() {\r\n        setIsLoading(true);\r\n        api.post(props.URL, { ...filterRequest, ...props.valuesFilter })\r\n            .then(response => {\r\n                setResponseBack({\r\n                    current: response.data.currentPage,\r\n                    pageSize: response.data.pageSize,\r\n                    total: response.data.totalItem,\r\n                    dataSource: response.data.result\r\n                });\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.URL, filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ URL: \"/api/pais/list\" });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport { GetCategoriaById } from '../../apis/Movimentos/CategoriaApi';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: string;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n    const [field, meta, helper] = useField<any[]>({ name: \"funcionarioSelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Idade',\r\n            dataIndex: 'idade',\r\n        },\r\n        {\r\n            title: 'Função',\r\n            dataIndex: 'funcaoFuncionario.nome',\r\n        },\r\n        {\r\n            width: 100,\r\n            title: \"Ações\",\r\n            render: renderAction\r\n        }\r\n    ];\r\n\r\n    function onSaveClick() {\r\n        setData((old) => [...old, ...meta.value]);\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        setData((oldData) => oldData.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={GetCategoriaById}\r\n                            name=\"funcionarioSelectionIds\"\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={{ title: \"Seleção de Funcionario\", label: \"Categoria\" }}\r\n                            errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                            path=\"pais\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={data} size=\"small\" pagination={{}} />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { GetFuncaoFuncionarioById } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { GetCidadeById } from '../../../../../apis/Cidades/CidadeApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCidadeById}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <Input name=\"nacionalidade\" label=\"Nacionalidade\" placeholder=\"Brasileiro.\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label=\"CPF\" placeholder=\"000.000.000-00\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetFuncaoFuncionarioById}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"FuncaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataValidadeCNH\" label=\"Data de Validade\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        label=\"Serviços\"\r\n                        name=\"funcionarioIds\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario] = useState<Funcionario>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        cnh: \"\"\r\n\r\n    });\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFuncionario() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionario\", URL: \"/funcionario\" }, { displayName: \"Novo Funcionario\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import * as Yup from 'yup';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\n\r\n\r\nexport const MarcaSchema = Yup.object().shape<Marca>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Marca não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaSchema } from './FormMarcaSchema';\r\n\r\nconst FormMarca: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [marca, setMarca] = useState<Marca>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMarca(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Marca, formikHelpers: FormikHelpers<any>) {\r\n\r\n       \r\n    }\r\n\r\n    async function getMarca(id: number) {\r\n      \r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/marca\"\r\n            breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Nova marca\", URL: undefined }]}\r\n            initialValues={marca}\r\n            validationSchema={MarcaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Marca\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormMarca;\r\n","import * as Yup from 'yup';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\n\r\n\r\nexport const ProdutoSchema = Yup.object().shape<Produto>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do produto não pode ser vaziu.'),\r\n\r\n    marcaId: Yup.number()\r\n        .required(\"Informe uma Marca ao produto.\")\r\n        .min(0, \"Informe uma Marca ao produto.\"),\r\n\r\n    quantidade: Yup.number()\r\n        .required(\"Informe a Quantidade.\")\r\n        .min(0, \"Informe a Quantidade.\"),\r\n\r\n    quantidadeMinima: Yup.number()\r\n        .required(\"Informe a Quantidade Mínima.\")\r\n        .min(0, \"Informe a Quantidade Mínima.\"),\r\n\r\n    valorCompra: Yup.number()\r\n        .required(\"Informe o Valor de Compra.\")\r\n        .min(0, \"Informe o Valor de Compra.\"),\r\n\r\n    valorVenda: Yup.number()\r\n        .required(\"Informe o Valor de Venda.\")\r\n        .min(0, \"Informe o Valor de Venda.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe uma Categoria ao produto.\")\r\n        .min(0, \"Informe uma Categoria ao produto.\"),\r\n\r\n    unidadeMedidaId: Yup.number()\r\n        .required(\"Informe uma Unidade Medida ao produto.\")\r\n        .min(0, \"Informe uma Unidade de Medida ao produto.\"),\r\n});\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Marca } from '../../models/Movimentos/Marca';\r\n\r\n\r\nexport const endPoint: string = 'api/marca';\r\n\r\nexport function SaveMarca(marca: Marca): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, marca);\r\n}\r\n\r\nexport function UpdateMarca(marca: Marca): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, marca);\r\n}\r\n\r\nexport function GetMarcaById(id: number): Promise<AxiosResponse<Marca>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirMarca(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ProdutoSchema } from './ProdutoSchema';\r\nimport SelectModelOne from '../../../../components/SelectModel/SelectModelOne';\r\nimport { GetMarcaById } from '../../../../apis/Movimentos/MarcaApi';\r\nimport { GetCategoriaById } from '../../../../apis/Movimentos/CategoriaApi';\r\n\r\nconst FormProduto: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [produto] = useState<Produto>({\r\n        nome: \"\",\r\n        categoriaId: undefined,\r\n        quantidade: undefined,\r\n        quantidadeMinima: undefined,\r\n        valorCompra: undefined,\r\n        valorVenda: undefined,\r\n        taxa: undefined,\r\n        unidadeMedidaId: undefined,\r\n        codigoBarra: \"\",\r\n        referencia: \"\",\r\n        marcaId: undefined,\r\n    });\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getProduto();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getProduto() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/produto\"\r\n            breadcrumbList={[{ displayName: \"Produto\", URL: \"/produto\" }, { displayName: \"Novo Produto\", URL: undefined }]}\r\n            initialValues={produto}\r\n            validationSchema={ProdutoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Produto\" placeholder=\"Produto\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCategoriaById}\r\n                        name=\"unidadeMedidaId\"\r\n                        keyDescription=\"Unidade de Medida\"\r\n                        required={true}\r\n                        showDescription={false}\r\n                        label={{ title: \"Seleção de Unidade de Medida\", label: \"Unidade de Medida\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Unidade de Medida!\" }}\r\n                        path=\"unidade-medida\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"codigoBarra\" label=\"Codigo Barras\" placeholder=\"Codigo Barras\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"referencia\" label=\"Referência\" placeholder=\"Codigo\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            \r\n                <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetMarcaById}\r\n                        name=\"marcaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Marca\", label: \"Marca\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Marca!\" }}\r\n                        path=\"marca\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCategoriaById}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidadeMinima\" label=\"Quantidade Mínima\" placeholder=\"2\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name=\"valorCompra\" label=\"Valor Compra\" placeholder=\"10,20\" required\r\n                        parser={(value) => value?.replace(/\\$\\s?|(,*)/g, '') || \"\"}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"taxa\" label=\"Margem de lucro (%)\" min={0} max={100} placeholder=\"15,50\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"valorVenda\" label=\"Valor Venda\" placeholder=\"15,50\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidade\" label=\"Quantidade\" placeholder=\"10\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n            \r\n\r\n\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormProduto\r\n","import * as Yup from 'yup';\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\n\r\n\r\nexport const ServicoSchema = Yup.object().shape<Servico>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Serviço não pode ser vaziu.'),\r\n\r\n    valor: Yup.number().required(\"Informe o valor do serviço.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe uma Categoria ao serviço.\")\r\n        .min(0, \"Informe uma Categoria ao serviço.\"),\r\n\r\n});\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ServicoSchema } from './ServicoSchema';\r\nimport { TextArea } from './../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../components/SelectModel/SelectModelOne';\r\nimport { GetCategoriaById } from '../../../../apis/Movimentos/CategoriaApi';\r\nimport SelectModelMoreWithTable from '../../../../components/SelectModel/SelectModelMoreWithTable';\r\n\r\nconst FormServico: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [servico] = useState<Servico>({\r\n        nome: \"\",\r\n        valor: undefined,\r\n        categoriaId: undefined,\r\n    });\r\n    const [loading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getServico();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getServico() {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/servico\"\r\n            breadcrumbList={[{ displayName: \"Servico\", URL: \"/servico\" }, { displayName: \"Novo Serviço\", URL: undefined }]}\r\n            initialValues={servico}\r\n            validationSchema={ServicoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Servico\" placeholder=\"Servico\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <InputNumber name=\"valor\" label=\"Valor\" required />\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <SelectModelOne\r\n                        fetchMethod={GetCategoriaById}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoriaa!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={3} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"oservacao\" label=\"Observação\" rows={3} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        label=\"Funcionários\"\r\n                        name=\"funcionarioIds\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormServico\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Titular } from '../../models/Pessoas/Titular';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\n\r\nexport function SaveTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, titular);\r\n}\r\n\r\nexport function UpdateTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, titular);\r\n}\r\n\r\nexport function GetTitularById(id: number): Promise<AxiosResponse<Titular>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirTitular(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport { Associado } from '../../../../models/Pessoas/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Tooltip, Tag } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../../models/Pessoas/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from '../../../../../models/Pessoas/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => {\r\n\r\n                return (\r\n                    <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                        <Tag color=\"red\" key={index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => onRemoveAssocido(index)} >Remover</Tag>\r\n                    </Tooltip>)\r\n                    ;\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\", dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                size=\"small\"\r\n                dataSource={formik.values.dependentes || []}\r\n                rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { UpdateTitular, SaveTitular, GetTitularById } from '../../../../apis/Pessoas/AssociadoApi';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../../models/Pessoas/Titular';\r\nimport Dependente from './Components/Dependente';\r\n\r\nconst FormTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateTitular(values);\r\n            } else {\r\n                await SaveTitular(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetTitularById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/titular\"\r\n            breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n            initialValues={titular}\r\n            validationSchema={TitularSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Id\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Divider dashed >Dependentes</Divider>\r\n\r\n            <Dependente />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormTitular;\r\n","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => {setFormMode(FormMode.Edit); setState(undefined)}}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                    setLoading(false);\r\n                    props.tableProps.reflesh();\r\n                    setFormMode(FormMode.List)\r\n                    hidenExluir();\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../hoc/UseListPagined';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { ExcluirCategoria } from '../../../../apis/Movimentos/CategoriaApi';\r\n\r\nconst ListCategoria: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/categorias/list\" });\r\n\r\n    const columns: ColumnProps<Categoria>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Categoria\", URL: \"/categoria\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCategoria}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCategoria;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirCidade } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Cidade/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCidade}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Cliente } from '../../models/Pessoas/Cliente';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveCliente(cliente: Cliente): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, cliente);\r\n}\r\n\r\nexport function UpdateCliente(cliente: Cliente): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, cliente);\r\n}\r\n\r\nexport function GetClienteById(id: number): Promise<AxiosResponse<Cliente>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCliente(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport ListForm from '../../../../components/ListForm/ListForm'\r\nimport { ExcluirCliente } from '../../../../apis/Pessoas/ClienteApi';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\n\r\nconst ListCliente:React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/clientes/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cliente',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF/CNPJ',\r\n            dataIndex: 'cpfcnpj',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n    \r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ExcluirCliente}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListCliente\r\n\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { ExcluirCondicaoPagamento } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/condicao-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCondicaoPagamento}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirEstado } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Estado/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirEstado}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirFormaPagamento } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/forma-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirFormaPagamento}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Fornecedor } from '../../models/Pessoas/Fornecedor';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveFornecedor(fornecedor: Fornecedor): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, fornecedor);\r\n}\r\n\r\nexport function UpdateFornecedor(fornecedor: Fornecedor): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, fornecedor);\r\n}\r\n\r\nexport function GetFornecedorById(id: number): Promise<AxiosResponse<Fornecedor>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFornecedor(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { ExcluirFornecedor } from '../../../../apis/Pessoas/Fornecedor.Api';\r\n\r\n const ListFornecedor: React.FC = () => {\r\n    \r\n    const response = UseListPagined({ URL: \"/api/fornecedors/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'fornecedor',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'cargo',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Fornecedors\", URL: \"/fornecedor\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ExcluirFornecedor}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFornecedor;","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { ExcluirFuncaoFuncionario } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\n\r\nconst ListFuncaoFuncionario: React.FC = () => {\r\n    const response = UseListPagined({ URL: \"/api/funcao-funcionarios/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'funcaofuncionario',\r\n        },\r\n        {\r\n            title: 'CNH?',\r\n            dataIndex: 'requerCNH',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Função Funcionarios\", URL: \"/funcao-funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ExcluirFuncaoFuncionario}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncaoFuncionario\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Funcionario } from '../../models/Pessoas/Funcionario';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveFuncionario(funcionario: Funcionario): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, funcionario);\r\n}\r\n\r\nexport function UpdateFuncionario(funcionario: Funcionario): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, funcionario);\r\n}\r\n\r\nexport function GetFuncionarioById(id: number): Promise<AxiosResponse<Funcionario>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFuncionario(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { ExcluirFuncionario } from '../../../../apis/Pessoas/FuncionarioApi';\r\n\r\nconst ListFuncionario: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/funcionarios/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'funcionario',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'cargo',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funcionarios\", URL: \"/funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirFuncionario}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncionario;","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { ExcluirMarca } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst ListMarca: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/marcas/list\" });\r\n\r\n    const columns: ColumnProps<Marca>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Marca\", URL: \"/marca\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirMarca}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListMarca;\r\n","import api from '../Api';\r\nimport { Pais } from '../../models/Cidades/Pais';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\n\r\nexport function SavePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, pais);\r\n}\r\n\r\nexport function UpdatePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, pais);\r\n}\r\n\r\nexport function GetPaisById(id: number): Promise<AxiosResponse<Pais>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirPais(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, {  } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirPais } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/pais/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirPais}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Produto } from '../../models/Movimentos/Produto';\r\n\r\n\r\nexport const endPoint: string = 'api/produtos';\r\n\r\nexport function SaveProduto(produto: Produto): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, produto);\r\n}\r\n\r\nexport function UpdateProduto(produto: Produto): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, produto);\r\n}\r\n\r\nexport function GetProdutoById(id: number): Promise<AxiosResponse<Produto>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirProduto(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport { ExcluirProduto } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\n\r\n const ListProduto: React.FC = () => {\r\n    const response = UseListPagined({ URL: \"/api/produtos/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Produto',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Produto\", URL: \"/produto\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirProduto}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListProduto;","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Servico } from '../../models/Movimentos/Servico';\r\n\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nexport function SaveServico(servico: Servico): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, servico);\r\n}\r\n\r\nexport function UpdateServico(servico: Servico): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, servico);\r\n}\r\n\r\nexport function GetServicoById(id: number): Promise<AxiosResponse<Servico>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirServico(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport { ExcluirServico } from '../../../../apis/Movimentos/ServicoApi';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ URL: \"/api/servicos/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Servico',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirServico}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirTitular } from '../../../../apis/Pessoas/AssociadoApi';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/associados/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirTitular}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/User/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { UpdateEstado, SaveEstado, GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { GetPaisById } from '../../../../apis/Cidades/PaisApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateEstado(values);\r\n            } else {\r\n                await SaveEstado(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetEstadoById(id);\r\n        setEstado(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetPaisById}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterEstado;\r\n","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { SavePais, GetPaisById, UpdatePais } from '../../../../apis/Cidades/PaisApi';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await UpdatePais(values);\r\n            } else {\r\n                await SavePais(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetPaisById(id);\r\n        setPais(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPais);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Pessoas/LoginUser';\r\nimport AuthenticatedUser from '../../models/Pessoas/AuthenticatedUser';\r\nimport UserModel from '../../models/Pessoas/UserModel';\r\nimport UserChangePasswordModel from '../../models/Pessoas/UserChangePasswordModel';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\n\r\nexport function tryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n    return api.post(endPoint + \"/authorize\", user);\r\n}\r\n\r\nexport function UpdateUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, user);\r\n}\r\n\r\nexport function ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint + \"/Change-Password\", user);\r\n}\r\n\r\n\r\nexport function SaveUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, user);\r\n}\r\n\r\n\r\nexport function GetUserById(id: number): Promise<AxiosResponse<UserModel>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./RegisterUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst RegisterUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { GetUserById, UpdateUser, SaveUser } from '../../../../../apis/Pessoas/UserApi';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetUserById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateUser(values);\r\n            } else {\r\n                await SaveUser(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { ChangePasswordUser } from '../../../../../apis/Pessoas/UserApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { UnidadeMedida } from '../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const endPoint: string = 'api/unidademedida';\r\n\r\nexport function SaveUnidadeMedida(unidademedida: UnidadeMedida): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, unidademedida);\r\n}\r\n\r\nexport function UpdateUnidadeMedida(unidademedida: UnidadeMedida): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, unidademedida);\r\n}\r\n\r\nexport function GetUnidadeMedidaById(id: number): Promise<AxiosResponse<UnidadeMedida>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirUnidadeMedida(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { ExcluirUnidadeMedida } from '../../../../apis/Movimentos/UnidadeMedida';\r\n\r\nconst ListUnidadeMedida: React.FC = () => {\r\n    const response = UseListPagined({ URL: \"/api/funcao-funcionarios/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Unidade de Medida',\r\n            dataIndex: 'unidademedida',\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Unidade de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={ExcluirUnidadeMedida}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListUnidadeMedida\r\n","import * as Yup from 'yup';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const UnidadeMedidaSchema = Yup.object().shape<UnidadeMedida>({\r\n    id: Yup.string()\r\n        .max(5, \"O campo Código não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Código não pode ser vaziu.'),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Unidade Medida não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\nimport { UnidadeMedidaSchema } from './UnidadeMedidaSchema';\r\n\r\nconst FormUnidadeMedida: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [unidademedida, setUnidadeMedida] = useState<UnidadeMedida>({ nome: \"\", id: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getUnidadeMedida(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: UnidadeMedida, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n    }\r\n\r\n    async function getUnidadeMedida(id: number) {\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/unidade-medida\"\r\n            breadcrumbList={[{ displayName: \"Unidade Medidas\", URL: \"/unidade-medida\" }, { displayName: \"Nova Unida de Medida\", URL: undefined }]}\r\n            initialValues={unidademedida}\r\n            validationSchema={UnidadeMedidaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Unidade Medida\" placeholder=\"Unidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUnidadeMedida;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CreateCidade from '../../../pages/Cidades/Cidade/CreateCidade/CreateCidade';\r\nimport CreateCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento';\r\nimport CreateFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento';\r\nimport FormCategoria from '../../../pages/Movimentos/Categorias/FormCategoria/FormCategoria';\r\nimport FormCliente from '../../../pages/Pessoas/Clientes/FormCliente/FormCliente';\r\nimport FormFornecedor from '../../../pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor';\r\nimport FormFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario';\r\nimport FormFuncionario from '../../../pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario';\r\nimport FormMarca from './../../../pages/Movimentos/Marcas/FormMarca/FormMarca';\r\nimport FormProduto from '../../../pages/Movimentos/Produtos/FormProduto/FormProduto';\r\nimport FormServico from '../../../pages/Movimentos/Servicos/FormServico/FormServico';\r\nimport FormTitular from '../../../pages/Pessoas/Associados/CreateTitular/CreateTitular';\r\nimport ListCategoria from './../../../pages/Movimentos/Categorias/ListCategoria/ListCategoria';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport ListCliente from '../../../pages/Pessoas/Clientes/ListCliente/ListCliente';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport ListFornecedor from '../../../pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor';\r\nimport ListFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario';\r\nimport ListFuncionario from '../../../pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario';\r\nimport ListMarca from '../../../pages/Movimentos/Marcas/ListCategoria/ListMarca';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport ListProduto from '../../../pages/Movimentos/Produtos/ListProduto/ListProduto';\r\nimport ListServico from './../../../pages/Movimentos/Servicos/ListServico/ListServico';\r\nimport ListTitular from '../../../pages/Pessoas/Associados/ListTitular/ListTitular';\r\nimport ListUser from '../../../pages/Pessoas/Users/ListUser/ListUser';\r\nimport RegisterEstado from '../../../pages/Cidades/Estado/RegisterEstado/RegisterEstado';\r\nimport RegisterPais from '../../../pages/Cidades/Pais/RegisterPais/RegisterPais';\r\nimport RegisterUser from '../../../pages/Pessoas/Users/RegisterUser/RegisterUser';\r\nimport ListUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida';\r\nimport FormUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/categoria\" component={ListCategoria} exact />\r\n            <Route path=\"/categoria/edit/:id\" component={FormCategoria} />\r\n            <Route path=\"/categoria/new\" component={FormCategoria} />\r\n\r\n            <Route path=\"/cidade\" component={ListCidade} exact />\r\n            <Route path=\"/cidade/edit/:id\" component={CreateCidade} />\r\n            <Route path=\"/cidade/new\" component={CreateCidade} />\r\n\r\n            <Route path=\"/cliente\" component={ListCliente} exact />\r\n            <Route path=\"/cliente/edit/:id\" component={FormCliente} />\r\n            <Route path=\"/cliente/new\" component={FormCliente} />\r\n\r\n            <Route path=\"/condicao-pagamento\" component={ListCondicaoPagamento} exact />\r\n            <Route path=\"/condicao-pagamento/edit/:id\" component={CreateCondicaoPagamento} />\r\n            <Route path=\"/condicao-pagamento/new\" component={CreateCondicaoPagamento} />\r\n\r\n            <Route path=\"/estado\" component={ListEstado} exact />\r\n            <Route path=\"/estado/edit/:id\" component={RegisterEstado} />\r\n            <Route path=\"/estado/new\" component={RegisterEstado} />\r\n\r\n            <Route path=\"/forma-pagamento\" component={ListFormaPagamento} exact />\r\n            <Route path=\"/forma-pagamento/edit/:id\" component={CreateFormaPagamento} />\r\n            <Route path=\"/forma-pagamento/new\" component={CreateFormaPagamento} />\r\n\r\n            <Route path=\"/fornecedor\" component={ListFornecedor} exact />\r\n            <Route path=\"/fornecedor/edit/:id\" component={FormFornecedor} />\r\n            <Route path=\"/fornecedor/new\" component={FormFornecedor} />\r\n\r\n            <Route path=\"/funcao-funcionario\" component={ListFuncaoFuncionario} exact />\r\n            <Route path=\"/funcao-funcionario/edit/:id\" component={FormFuncaoFuncionario} />\r\n            <Route path=\"/funcao-funcionario/new\" component={FormFuncaoFuncionario} />\r\n\r\n            <Route path=\"/funcionario\" component={ListFuncionario} exact />\r\n            <Route path=\"/funcionario/edit/:id\" component={FormFuncionario} />\r\n            <Route path=\"/funcionario/new\" component={FormFuncionario} />\r\n\r\n            <Route path=\"/marca\" component={ListMarca} exact />\r\n            <Route path=\"/marca/edit/:id\" component={FormMarca} />\r\n            <Route path=\"/marca/new\" component={FormMarca} />\r\n\r\n            <Route path=\"/pais\" component={ListPais} exact />\r\n            <Route path=\"/pais/edit/:id\" component={RegisterPais} />\r\n            <Route path=\"/pais/new\" component={RegisterPais} />\r\n\r\n            <Route path=\"/produto\" component={ListProduto} exact />\r\n            <Route path=\"/produto/edit/:id\" component={FormProduto} />\r\n            <Route path=\"/produto/new\" component={FormProduto} />\r\n\r\n            <Route path=\"/servico\" component={ListServico} exact />\r\n            <Route path=\"/servico/edit/:id\" component={FormServico} />\r\n            <Route path=\"/servico/new\" component={FormServico} />\r\n\r\n            <Route path=\"/titular\" component={ListTitular} exact />\r\n            <Route path=\"/titular/edit/:id\" component={FormTitular} />\r\n            <Route path=\"/titular/new\" component={FormTitular} />\r\n\r\n            <Route path=\"/user\" component={ListUser} exact />\r\n            <Route path=\"/user/edit/:id\" component={RegisterUser} />\r\n            <Route path=\"/user/new\" component={RegisterUser} />\r\n\r\n            <Route path=\"/unidade-medida\" component={ListUnidadeMedida} exact />\r\n            <Route path=\"/unidade-medida/edit/:id\" component={FormUnidadeMedida} />\r\n            <Route path=\"/unidade-medida/new\" component={FormUnidadeMedida} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../../models/Pessoas/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { tryLoginUser } from '../../../../apis/Pessoas/UserApi';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../../services/Authenticate';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await tryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout, { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Pessoas/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\" component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}