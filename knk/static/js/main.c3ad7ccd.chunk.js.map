{"version":3,"sources":["webpack:///./src/components/NationalitySelect/nationality-select-styles.less?585d","components/NationalitySelect/nationality-select-styles.less","webpack:///./src/components/ModalForm/modal-form.less?ad2b","components/ModalForm/modal-form.less","webpack:///./src/pages/Pessoas/Users/Login/LoginUserStyle.less?0cf8","pages/Pessoas/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","hoc/WithFormItem.tsx","layouts/BasicLayout/BasicLayout.tsx","components/WithFormItem/withFormItem.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","hoc/useDebouncedCallback.ts","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","pages/Movimentos/Categorias/FormCategoria/CategoriaSchema.ts","apis/Api.configure.ts","apis/Api.ts","apis/Movimentos/CategoriaApi.ts","components/NationalitySelect/NationalitySelect.tsx","pages/Movimentos/Categorias/FormCategoria/FormCategoria.tsx","models/Pessoas/Pessoa.ts","pages/Pessoas/Clientes/FormCliente/ClienteSchema.ts","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalFormContext.ts","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","apis/Cidades/CidadeApi.ts","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","pages/Pessoas/Clientes/FormCliente/components/GeralForm.tsx","apis/Pessoas/ClienteApi.ts","pages/Pessoas/Clientes/FormCliente/FormCliente.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","apis/Pessoas/Fornecedor.Api.ts","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FuncaoFuncionarioSchema.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","hoc/UseListPagined.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx","apis/Movimentos/ServicoApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","apis/Pessoas/FuncionarioApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","pages/Movimentos/Marcas/FormMarca/FormMarcaSchema.ts","apis/Movimentos/MarcaApi.ts","pages/Movimentos/Marcas/FormMarca/FormMarca.tsx","pages/Movimentos/Produtos/FormProduto/ProdutoSchema.ts","apis/Movimentos/ProdutoApi.ts","apis/Movimentos/UnidadeMedidaApi.ts","pages/Movimentos/Produtos/FormProduto/components/FormGeneral.tsx","pages/Movimentos/Produtos/FormProduto/FormProduto.tsx","pages/Movimentos/Servicos/FormServico/ServicoSchema.ts","pages/Movimentos/Servicos/FormServico/components/GeneralForm.tsx","pages/Movimentos/Servicos/FormServico/FormServico.tsx","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","pages/Movimentos/Categorias/ListCategoria/ListCategoria.tsx","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Pessoas/Clientes/ListCliente/ListCliente.tsx","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/ListEstado/ListEstado.tsx","pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario.tsx","pages/Movimentos/Marcas/ListCategoria/ListMarca.tsx","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","pages/Movimentos/Produtos/ListProduto/ListProduto.tsx","pages/Movimentos/Servicos/ListServico/ListServico.tsx","apis/Pessoas/UserApi.ts","pages/Pessoas/Users/FormUser/FormUser.tsx","pages/Pessoas/Users/ListUser/ListUser.tsx","pages/Cidades/Pais/FormPais/PaisSchema.ts","pages/Cidades/Pais/FormPais/FormPais.tsx","pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida.tsx","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/UnidadeMedidaSchema.ts","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida.tsx","pages/Cidades/Cidade/FormCidade/CidadeSchema.ts","pages/Cidades/Cidade/FormCidade/FormCidade.tsx","pages/Cidades/Estado/FormEstado/EstadoSchema.ts","pages/Cidades/Estado/FormEstado/FormEstado.tsx","pages/Pessoas/Users/FormUser/UserSchema.ts","pages/Pessoas/Users/FormUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/FormUser/Components/ChangePassword.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/Percentual.tsx","apis/CondicaoPagamento/FormaPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/RenderSelectionFormaPagamento.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento.tsx","pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Pessoas/Users/Login/LoginUserSchema.ts","pages/Pessoas/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","disabled","ContentApp","props","Content","style","display","flex","alignItems","flexWrap","children","history","createHistory","basename","process","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","background","padding","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","Field","propsConf","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","withFormItem","basicLayoutContext","isViewMode","isDisabled","anotherProps","validateStatus","help","name","label","required","autoComplete","width","WithItemNone","showLabel","ItemFormRender","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","useEffect","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","mensagem","Array","isArray","length","errorArray","textAlign","setFieldError","reduce","p","c","find","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","FormikForm","forwardRef","ref","useHistory","useFormikContext","keyLocalStorage","toLowerCase","Modal","confirm","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","values","ceatedDate","Date","formData","savedForm","setValues","initialValues","onKeyUp","onKeyDown","isSubmitting","isLoading","zIndex","height","margin","left","top","position","fontSize","color","isFunction","paddingTop","flexDirection","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","backPath","submitForm","withRouter","childRef","formikHelpers","a","onSubmit","enableReinitialize","keyEvent","charCode","keyCode","CategoriaSchema","Yup","shape","nome","max","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","ApiBase","endPoint","EndPoint","t","post","put","id","get","toString","delete","query","NATIONALITY_TYPE","CategoriaApi","FormCategoria","categoria","setCategoria","loading","setLoading","match","params","Update","Save","GetById","bdCategoria","getCategoria","CrudFormLayout","validationSchema","placeholder","readOnly","SEXO","ESTADO_CIVIL","TIPO_PESSOA","NationalitySelect","useField","field","meta","helpers","nameIsBrasileiro","brasileiroHelpers","value","selectedValue","setSelectedValue","BRASILEIRO","ESTRANGEIRO","touched","Group","compact","onSelect","setValue","Option","hidden","regexCPF","ClienteSchema","nullable","min","apelido","bairro","cep","complemento","observacao","cpfcpnj","when","nacionalidade","schema","matches","dataNascimento","typeError","email","endereco","estadoCivil","tipo","Juridica","limiteCredito","rgInscricaoEstadual","sexo","telefone","cidadeId","numero","condicaoPagamentoId","path","ModalFormContext","state","setState","ModalFormContextProvider","CloseForm","setVisible","visible","concat","wrapClassName","destroyOnClose","errorMessage","noSelection","SelectMultiple","description","setDescription","keyId","idIsInt","keyDescription","objectName","helpersObject","setSubmitting","showDescription","getDesciptionValues","fetchMethod","respose","handleClick","onChangeId","setTouched","onBlurId","col","inputId","onChange","onBlur","target","btnSearch","inputDescription","SelectOne","isNaN","Number","CidadeApi","CondicaoPagamentoApi","GeralForm","fieldTipoPessoa","helperIsBrasileiro","fieldNacionalidade","helperNacionalidade","helperEstadoCivil","helperSexo","Fisica","bind","format","rows","ClienteApi","FormCliente","isBrasileiro","cliente","setCliente","bdpais","getCliente","FornecedorSchema","contato","FornecedorApi","FormFornecedor","fornecedor","setFornecedor","bdFornecedor","getFornecedor","FuncaoFuncionarioSchema","cargaHoraria","descricao","FuncaoFuncionarioApi","FormFuncaoFuncionario","requerCNH","funcaofuncionario","setFuncaofuncionario","bdFuncaofuncionario","getFuncaoFuncionario","checkedChildren","unCheckedChildren","FuncionarioSchema","cnh","funcaoFuncionario","dataValidadeCNH","funcaoFuncionarioId","UseListPagined","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","total","dataSource","responseBack","setResponseBack","getDataBack","getListPagined","totalItem","result","valuesFilter","requestResult","reflesh","SelectModelMore","setDataSource","onSearch","text","filter","md","filterOption","newSelection","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","metaTable","helperTable","helper","columns","render","record","placement","onRemoveClick","lefJoin","ee","rowKey","ServicoApi","fieldFuncaoFuncionario","fieldCNH","GetListPagined","dataIndex","FuncionarioApi","FormFuncionario","dataAdmissao","dataDemissao","salario","funcionario","setFuncionario","Funcionario","bdFuncionario","getFuncionario","MarcaSchema","MarcaApi","FormMarca","marca","setMarca","bdMarca","getMarca","ProdutoSchema","marcaId","quantidade","quantidadeMinima","valorCompra","valorVenda","categoriaId","unidadeMedidaId","codigoBarras","referencia","ProdutoApi","UnidadeMedidaApi","FormGeneral","helperTaxa","metaValorVenda","helperValorVenda","metaValorCompra","valorVendaAtencao","setValorVendaAtencao","parser","replace","taxa","FormProduto","produto","setProduto","bdProduto","getProduto","ServicoSchema","valor","GeneralForm","FormServico","funcionarios","servico","setServico","Servico","bdServico","getServico","isSelectMode","keyProp","ListSelectedItem","showModal","setShowModal","setRecord","Edit","deleteFunction","Delete","showExluir","rowSelection","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","tableProps","success","List","okType","okButtonProps","autoFocus","cancelButtonProps","pagination","page","onRow","bordered","useFixedHeader","filterValues","setFilterValues","onPressEnter","New","paddingBottom","ListCategoria","Excluir","ListCidade","useMemo","ListCliente","ListCondicaoPagamento","EstadoApi","ListEstado","ListFornecedor","Intl","NumberFormat","minimumFractionDigits","ListFuncaoFuncionario","ListFuncionario","ListMarca","PaisApi","Text","Typography","ListProduto","ListServico","Menus","UserApi","ListUser","PaisSchema","ddi","sigla","pais","setPais","getPais","ListUnidadeMedida","UnidadeMedidaSchema","FormUnidadeMedida","unidademedida","setUnidadeMedida","bdCidade","getUnidadeMedida","CidadeSchema","ddd","estadoId","FormCidade","cidade","setCidade","getCidade","EstadoSchema","uf","paisId","FormEstado","estado","setEstado","getEstado","UserSchema","phoneNumber","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","bdestado","getUser","ChangePasswordUser","initialErrors","FormUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","ty","toFixed","init","every","valid","RowMode","TypeAttribute","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","rowIndex","number","handleRowMode","edit","handleRemove","new","onNewRow","mapRecord","components","body","row","cell","errorStyle","borderWidth","borderStyle","borderColor","borderRadius","hasListError","columnsAction","editable","onCell","useCallback","dataSourceNew","handleRowNew","mapedDataSource","now","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","FormaPagamentoApi","CondicaoPagamentoGeneral","Math","round","FormCondicaoPagamento","condicaopagamento","setCondicaoPagamento","getCondicaoPagamento","ListFormaPagamento","FormaPagamentoSchema","FormFormaPagamento","formapagamento","setFormaPagamento","getFormaPagamento","RoutePath","component","exact","ListPais","FormPais","LoginUserSchema","search","redirectUrl","URLSearchParams","TryLoginUser","xs","sm","lg","xl","xxl","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3ad7ccd.chunk.js","sourcesContent":["var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./nationality-select-styles.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".nationality-select {\\n  flex: 1;\\n  display: flex !important;\\n}\\n.nationality-select .ant-select-selection {\\n  flex: 1;\\n}\\n.nationality-group {\\n  display: flex !important;\\n  flex: 1;\\n  margin-top: 5px !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./modal-form.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".modal-wrap .ant-modal-content {\\n  min-height: 80%;\\n}\\n.modal-wrap .ant-modal-body {\\n  padding: 0;\\n}\\n.modal-wrap .ant-modal-body .form-application-container {\\n  margin: 0 !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n        >\r\n            <PerfectScrollbar>\r\n                <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                    <Menu.Item key=\"Menu\">\r\n                        <Link to=\"/\">\r\n                            <Icon type=\"home\" />\r\n                            <span>Tela inicial</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"cidades\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"environment\" />\r\n                                <span>Cidades</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"cidadesCrud\">\r\n                            <Link to=\"/cidade\">Cidades</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"estadoCrud\">\r\n                            <Link to=\"/estado\">Estados</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"paisCrud\">\r\n                            <Link to=\"/pais\"> Paises</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n\r\n                    <SubMenu\r\n                        key=\"system\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"folder-open\" />\r\n                                <span>Cadastros do sistema</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"Categoria\">\r\n                            <Link to=\"/categoria\">Categoria</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Cliente\">\r\n                            <Link to=\"/cliente\">Clientes</Link>\r\n                        </Menu.Item>\r\n\r\n                        <SubMenu\r\n                            key=\"CondicaoPagamento\"\r\n                            title={\r\n                                <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                            }>\r\n\r\n                            <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                                <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"FormaPagamentoCrud\">\r\n                                <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                            </Menu.Item>\r\n\r\n                        </SubMenu>\r\n\r\n                        <Menu.Item key=\"Fornecedor\">\r\n                            <Link to=\"/fornecedor\">Fornecedores</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FuncaoFuncionario\">\r\n                            <Link to=\"/funcao-funcionario\">Função Funcionários</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Funcionario\">\r\n                            <Link to=\"/funcionario\">Funcionários</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Marca\">\r\n                            <Link to=\"/marca\">Marcas</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Produto\">\r\n                            <Link to=\"/produto\">Produtos</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Servico\">\r\n                            <Link to=\"/servico\">Serviços</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"unidadeMedidaCrud\">\r\n                            <Link to=\"/unidade-medida\">Unidade de medidas</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"UserCrud\">\r\n                            <Link to=\"/user\">Usuários</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n\r\n                    <SubMenu\r\n                        key=\"Movimento\"\r\n                        disabled={true}\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"shop\" />\r\n                                <span>Movimento</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"venda\">\r\n                            <Link to=\"/venda\">Vendas</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"compra\">\r\n                            <Link to=\"/compra\">Compras</Link>\r\n                        </Menu.Item>\r\n\r\n\r\n                    </SubMenu>\r\n\r\n                </Menu>\r\n            </PerfectScrollbar>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            flex: \"1\",\r\n            alignItems: \"stretch\",\r\n            flexWrap: \"wrap\",\r\n        }}>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory({\r\n    basename: process.env.PUBLIC_URL\r\n});","import AuthenticatedUser from \"../models/Pessoas/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\nexport declare const ValidateStatuses: [\"success\", \"warning\", \"error\", \"validating\", \"\"];\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n    validateStatus?: typeof ValidateStatuses[number];\r\n    help?: string;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    var anotherProps: any = {} as any;\r\n    if (props.validateStatus) {\r\n        anotherProps.validateStatus = props.validateStatus;\r\n        anotherProps.help = props.help;\r\n    }\r\n\r\n\r\n    return (\r\n        <FormItem\r\n            name={props.name}\r\n            label={props.label || \"\"}\r\n            required={props.required}\r\n            className=\"form-custom-item\"\r\n            {...anotherProps}\r\n        >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field,] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <HeaderApp breadcrumbList={breadcrumb} />\r\n                    <PerfectScrollbar\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flex: \"1\",\r\n                            background: \"#F0F2F5\"\r\n                        }} >\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik?: FormikHelpers<any> | null, response?: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        formik?.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem) && mensagem.length > 0) {\r\n                let errorArray: any[] = errors[element];\r\n\r\n                if (errorArray.length > 0) {\r\n                    mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                    formik?.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n                }\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element) && mensagem.length > 0) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n    initialValues: any;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues({ ...props.initialValues, ...savedForm.formData });\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    initialValues={props.initialValues}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import * as Yup from 'yup';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const CategoriaSchema = Yup.object().shape<Categoria>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Categoria não pode ser vaziu.')\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if ((error.response!.data!.code === 422 || error.response.status === 422) ||\r\n            (error.response!.data!.code === 400 || error.response.status === 400)) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import { AxiosResponse } from 'axios';\r\nimport api from './Api.configure';\r\nimport { IBaseEntity, PaginationResult, PaginationQuery } from '../models/BaseEntity';\r\n\r\nexport class ApiBase<T extends IBaseEntity<any>> {\r\n\r\n    EndPoint: string;\r\n\r\n    constructor(endPoint: string) {\r\n        this.EndPoint = endPoint;\r\n    }\r\n\r\n\r\n    Save(t: T): Promise<AxiosResponse<any>> {\r\n        return api.post(this.EndPoint, t);\r\n    }\r\n\r\n    Update(t: T): Promise<AxiosResponse<any>> {\r\n        return api.put(`${this.EndPoint}/${t.id}`, t);\r\n    }\r\n\r\n    GetById(id: number): Promise<AxiosResponse<T>> {\r\n        return api.get(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    Excluir(id: number): Promise<AxiosResponse<any>> {\r\n        return api.delete(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    GetListPagined(query: PaginationQuery): Promise<AxiosResponse<PaginationResult<T>>> {\r\n        return api.post(`${this.EndPoint}/list`, query);\r\n    }\r\n}\r\n\r\n","import { Categoria } from '../../models/Movimentos/Categoria';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/categoria';\r\n\r\nclass Api extends ApiBase<Categoria>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CategoriaApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport Select from 'antd/lib/select'\r\nimport { Input, Form } from 'antd'\r\nimport './nationality-select-styles.less'\r\nimport { ItemFormRender } from '../../hoc/WithFormItem'\r\nimport { useField } from 'formik'\r\n\r\n\r\nexport interface Props {\r\n    name: string;\r\n    nameIsBrasileiro: string;\r\n    label: string;\r\n    placeholder?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport enum NATIONALITY_TYPE {\r\n    BRASILEIRO = \"Brasileiro\",\r\n    ESTRANGEIRO = \"Estrangeiro\"\r\n}\r\n\r\nconst NationalitySelect: React.FC<Props> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , brasileiroHelpers] = useField(props.nameIsBrasileiro);\r\n    const [selectedValue, setSelectedValue] = useState(field.value)\r\n\r\n    useEffect(() => {\r\n        setSelectedValue(field.value === NATIONALITY_TYPE.BRASILEIRO ? NATIONALITY_TYPE.BRASILEIRO : NATIONALITY_TYPE.ESTRANGEIRO);\r\n    }, [field.value])\r\n\r\n    function onSelect(value: NATIONALITY_TYPE) {\r\n        setSelectedValue(value);\r\n\r\n        if (value === NATIONALITY_TYPE.BRASILEIRO) {\r\n            helpers.setValue(value);\r\n            brasileiroHelpers.setValue(true)\r\n        }\r\n        else {\r\n            helpers.setValue(\"\");\r\n            brasileiroHelpers.setValue(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form.Item\r\n            className=\"select-model-one-style-item\"\r\n            validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n            help={meta.error && meta.touched ? meta.error : \"\"}>\r\n            <ItemFormRender label={props.label} showLabel={true} required={props.required}>\r\n\r\n                <Input.Group compact className=\"nationality-group\">\r\n                    <Select\r\n                        onSelect={onSelect}\r\n                        value={selectedValue}\r\n                        className=\"nationality-select\">\r\n                        <Select.Option value={NATIONALITY_TYPE.BRASILEIRO}>{NATIONALITY_TYPE.BRASILEIRO}</Select.Option >\r\n                        <Select.Option value={NATIONALITY_TYPE.ESTRANGEIRO}>{NATIONALITY_TYPE.ESTRANGEIRO}</Select.Option >\r\n                    </Select>\r\n                    <Input style={{ width: '80%' }} hidden={selectedValue === NATIONALITY_TYPE.BRASILEIRO} {...field} placeholder={props.placeholder} />\r\n                </Input.Group>\r\n\r\n            </ItemFormRender>\r\n        </Form.Item>\r\n    )\r\n}\r\n\r\nexport default NationalitySelect\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaSchema } from './CategoriaSchema';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nconst FormCategoria: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCategoria(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Categoria, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await CategoriaApi.Update(values);\r\n            } else {\r\n                await CategoriaApi.Save(values);\r\n            }\r\n            props.history.push(\"/categoria\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCategoria(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCategoria = await CategoriaApi.GetById(id);\r\n            setCategoria(bdCategoria.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/categoria\"\r\n            breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: props.match.params.id ? \"Edição da Categoria\" : \"Nova Categoria\", URL: undefined }]}\r\n            initialValues={categoria}\r\n            validationSchema={CategoriaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={9}>\r\n                    <Input name=\"nome\" label=\"Categoria\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCategoria;\r\n","\r\nimport { BaseEntity } from './../BaseEntity';\r\nexport interface Pessoa extends BaseEntity {\r\n    apelido?: string | null,\r\n    bairro?: string | null,\r\n    cep?: string | null,\r\n    cidadeId?: number | null;\r\n    complemento?: string | null,\r\n    cpfcpnj?: string | null,\r\n    email?: string | null,\r\n    endereco?: string | null,\r\n    nome?: string | null,\r\n    numero?: string | null,\r\n    observacao?: string | null,\r\n    rgInscricaoEstadual?: string | null,\r\n    telefone?: string | null,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}","import * as Yup from 'yup';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\n// const regexCPFV1 = /(^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$)|(^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}$)/;\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const ClienteSchema = Yup.object().shape<Cliente>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O campo deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string().when(\"nacionalidade\", (nacionalidade: NATIONALITY_TYPE, schema: any) => {\r\n        if (nacionalidade === NATIONALITY_TYPE.BRASILEIRO) {\r\n            return Yup.string()\r\n                .nullable()\r\n                .required(\"Informe o CPF/CNPJ.\")\r\n                .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n                .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n                .matches(regexCPF, \"CPF/CNPJ não é válido.\")\r\n        }\r\n    }),\r\n\r\n    dataNascimento: Yup.date()\r\n        .nullable()\r\n        .typeError(\"Informe a data.\")\r\n        .required(\"Informe a data.\")\r\n        .max(new Date(), \"Data inválida.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    estadoCivil: Yup.mixed()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string().nullable();\r\n            }\r\n\r\n            return Yup.string().nullable().required('Informe o Estado Civíl.')\r\n        }),\r\n\r\n    limiteCredito: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode ser negativo\"),\r\n\r\n    nacionalidade: Yup.string()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string().nullable();\r\n            }\r\n\r\n            return Yup.string()\r\n                .nullable()\r\n                .required('Informe a Nacionalidade.')\r\n                .min(5, \"A Nacionalidade deve possuir mais de 5 caracteres.\")\r\n                .max(60, \"A Nacionalidade não deve possuir mais de 60 caracteres.\")\r\n        }),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n    sexo: Yup.mixed()\r\n        .when(\"tipo\", (tipo: TIPO_PESSOA, schema: any) => {\r\n            if (tipo === TIPO_PESSOA.Juridica) {\r\n                return Yup.string();\r\n            }\r\n\r\n            return Yup.string().required(\"Informe o sexo.\").nullable()\r\n        }),\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .nullable().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number().required(\"Informe a Condição de pagemento.\"),\r\n\r\n});","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, memo, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport \"./modal-form.less\"\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                wrapClassName=\"modal-wrap\"\r\n                className=\"moda-container\"\r\n                width=\"80%\"\r\n                style={{ top: 10, }}\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    idIsInt?: boolean;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const keyId = props.keyId ?? \"id\";\r\n    const idIsInt = props.idIsInt ?? true;\r\n    const keyDescription = props.keyDescription ?? \"nome\";\r\n    const required = props.required ?? true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: any | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            {idIsInt ?\r\n                                <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                                :\r\n                                <InputAntd value={meta.value} onChange={(e) => onChangeId(e.target.value)} onBlur={onBlurId} ></InputAntd>\r\n                            }\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? { [keyId]: field.value } : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<CondicaoPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CondicaoPagamentoApi = new Api();","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport NationalitySelect, { NATIONALITY_TYPE } from '../../../../../components/NationalitySelect/NationalitySelect';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const [fieldTipoPessoa] = useField<TIPO_PESSOA>(\"tipo\");\r\n    const [, , helperIsBrasileiro] = useField<boolean>(\"IsBrasileiro\");\r\n    const [fieldNacionalidade, , helperNacionalidade] = useField<NATIONALITY_TYPE>(\"nacionalidade\");\r\n    const [, , helperEstadoCivil,] = useField(\"estadoCivil\");\r\n    const [, , helperSexo] = useField(\"sexo\");\r\n\r\n    useEffect(() => {\r\n\r\n        if (fieldTipoPessoa.value === TIPO_PESSOA.Fisica) {\r\n            helperEstadoCivil.setValue(\"\");\r\n            helperSexo.setValue(\"\");\r\n        } else {\r\n            helperEstadoCivil.setValue(undefined);\r\n            helperSexo.setValue(undefined);\r\n        }\r\n        helperNacionalidade.setValue(NATIONALITY_TYPE.BRASILEIRO);\r\n        helperIsBrasileiro.setValue(true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [fieldTipoPessoa.value]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Cliente\" placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Data Nascimento\" : \"Data de Fundação\"} placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n\r\n                <Col span={6} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" required></NationalitySelect>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input\r\n                        name=\"rgInscricaoEstadual\"\r\n                        label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? `RG${fieldNacionalidade.value === NATIONALITY_TYPE.BRASILEIRO ? \"\" : \" (Documento)\"}` : `Inscrição Estadual`}\r\n                        placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"}\r\n                        required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required={fieldNacionalidade.value === NATIONALITY_TYPE.BRASILEIRO} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Cliente } from '../../models/Pessoas/Cliente';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/clientes';\r\n\r\nclass Api extends ApiBase<Cliente>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ClienteApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { ClienteSchema } from './ClienteSchema';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FormikHelpers } from 'formik';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\n\r\nconst FormCliente: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [cliente, setCliente] = useState<Cliente>({\r\n        apelido: undefined,\r\n        isBrasileiro: true,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        complemento: undefined,\r\n        cpfcpnj: undefined,\r\n        dataNascimento: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        estadoCivil: undefined,\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        sexo: undefined,\r\n        telefone: undefined,\r\n        tipo: TIPO_PESSOA.Fisica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined,\r\n        numero: undefined\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCliente(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(cliente: Cliente, formikHelpers: FormikHelpers<Cliente>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await ClienteApi.Update(cliente);\r\n            } else {\r\n                await ClienteApi.Save(cliente);\r\n            }\r\n            props.history.push(\"/cliente\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCliente(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await ClienteApi.GetById(id);\r\n            setCliente(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cliente\"\r\n            breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: props.match.params.id ? \"Edição do Cliente\" : \"Novo Cliente\", URL: undefined }]}\r\n            initialValues={cliente}\r\n            validationSchema={ClienteSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <GeralForm />\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCliente;\r\n","import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Cliente não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Cliente deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Apelido não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n\r\n    limiteCredito: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode ser negativo\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Condição de pagemento.\"),\r\n\r\n    contato: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Contato não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Contato deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n});\r\n","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    console.log(useFormikContext())\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Fornecedor } from '../../models/Pessoas/Fornecedor';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/fornecedores';\r\n\r\nclass Api extends ApiBase<Fornecedor>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FornecedorApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [fornecedor, setFornecedor] = useState<Fornecedor>({\r\n        apelido: undefined,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        complemento: undefined,\r\n        contato: undefined,\r\n        cpfcpnj: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nome: undefined,\r\n        numero: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        telefone: undefined,\r\n        tipo: TIPO_PESSOA.Juridica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(fornecedor: Fornecedor, formikHelpers: FormikHelpers<Fornecedor>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FornecedorApi.Update(fornecedor);\r\n            } else {\r\n                await FornecedorApi.Save(fornecedor);\r\n            }\r\n            props.history.push(\"/fornecedor\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFornecedor(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFornecedor = await FornecedorApi.GetById(id);\r\n            setFornecedor(bdFornecedor.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: props.match.params.id ? \"Edição do Fornecedor\" : \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import * as Yup from 'yup';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const FuncaoFuncionarioSchema = Yup.object().shape<FuncaoFuncionario>({\r\n\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Função do Funcionário não pode ser vaziu.'),\r\n\r\n    cargaHoraria: Yup.number()\r\n        .nullable()\r\n        .min(0.0001, \"A Carga Horária não pode ser igual ou inferior a 0.\")\r\n        .required('A Carga Horária deve ser informada.'),\r\n\r\n    observacao: Yup.string().nullable(),\r\n    \r\n    descricao: Yup.string().nullable(),\r\n});\r\n","import { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcao-funcionarios';\r\n\r\nclass Api extends ApiBase<FuncaoFuncionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncaoFuncionarioApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, Switch, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { FuncaoFuncionarioSchema } from './FuncaoFuncionarioSchema';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormFuncaoFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [funcaofuncionario, setFuncaofuncionario] = useState<FuncaoFuncionario>({\r\n        nome: undefined,\r\n        requerCNH: false,\r\n        descricao: undefined,\r\n        cargaHoraria: undefined,\r\n        observacao: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncaoFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FuncaoFuncionario, formikHelpers: FormikHelpers<FuncaoFuncionario>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncaoFuncionarioApi.Update(values);\r\n            } else {\r\n                await FuncaoFuncionarioApi.Save(values);\r\n            }\r\n            props.history.push(\"/funcao-funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFuncaoFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncaofuncionario = await FuncaoFuncionarioApi.GetById(id);\r\n            setFuncaofuncionario(bdFuncaofuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcao-funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: props.match.params.id ? \"Edição da Função Funcionário\" :\"Nova Função Funcionário\", URL: undefined }]}\r\n            initialValues={funcaofuncionario}\r\n            validationSchema={FuncaoFuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Função Funcionário\" placeholder=\"técnico\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"cargaHoraria\" label=\"Carga Horária\" placeholder=\"8\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Switch name=\"requerCNH\" label=\"Requer CNH?\" checkedChildren=\"Requer\" unCheckedChildren=\"Opcional\" ></Switch>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={14}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={14}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    )\r\n}\r\n\r\nexport default FormFuncaoFuncionario\r\n","import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport { FuncaoFuncionario } from './../../../../models/Pessoas/FuncaoFuncionario';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O campo deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O campo não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(16, \"O CPF/CNPJ não deve possuir mais de 16 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    dataNascimento: Yup.date()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .required(\"Informe a data.\")\r\n        .max(new Date(), \"Data inválida.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    estadoCivil: Yup.mixed().nullable().required('Informe o Estado Civíl.'),\r\n\r\n    nacionalidade: Yup.string()\r\n        .nullable()\r\n        .required('Informe a Nacionalidade.')\r\n        .min(5, \"A Nacionalidade deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"A Nacionalidade não deve possuir mais de 60 caracteres.\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(14, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n    sexo: Yup.mixed().nullable().required(\"Informe o sexo.\"),\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .nullable().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    cnh: Yup.string()\r\n        .nullable()\r\n        .max(9, \"A CNH não deve possuir mais de 9 caracteres.\")\r\n        .when(\"funcaoFuncionario\", (funcaoFuncionario: FuncaoFuncionario, schema: any) => {\r\n            if (!funcaoFuncionario || (funcaoFuncionario && !funcaoFuncionario.requerCNH)) {\r\n                return schema;\r\n            }\r\n\r\n            return schema\r\n                .typeError(\"Informe um valor válido.\")\r\n                .required(\"Informe a CNH.\");\r\n        }),\r\n\r\n    dataValidadeCNH: Yup.date()\r\n        .nullable()\r\n        .when([\"funcaoFuncionario\", \"cnh\"], (funcaoFuncionario: FuncaoFuncionario, cnh: string, schema: any) => {\r\n\r\n            if (funcaoFuncionario?.requerCNH === true || cnh?.length > 0) {\r\n                return Yup.date()\r\n                    .typeError(\"Informe um valor válido.\")\r\n                    .required(\"Informe a Data de Validade.\");\r\n            }\r\n\r\n            return Yup.date().nullable();\r\n        }),\r\n\r\n    funcaoFuncionarioId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Função do Funcionario\")\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../apis/Cidades/PaisApi';\r\nimport { PaginationResult, PaginationQuery } from '../../models/BaseEntity';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<any>>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ getListPagined: props.getListPagined  });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Label, ErrorMessage } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { PaginationResult, PaginationQuery } from '../../models/BaseEntity';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: Label;\r\n    columns: ColumnProps<any>[];\r\n    errorMessage: ErrorMessage;\r\n    path: string;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<any>>>;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [, metaTable, helperTable] = useField<any[]>({ name: props.name });\r\n    // const [data, setData] = useState<any[]>(metaTable.value ?? [])\r\n    const [, meta, helper] = useField<any[]>({ name: props.name + \"SelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        width: 100,\r\n        title: \"Ações\",\r\n        render: renderAction\r\n    })\r\n\r\n\r\n    function onSaveClick() {\r\n\r\n        let lefJoin = meta.value.filter(e => {\r\n            return (metaTable.value ?? []).filter((ee) => ee[keyId] === e[keyId]).length === 0\r\n        });\r\n\r\n        let value = [...(metaTable.value ?? []), ...lefJoin];\r\n        helperTable.setValue(value);\r\n\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        helperTable.setValue(metaTable.value.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={props.fetchMethod}\r\n                            name={props.name + \"SelectionIds\"}\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={props.label}\r\n                            errorMessage={props.errorMessage}\r\n                            getListPagined={props.getListPagined}\r\n                            path={props.path} />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={metaTable.value} size=\"small\" rowKey=\"id\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, TextArea, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { ServicoApi } from '../../../../../apis/Movimentos/ServicoApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { useField } from 'formik';\r\nimport NationalitySelect from '../../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FuncaoFuncionario } from '../../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n    ];\r\n\r\n    const [fieldFuncaoFuncionario] = useField<FuncaoFuncionario>(\"funcaoFuncionario\");\r\n    const [fieldCNH] = useField<string>(\"cnh\");\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Funcionário\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" required></NationalitySelect>\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"nome\"\r\n                        objectName=\"funcaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"salario\" label=\"Salario\" placeholder=\"2500,00\" required min={0}/>\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataAdmissao\"\r\n                        label=\"Data de Admissão\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        required={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataDemissao\"\r\n                        label=\"Data de Demissão\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" required={fieldFuncaoFuncionario?.value?.requerCNH} />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataValidadeCNH\"\r\n                        label=\"Data de Validade\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        required={fieldCNH.value?.length > 0 || fieldFuncaoFuncionario?.value?.requerCNH}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={ServicoApi.GetById.bind(ServicoApi)}\r\n                        getListPagined={ServicoApi.GetListPagined.bind(ServicoApi)}\r\n                        label={{ label: \"Serviços\", title: \"Selecione um Serviço\" }}\r\n                        name=\"servicos\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Serviço\" }}\r\n                        path=\"servico\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Funcionario } from '../../models/Pessoas/Funcionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcionarios';\r\n\r\nclass Api extends ApiBase<Funcionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncionarioApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario, setFuncionario] = useState<Funcionario>({\r\n        apelido: undefined,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        cidadeId: undefined,\r\n        cnh: undefined,\r\n        complemento: undefined,\r\n        cpfcpnj: undefined,\r\n        dataAdmissao: undefined,\r\n        dataDemissao: undefined,\r\n        dataNascimento: undefined,\r\n        dataValidadeCNH: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        estadoCivil: undefined,\r\n        funcaoFuncionarioId: undefined,\r\n        isBrasileiro: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: undefined,\r\n        numero: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        salario: undefined,\r\n        sexo: undefined,\r\n        telefone: undefined,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(Funcionario: Funcionario, formikHelpers: FormikHelpers<Funcionario>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncionarioApi.Update(Funcionario);\r\n            } else {\r\n                await FuncionarioApi.Save(Funcionario);\r\n            }\r\n            props.history.push(\"/funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncionario = await FuncionarioApi.GetById(id);\r\n            setFuncionario(bdFuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: props.match.params.id ? \"Edição do Funcionário\" : \"Novo Funcionário\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <GeralForm />\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import * as Yup from 'yup';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\n\r\n\r\nexport const MarcaSchema = Yup.object().shape<Marca>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Marca não pode ser vaziu.')\r\n});","import { Marca } from '../../models/Movimentos/Marca';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/marcas';\r\n\r\nclass Api extends ApiBase<Marca>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const MarcaApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaSchema } from './FormMarcaSchema';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst FormMarca: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [marca, setMarca] = useState<Marca>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMarca(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Marca, formikHelpers: FormikHelpers<Marca>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await MarcaApi.Update(values);\r\n            } else {\r\n                await MarcaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/marca\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getMarca(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdMarca = await MarcaApi.GetById(id);\r\n            setMarca(bdMarca.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/marca\"\r\n            breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: props.match.params.id ? \"Edição da marca\" :\"Nova marca\", URL: undefined }]}\r\n            initialValues={marca}\r\n            validationSchema={MarcaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Marca\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormMarca;\r\n","import * as Yup from 'yup';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\n\r\n\r\nexport const ProdutoSchema = Yup.object().shape<Produto>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Produto não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Produto deve possuir mais de 5 caracteres.\")\r\n        .required('Produto não pode ser vaziu.'),\r\n\r\n    marcaId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Marca.\")\r\n        .min(0, \"Informe a Marca.\"),\r\n\r\n    quantidade: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Quantidade.\")\r\n        .min(0, \"Informe a Quantidade.\"),\r\n\r\n    quantidadeMinima: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Quantidade Mínima.\")\r\n        .min(0, \"Informe a Quantidade Mínima.\"),\r\n\r\n    valorCompra: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe o Valor de Compra.\")\r\n        .min(0, \"Informe o Valor de Compra.\"),\r\n\r\n    valorVenda: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe o Valor de Venda.\")\r\n        .min(0, \"Informe o Valor de Venda.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    unidadeMedidaId: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe uma Unidade de Medida.\"),\r\n\r\n    codigoBarras: Yup.string()\r\n        .nullable()\r\n        .max(20, \"Codigo de Barras não deve possuir mais de 20 caracteres.\"),\r\n\r\n    referencia: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Referência não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Referência deve possuir mais de 5 caracteres.\")\r\n        .required('Referência não pode ser vazia.'),\r\n\r\n    descricao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import { Produto } from '../../models/Movimentos/Produto';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/produtos';\r\n\r\nclass Api extends ApiBase<Produto>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ProdutoApi = new Api();","import { UnidadeMedida } from '../../models/Movimentos/UnidadeMedida';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/unidades-medida';\r\n\r\nclass Api extends ApiBase<UnidadeMedida>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const UnidadeMedidaApi = new Api();","import React, { useState,useEffect } from 'react'\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { Input, TextArea, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { MarcaApi } from '../../../../../apis/Movimentos/MarcaApi';\r\nimport { Row, Col } from 'antd';\r\nimport { UnidadeMedidaApi } from '../../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\n\r\nconst FormGeneral: React.FC = () => {\r\n\r\n    const [,, helperTaxa] = useField<number>(\"taxa\");\r\n    const [, metaValorVenda, helperValorVenda] = useField<number>(\"valorVenda\");\r\n    const [, metaValorCompra] = useField<number>(\"valorCompra\");\r\n    const [valorVendaAtencao, setValorVendaAtencao] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setValorVendaAtencao(metaValorCompra.value >= metaValorVenda.value);\r\n    }, [metaValorCompra.value, metaValorVenda.value]);\r\n\r\n    function calculeValorTaxa(valorVenda: number = 0) {\r\n        let taxa = (valorVenda - metaValorCompra.value) / (metaValorCompra.value ) * 100;\r\n        helperTaxa.setValue(taxa);\r\n    }\r\n\r\n    function calculeValorVenda(taxa: number = 0) {\r\n        let valorVenda = metaValorCompra.value * ((taxa / 100) + 1);\r\n        if (isNaN(valorVenda)) {\r\n            return;\r\n        }\r\n        helperValorVenda.setValue(valorVenda);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Produto\" placeholder=\"Produto\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <SelectModelOne\r\n                        fetchMethod={UnidadeMedidaApi.GetById.bind(UnidadeMedidaApi)}\r\n                        name=\"unidadeMedidaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        idIsInt={false}\r\n                        showDescription={false}\r\n                        label={{ title: \"Seleção de Unidade de Medida\", label: \"Unidade de Medida\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Unidade de Medida!\" }}\r\n                        path=\"unidade-medida\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"codigoBarras\" label=\"Codigo Barras\" placeholder=\"Codigo Barras\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"referencia\" label=\"Referência\" placeholder=\"Codigo\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={MarcaApi.GetById.bind(MarcaApi)}\r\n                        name=\"marcaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Marca\", label: \"Marca\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Marca!\" }}\r\n                        path=\"marca\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidadeMinima\" label=\"Quantidade Mínima\" placeholder=\"2\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name=\"valorCompra\" label=\"Valor Compra\" placeholder=\"10,20\" required\r\n                        parser={(value) => value?.replace(/\\$\\s?|(,*)/g, '') || \"\"}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"taxa\" label=\"Margem de lucro (%)\" min={0}  placeholder=\"15,50\" onChange={calculeValorVenda}/>\r\n                </Col>\r\n\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        onChange={calculeValorTaxa}\r\n                        name=\"valorVenda\"\r\n                        label=\"Valor Venda\"\r\n                        placeholder=\"15,50\"\r\n                        required\r\n                        validateStatus={valorVendaAtencao ? \"warning\" : \"\"}\r\n                        help={valorVendaAtencao ? \"Valor de Venda é Inferior ao de Compra\" : \"\"} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidade\" label=\"Quantidade\" placeholder=\"10\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormGeneral\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ProdutoSchema } from './ProdutoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport FormGeneral from './components/FormGeneral';\r\nimport { Modal } from 'antd';\r\n\r\nconst FormProduto: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [produto, setProduto] = useState<Produto>({\r\n        nome: undefined,\r\n        categoriaId: undefined,\r\n        quantidade: undefined,\r\n        quantidadeMinima: undefined,\r\n        valorCompra: undefined,\r\n        valorVenda: undefined,\r\n        taxa: undefined,\r\n        unidadeMedidaId: undefined,\r\n        codigoBarras: undefined,\r\n        referencia: undefined,\r\n        marcaId: undefined,\r\n        descricao: undefined,\r\n        observacao: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProduto(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmitConfirm(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n\r\n        if (produto.valorCompra && produto.valorVenda && (produto.valorCompra <= produto.valorVenda)) {\r\n            await onSubmit(produto, formikHelpers);\r\n\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Valor de Venda inconsistente\",\r\n            content: \"O Valor de Venda é inferior ao valor de compra\",\r\n            onOk: () => onSubmit(produto, formikHelpers)\r\n        })\r\n    }\r\n\r\n    async function onSubmit(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ProdutoApi.Update(produto);\r\n            } else {\r\n                await ProdutoApi.Save(produto);\r\n            }\r\n\r\n            props.history.push(\"/produto\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getProduto(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdProduto = await ProdutoApi.GetById(id);\r\n\r\n            let valorVenda = bdProduto.data.valorVenda ?? 0;\r\n            let valorCompra = bdProduto.data.valorCompra ?? 0;\r\n            setProduto({ ...bdProduto.data, taxa: (valorVenda - valorCompra) / (valorCompra) * 100 });\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/produto\"\r\n            breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: props.match.params.id ? \"Edição do Produto\" : \"Novo Produto\", URL: undefined }]}\r\n            initialValues={produto}\r\n            validationSchema={ProdutoSchema}\r\n            onSubmit={onSubmitConfirm}\r\n        >\r\n\r\n            <FormGeneral />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormProduto\r\n","import * as Yup from 'yup';\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\n\r\n\r\nexport const ServicoSchema = Yup.object().shape<Servico>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(60, \"Serviço não deve possuir mais de 60 caracteres.\")\r\n        .required('Serviço não pode ser vaziu.'),\r\n\r\n    valor: Yup.number()\r\n        .min(-0.00001, \"O valor não pode ser negativo.\")\r\n        .required(\"Informe o valor.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    descricao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import React, {  } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TextArea } from './../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Funcionario } from './../../../../../models/Pessoas/Funcionario';\r\nimport { FuncionarioApi } from '../../../../../apis/Pessoas/FuncionarioApi';\r\n\r\nconst columns: ColumnProps<Funcionario>[] = [\r\n    {\r\n        title: 'Código',\r\n        dataIndex: 'id',\r\n    },\r\n    {\r\n        title: 'Funcionário',\r\n        dataIndex: 'nome',\r\n    },\r\n    {\r\n        title: 'Função',\r\n        dataIndex: 'funcaoFuncionario.nome',\r\n    },\r\n    {\r\n        title: 'Carga Horária',\r\n        dataIndex: 'funcaoFuncionario.cargaHoraria',\r\n    },\r\n];\r\n\r\nconst GeneralForm: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Serviço\" placeholder=\"Serviço\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <InputNumber name=\"valor\" label=\"Valor\" required min={0}/>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoriaa!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={3} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"oservacao\" label=\"Observação\" rows={3} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={FuncionarioApi.GetById.bind(FuncionarioApi)}\r\n                        getListPagined={FuncionarioApi.GetListPagined.bind(FuncionarioApi)}\r\n                        label={{ label: \"Funcionários\", title: \"Selecione um Funcionário\" }}\r\n                        name=\"funcionarios\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um funcionário\" }}\r\n                        path=\"funcionario\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeneralForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ServicoSchema } from './ServicoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport GeneralForm from './components/GeneralForm';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormServico: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [servico, setServico] = useState<Servico>({\r\n        nome: \"\",\r\n        valor: undefined,\r\n        categoriaId: undefined,\r\n        descricao: undefined,\r\n        observacao: undefined,\r\n        funcionarios: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getServico(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n\r\n    async function onSubmit(Servico: Servico, formikHelpers: FormikHelpers<Servico>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ServicoApi.Update(Servico);\r\n            } else {\r\n                await ServicoApi.Save(Servico);\r\n            }\r\n\r\n            props.history.push(\"/Servico\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getServico(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdServico = await ServicoApi.GetById(id);\r\n\r\n            setServico(bdServico.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/servico\"\r\n            breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: props.match.params.id ? \"Edição do Serviço\" : \"Novo Serviço\", URL: undefined }]}\r\n            initialValues={servico}\r\n            validationSchema={ServicoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeneralForm />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormServico\r\n","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal, notification } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => { setFormMode(FormMode.Edit); setState(undefined) }}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    try {\r\n\r\n                        props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                        props.tableProps.reflesh();\r\n\r\n                        notification.success({\r\n                            message: \"Registro excluido com sucesso!\",\r\n                            duration: 10\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        errorBack(null, e);\r\n                    }\r\n                    finally {\r\n                        setLoading(false);\r\n                        setFormMode(FormMode.List)\r\n                        hidenExluir();\r\n                    }\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading,\r\n                    autoFocus: true,\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../models/BaseEntity';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\n\r\nconst ListCategoria: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CategoriaApi.GetListPagined.bind(CategoriaApi) });\r\n\r\n    const columns: ColumnProps<Categoria>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CategoriaApi.Excluir.bind(CategoriaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCategoria;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CidadeApi.GetListPagined.bind(CidadeApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'estado.nome',\r\n        },\r\n    ], []);\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CidadeApi.Excluir.bind(CidadeApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport ListForm from '../../../../components/ListForm/ListForm'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\n\r\nconst ListCliente: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: ClienteApi.GetListPagined.bind(ClienteApi) });\r\n\r\n    const columns: ColumnProps<Cliente>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cliente',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Apelido/Nome Fantasia',\r\n            dataIndex: 'apelido',\r\n        },\r\n        {\r\n            title: 'CPF/CNPJ',\r\n            dataIndex: 'cpfcpnj',\r\n            render: (text: any, record: Cliente, index: number) => {\r\n                if (record.isBrasileiro) {\r\n                    return text;\r\n                }\r\n\r\n                return text + \" (estrangeiro)\";\r\n            }\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ClienteApi.Excluir.bind(ClienteApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListCliente\r\n\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CondicaoPagamentoApi.GetListPagined.bind(CondicaoPagamentoApi) });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CondicaoPagamentoApi.Excluir.bind(CondicaoPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import { Estado } from '../../models/Cidades/Estado';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\nclass Api extends ApiBase<Estado>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const EstadoApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: EstadoApi.GetListPagined.bind(EstadoApi)});\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'pais.nome',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={EstadoApi.Excluir.bind(EstadoApi)}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFornecedor: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FornecedorApi.GetListPagined.bind(FornecedorApi) });\r\n\r\n    const columns: ColumnProps<Fornecedor>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Fornecedor',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Nome Fantasia/Apelido',\r\n            dataIndex: 'bairro',\r\n        },\r\n        {\r\n            title: 'Crédito',\r\n            dataIndex: 'limiteCredito',\r\n            render: (text: any, record: Fornecedor, index: number) => {\r\n                var nf = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                });\r\n                return nf.format(record.limiteCredito ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FornecedorApi.Excluir.bind(FornecedorApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFornecedor;","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFuncaoFuncionario: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: FuncaoFuncionarioApi.GetListPagined.bind(FuncaoFuncionarioApi) });\r\n\r\n    const columns: ColumnProps<FuncaoFuncionario>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Função Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'cargaHoraria',\r\n        },\r\n        {\r\n            title: 'CNH?',\r\n            dataIndex: 'requerCNH',\r\n            render: (text: any, record: FuncaoFuncionario, index: number) => record.requerCNH ? \"Sim\" : \"Não\"\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncaoFuncionarioApi.Excluir.bind(FuncaoFuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncaoFuncionario\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\n\r\nconst ListFuncionario: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FuncionarioApi.GetListPagined.bind(FuncionarioApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'funcaoFuncionario.nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'funcaoFuncionario.cargaHoraria',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncionarioApi.Excluir.bind(FuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncionario;","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\n\r\nconst ListMarca: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: MarcaApi.GetListPagined.bind(MarcaApi) });\r\n\r\n    const columns: ColumnProps<Marca>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={MarcaApi.Excluir.bind(MarcaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListMarca;\r\n","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={PaisApi.Excluir.bind(PaisApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport { Typography } from 'antd';\r\nconst { Text } = Typography;\r\n\r\nconst ListProduto: React.FC = () => {\r\n    const response = UseListPagined({\r\n        getListPagined: ProdutoApi.GetListPagined.bind(ProdutoApi)\r\n    });\r\n\r\n    const columns: ColumnProps<Produto>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Produto',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'marca.nome',\r\n        },\r\n        {\r\n            title: 'Valor Compra',\r\n            dataIndex: 'valorCompra',\r\n            align:\"right\",\r\n            render: (valorCompra: number, record: Produto) => {\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return format.format(record.valorCompra ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Valor de Venda',\r\n            dataIndex: 'valorVenda',\r\n            align:\"right\",\r\n            render: (valorVenda: number, record: Produto) => {\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                if (record.valorVenda && record.valorCompra && record.valorVenda < record.valorCompra) {\r\n                    return <Text type=\"warning\">{format.format(record.valorVenda)}</Text>\r\n                }\r\n\r\n                return format.format(record.valorVenda ?? 0)\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ProdutoApi.Excluir.bind(ProdutoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListProduto;","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { Servico } from './../../../../models/Movimentos/Servico';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ServicoApi.GetListPagined.bind(ServicoApi) });\r\n\r\n    const columns:ColumnProps<Servico>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n            render:(text: any, record: Servico, index: number) =>{\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return format.format(record.valor ?? 0)\r\n            }\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ServicoApi.Excluir.bind(ServicoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import api from '../Api.configure';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Pessoas/LoginUser';\r\nimport AuthenticatedUser from '../../models/Pessoas/AuthenticatedUser';\r\nimport UserModel from '../../models/Pessoas/UserModel';\r\nimport UserChangePasswordModel from '../../models/Pessoas/UserChangePasswordModel';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\nclass Api extends ApiBase<UserModel>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n\r\n    TryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n        return api.post(endPoint + \"/authorize\", user);\r\n    }\r\n    \r\n    ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n        return api.put(endPoint + \"/Change-Password\", user);\r\n    }\r\n}\r\nexport const UserApi = new Api();\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./FormUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst FormUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUser;\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: UserApi.GetListPagined.bind(UserApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst FormPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: Pais, formikHelpers: FormikHelpers<Pais>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await PaisApi.Update(values);\r\n            } else {\r\n                await PaisApi.Save(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await PaisApi.GetById(id);\r\n            setPais(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: props.match.params.id ? \"Edição do Pais\" : \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(FormPais);\r\n","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst ListUnidadeMedida: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: UnidadeMedidaApi.GetListPagined.bind(UnidadeMedidaApi)});\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Unidade de Medida',\r\n            dataIndex: 'nome',\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={UnidadeMedidaApi.Excluir.bind(UnidadeMedidaApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListUnidadeMedida\r\n","import * as Yup from 'yup';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const UnidadeMedidaSchema = Yup.object().shape<UnidadeMedida>({\r\n    id: Yup.string()\r\n        .max(3, \"O campo Código não deve possuir mais de 3 caracteres.\")\r\n        .min(1, \"O campo Código deve possuir mais de 1 caracter.\")\r\n        .required('O campo Código não pode ser vaziu.'),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Unidade Medida não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\nimport { UnidadeMedidaSchema } from './UnidadeMedidaSchema';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\n\r\nconst FormUnidadeMedida: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [unidademedida, setUnidadeMedida] = useState<UnidadeMedida>({ nome: \"\", id: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getUnidadeMedida(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: UnidadeMedida, formikHelpers: FormikHelpers<UnidadeMedida>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UnidadeMedidaApi.Update(values);\r\n            } else {\r\n                await UnidadeMedidaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/unidade-medida\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n\r\n    }\r\n\r\n    async function getUnidadeMedida(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await UnidadeMedidaApi.GetById(id);\r\n            setUnidadeMedida(bdCidade.data);\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/unidade-medida\"\r\n            breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: props.match.params.id ? \"Edição da Unida de Medida\" : \"Nova Unida de Medida\", URL: undefined }]}\r\n            initialValues={unidademedida}\r\n            validationSchema={UnidadeMedidaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Unidade Medida\" placeholder=\"Unidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUnidadeMedida;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst FormCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<Cidade>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CidadeApi.Update(values);\r\n            } else {\r\n                await CidadeApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await CidadeApi.GetById(id);\r\n            setCidade(bdCidade.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: props.match.params.id ? \"Edição da Cidade\" : \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={EstadoApi.GetById.bind(EstadoApi)}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCidade;\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst FormEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await EstadoApi.Update(values);\r\n            } else {\r\n                await EstadoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await EstadoApi.GetById(id);\r\n            setEstado(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: props.match.params.id ? \"Edição do Estado\" : \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={PaisApi.GetById.bind(PaisApi)}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormEstado;\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await UserApi.GetById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UserApi.Update(values);\r\n            } else {\r\n                await UserApi.Save(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await UserApi.ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Dondição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem ser sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = useMemo(() => props.rowKey ?? \"id\", [props.rowKey]);\r\n    const dataSource = useMemo(() => mapRecord(field.value as any[]), [field.value]);\r\n    const components: TableComponents = useMemo(() => {\r\n        return {\r\n            body: {\r\n                row: (props) => <EditableFormRow {...props} />,\r\n                cell: (props) => <EditableCell {...props} />,\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const errorStyle: React.CSSProperties = useMemo(() => {\r\n        return {\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderRadius: \"5px\",\r\n        }\r\n    }, []);\r\n\r\n    const hasListError = useMemo(() => !Array.isArray(meta.error) && meta.touched && (meta.error?.length ?? \"\") > 2, [meta.error, meta.touched]);\r\n\r\n    const columnsAction = useMemo(() => props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    }), [props.columns]);\r\n\r\n    const columns: ColumnProps<any>[] = useMemo(() => columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    }), [columnsAction])\r\n\r\n    const handleSave = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource]);\r\n\r\n    const handleRemove = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowMode = useCallback(\r\n        (record: RecordTable & any, rowMode: RowMode) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowNew = useCallback(\r\n        () => {\r\n\r\n            let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n            helpers.setValue(mapedDataSource);\r\n        }, [dataSource])\r\n\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n\r\n    \r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nclass Api extends ApiBase<FormaPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FormaPagamentoApi = new Api();","import React, { memo } from 'react'\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { FormaPagamentoApi } from '../../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst RenderSelectionFormaPagamento: React.FC = () => {\r\n\r\n    return (\r\n        <SelectModelOne\r\n            fetchMethod={FormaPagamentoApi.GetById.bind(FormaPagamentoApi)}\r\n            name=\"formaPagamento.id\"\r\n            objectName=\"formaPagamento\"\r\n            keyDescription=\"nome\"\r\n            required={true}\r\n            showLabel={false}\r\n            label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n            errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n            col={{\r\n                inputId: 4,\r\n                btnSearch: 2,\r\n                inputDescription: 18\r\n            }}\r\n            path=\"forma-pagamento\" />\r\n    )\r\n}\r\n\r\nexport default memo(RenderSelectionFormaPagamento);","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport RenderSelectionMode from './RenderSelectionFormaPagamento'\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual (%)\", editable: true,\r\n            render: (text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"500px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <RenderSelectionMode />\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={13}>\r\n                    <Input name=\"nome\" label=\"Nome da Condição de Pagamento\" placeholder=\"Pagamento em 30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <br></br>\r\n            <Divider>Parcelas</Divider>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst FormCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CondicaoPagamentoApi.Update(values);\r\n            } else {\r\n                await CondicaoPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await CondicaoPagamentoApi.GetById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: props.match.params.id ? \"Edição da Condição de Pagamento\" :\"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCondicaoPagamento;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FormaPagamentoApi.GetListPagined.bind(FormaPagamentoApi) });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FormaPagamentoApi.Excluir.bind(FormaPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst FormFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await FormaPagamentoApi.Update(values);\r\n            } else {\r\n                await FormaPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdestado = await FormaPagamentoApi.GetById(id);\r\n            setFormaPagamento(bdestado.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName:props.match.params.id ? \"Edição da Forma de Pagamento\" : \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFormaPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport FormCategoria from '../../../pages/Movimentos/Categorias/FormCategoria/FormCategoria';\r\nimport FormCliente from '../../../pages/Pessoas/Clientes/FormCliente/FormCliente';\r\nimport FormFornecedor from '../../../pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor';\r\nimport FormFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario';\r\nimport FormFuncionario from '../../../pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario';\r\nimport FormMarca from './../../../pages/Movimentos/Marcas/FormMarca/FormMarca';\r\nimport FormProduto from '../../../pages/Movimentos/Produtos/FormProduto/FormProduto';\r\nimport FormServico from '../../../pages/Movimentos/Servicos/FormServico/FormServico';\r\nimport ListCategoria from './../../../pages/Movimentos/Categorias/ListCategoria/ListCategoria';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport ListCliente from '../../../pages/Pessoas/Clientes/ListCliente/ListCliente';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListFornecedor from '../../../pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor';\r\nimport ListFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario';\r\nimport ListFuncionario from '../../../pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario';\r\nimport ListMarca from '../../../pages/Movimentos/Marcas/ListCategoria/ListMarca';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport ListProduto from '../../../pages/Movimentos/Produtos/ListProduto/ListProduto';\r\nimport ListServico from './../../../pages/Movimentos/Servicos/ListServico/ListServico';\r\nimport ListUser from '../../../pages/Pessoas/Users/ListUser/ListUser';\r\nimport FormPais from '../../../pages/Cidades/Pais/FormPais/FormPais';\r\nimport ListUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida';\r\nimport FormUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida';\r\nimport FormCidade from '../../../pages/Cidades/Cidade/FormCidade/FormCidade';\r\nimport FormEstado from '../../../pages/Cidades/Estado/FormEstado/FormEstado';\r\nimport FormUser from '../../../pages/Pessoas/Users/FormUser/FormUser';\r\nimport FormCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport FormFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/categoria\" component={ListCategoria} exact />\r\n            <Route path=\"/categoria/edit/:id\" component={FormCategoria} />\r\n            <Route path=\"/categoria/new\" component={FormCategoria} />\r\n\r\n            <Route path=\"/cidade\" component={ListCidade} exact />\r\n            <Route path=\"/cidade/edit/:id\" component={FormCidade} />\r\n            <Route path=\"/cidade/new\" component={FormCidade} />\r\n\r\n            <Route path=\"/cliente\" component={ListCliente} exact />\r\n            <Route path=\"/cliente/edit/:id\" component={FormCliente} />\r\n            <Route path=\"/cliente/new\" component={FormCliente} />\r\n\r\n            <Route path=\"/condicao-pagamento\" component={ListCondicaoPagamento} exact />\r\n            <Route path=\"/condicao-pagamento/edit/:id\" component={FormCondicaoPagamento} />\r\n            <Route path=\"/condicao-pagamento/new\" component={FormCondicaoPagamento} />\r\n\r\n            <Route path=\"/estado\" component={ListEstado} exact />\r\n            <Route path=\"/estado/edit/:id\" component={FormEstado} />\r\n            <Route path=\"/estado/new\" component={FormEstado} />\r\n\r\n            <Route path=\"/forma-pagamento\" component={ListFormaPagamento} exact />\r\n            <Route path=\"/forma-pagamento/edit/:id\" component={FormFormaPagamento} />\r\n            <Route path=\"/forma-pagamento/new\" component={FormFormaPagamento} />\r\n\r\n            <Route path=\"/fornecedor\" component={ListFornecedor} exact />\r\n            <Route path=\"/fornecedor/edit/:id\" component={FormFornecedor} />\r\n            <Route path=\"/fornecedor/new\" component={FormFornecedor} />\r\n\r\n            <Route path=\"/funcao-funcionario\" component={ListFuncaoFuncionario} exact />\r\n            <Route path=\"/funcao-funcionario/edit/:id\" component={FormFuncaoFuncionario} />\r\n            <Route path=\"/funcao-funcionario/new\" component={FormFuncaoFuncionario} />\r\n\r\n            <Route path=\"/funcionario\" component={ListFuncionario} exact />\r\n            <Route path=\"/funcionario/edit/:id\" component={FormFuncionario} />\r\n            <Route path=\"/funcionario/new\" component={FormFuncionario} />\r\n\r\n            <Route path=\"/marca\" component={ListMarca} exact />\r\n            <Route path=\"/marca/edit/:id\" component={FormMarca} />\r\n            <Route path=\"/marca/new\" component={FormMarca} />\r\n\r\n            <Route path=\"/pais\" component={ListPais} exact />\r\n            <Route path=\"/pais/edit/:id\" component={FormPais} />\r\n            <Route path=\"/pais/new\" component={FormPais} />\r\n\r\n            <Route path=\"/produto\" component={ListProduto} exact />\r\n            <Route path=\"/produto/edit/:id\" component={FormProduto} />\r\n            <Route path=\"/produto/new\" component={FormProduto} />\r\n\r\n            <Route path=\"/servico\" component={ListServico} exact />\r\n            <Route path=\"/servico/edit/:id\" component={FormServico} />\r\n            <Route path=\"/servico/new\" component={FormServico} />\r\n\r\n            <Route path=\"/user\" component={ListUser} exact />\r\n            <Route path=\"/user/edit/:id\" component={FormUser} />\r\n            <Route path=\"/user/new\" component={FormUser} />\r\n\r\n            <Route path=\"/unidade-medida\" component={ListUnidadeMedida} exact />\r\n            <Route path=\"/unidade-medida/edit/:id\" component={FormUnidadeMedida} />\r\n            <Route path=\"/unidade-medida/new\" component={FormUnidadeMedida} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../../models/Pessoas/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../../services/Authenticate';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await UserApi.TryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout, { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Pessoas/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\"  component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}