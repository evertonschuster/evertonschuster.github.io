{"version":3,"sources":["webpack:///./src/components/Situation/InputSituation/InputSituation.style.less?2f7c","components/Situation/InputSituation/InputSituation.style.less","webpack:///./src/components/NationalitySelect/nationality-select-styles.less?585d","components/NationalitySelect/nationality-select-styles.less","webpack:///./src/components/ModalForm/modal-form.less?ad2b","components/ModalForm/modal-form.less","webpack:///./src/components/Situation/SelectFilterSituation/select-filter-situation.styles.less?2471","components/Situation/SelectFilterSituation/select-filter-situation.styles.less","webpack:///./src/components/Situation/SelectFilterSituation/component/menu-situation.styles.less?d41b","components/Situation/SelectFilterSituation/component/menu-situation.styles.less","webpack:///./src/pages/Pessoas/Users/Login/LoginUserStyle.less?0cf8","pages/Pessoas/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","hoc/WithFormItem.tsx","layouts/BasicLayout/BasicLayout.tsx","components/WithFormItem/withFormItem.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","hoc/useDebouncedCallback.ts","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","pages/Movimentos/Categorias/FormCategoria/CategoriaSchema.ts","apis/Api.configure.ts","apis/Api.ts","apis/Movimentos/CategoriaApi.ts","components/NationalitySelect/NationalitySelect.tsx","components/Situation/InputSituation/InputSituation.tsx","pages/Movimentos/Categorias/FormCategoria/FormCategoria.tsx","models/Pessoas/Pessoa.ts","pages/Pessoas/Clientes/FormCliente/ClienteSchema.ts","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalFormContext.ts","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","apis/Cidades/CidadeApi.ts","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","pages/Pessoas/Clientes/FormCliente/components/GeralForm.tsx","apis/Pessoas/ClienteApi.ts","pages/Pessoas/Clientes/FormCliente/FormCliente.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","apis/Pessoas/Fornecedor.Api.ts","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FuncaoFuncionarioSchema.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","models/BaseEntity.ts","pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","hoc/UseListPagined.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx","apis/Movimentos/ServicoApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","apis/Pessoas/FuncionarioApi.ts","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","pages/Movimentos/Marcas/FormMarca/FormMarcaSchema.ts","apis/Movimentos/MarcaApi.ts","pages/Movimentos/Marcas/FormMarca/FormMarca.tsx","pages/Movimentos/Produtos/FormProduto/ProdutoSchema.ts","apis/Movimentos/ProdutoApi.ts","apis/Movimentos/UnidadeMedidaApi.ts","pages/Movimentos/Produtos/FormProduto/components/FormGeneral.tsx","pages/Movimentos/Produtos/FormProduto/FormProduto.tsx","pages/Movimentos/Servicos/FormServico/ServicoSchema.ts","pages/Movimentos/Servicos/FormServico/components/GeneralForm.tsx","pages/Movimentos/Servicos/FormServico/FormServico.tsx","components/ListForm/components/ListFormTable.tsx","components/Situation/SelectFilterSituation/component/MenuSituation.tsx","components/Situation/SelectFilterSituation/SelectFilterSituation.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","components/Situation/ShowSituation/ShowSituation.tsx","pages/Movimentos/Categorias/ListCategoria/ListCategoria.tsx","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Pessoas/Clientes/ListCliente/ListCliente.tsx","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/ListEstado/ListEstado.tsx","pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor.tsx","pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario.tsx","pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario.tsx","pages/Movimentos/Marcas/ListCategoria/ListMarca.tsx","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","pages/Movimentos/Produtos/ListProduto/ListProduto.tsx","pages/Movimentos/Servicos/ListServico/ListServico.tsx","apis/Pessoas/UserApi.ts","pages/Pessoas/Users/FormUser/FormUser.tsx","pages/Pessoas/Users/ListUser/ListUser.tsx","pages/Cidades/Pais/FormPais/PaisSchema.ts","pages/Cidades/Pais/FormPais/FormPais.tsx","pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida.tsx","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/UnidadeMedidaSchema.ts","pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida.tsx","pages/Cidades/Cidade/FormCidade/CidadeSchema.ts","pages/Cidades/Cidade/FormCidade/FormCidade.tsx","pages/Cidades/Estado/FormEstado/EstadoSchema.ts","pages/Cidades/Estado/FormEstado/FormEstado.tsx","pages/Pessoas/Users/FormUser/UserSchema.ts","pages/Pessoas/Users/FormUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/FormUser/Components/ChangePassword.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/Percentual.tsx","apis/CondicaoPagamento/FormaPagamentoApi.ts","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/RenderSelectionFormaPagamento.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento.tsx","pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Pessoas/Users/Login/LoginUserSchema.ts","pages/Pessoas/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","disabled","ContentApp","props","Content","style","display","flex","alignItems","flexWrap","children","history","createHistory","basename","process","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","background","padding","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","Field","propsConf","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","withFormItem","basicLayoutContext","isViewMode","isDisabled","anotherProps","validateStatus","help","name","label","required","autoComplete","width","WithItemNone","showLabel","ItemFormRender","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","useEffect","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","mensagem","Array","isArray","length","errorArray","textAlign","setFieldError","reduce","p","c","find","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","FormikForm","forwardRef","ref","useHistory","useFormikContext","keyLocalStorage","toLowerCase","Modal","confirm","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","values","ceatedDate","Date","formData","savedForm","setValues","initialValues","onKeyUp","onKeyDown","isSubmitting","isLoading","zIndex","height","margin","left","top","position","fontSize","color","isFunction","paddingTop","flexDirection","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","backPath","submitForm","withRouter","childRef","formikHelpers","a","onSubmit","enableReinitialize","keyEvent","charCode","keyCode","CategoriaSchema","Yup","shape","nome","max","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","ValidationError","this","ApiBase","endPoint","EndPoint","t","post","put","id","get","toString","delete","query","NATIONALITY_TYPE","CategoriaApi","InputSituation","useField","meta","helpers","checkedChildren","unCheckedChildren","value","setValue","defaultChecked","checked","FormCategoria","categoria","setCategoria","loading","setLoading","match","params","Update","Save","GetById","bdCategoria","getCategoria","CrudFormLayout","validationSchema","placeholder","readOnly","SEXO","ESTADO_CIVIL","TIPO_PESSOA","NationalitySelect","field","nameIsBrasileiro","brasileiroHelpers","selectedValue","setSelectedValue","BRASILEIRO","ESTRANGEIRO","touched","Group","compact","onSelect","Option","hidden","regexCPF","ClienteSchema","nullable","min","apelido","bairro","cep","complemento","observacao","cpfcpnj","when","nacionalidade","schema","matches","email","endereco","limiteCredito","typeError","rgInscricaoEstadual","telefone","cidadeId","numero","condicaoPagamentoId","path","ModalFormContext","state","setState","ModalFormContextProvider","CloseForm","setVisible","visible","concat","wrapClassName","destroyOnClose","SelectMultiple","errorMessage","noSelection","description","setDescription","keyId","idIsInt","keyDescription","objectName","helpersObject","setSubmitting","showDescription","getDesciptionValues","fetchMethod","respose","handleClick","onChangeId","setTouched","onBlurId","col","inputId","onChange","onBlur","target","btnSearch","inputDescription","SelectOne","isNaN","Number","CidadeApi","CondicaoPagamentoApi","GeralForm","fieldTipoPessoa","helperIsBrasileiro","fieldNacionalidade","helperNacionalidade","helperEstadoCivil","helperSexo","useParams","Fisica","Juridica","defaultValue","bind","format","rows","ClienteApi","FormCliente","isBrasileiro","dataNascimento","estadoCivil","sexo","tipo","cliente","setCliente","bdpais","getCliente","FornecedorSchema","contato","FornecedorApi","FormFornecedor","fornecedor","setFornecedor","bdFornecedor","getFornecedor","FuncaoFuncionarioSchema","cargaHoraria","descricao","SITUACAO","FuncaoFuncionarioApi","FormFuncaoFuncionario","requerCNH","funcaofuncionario","setFuncaofuncionario","bdFuncaofuncionario","getFuncaoFuncionario","FuncionarioSchema","cnh","funcaoFuncionario","dataValidadeCNH","funcaoFuncionarioId","UseListPagined","setIsLoading","pageSize","currentPage","situacao","HABILITADO","filterRequest","setFilterRequest","total","dataSource","responseBack","setResponseBack","getDataBack","getListPagined","totalItem","result","valuesFilter","requestResult","reflesh","SelectModelMore","setDataSource","onSearch","text","filter","md","filterOption","newSelection","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","metaTable","helperTable","helper","columns","render","record","placement","onRemoveClick","lefJoin","ee","rowKey","ServicoApi","fieldFuncaoFuncionario","fieldCNH","GetListPagined","dataIndex","FuncionarioApi","FormFuncionario","dataAdmissao","dataDemissao","salario","funcionario","setFuncionario","Funcionario","bdFuncionario","getFuncionario","MarcaSchema","MarcaApi","FormMarca","marca","setMarca","bdMarca","getMarca","ProdutoSchema","marcaId","quantidade","quantidadeMinima","valorCompra","valorVenda","categoriaId","unidadeMedidaId","codigoBarras","referencia","ProdutoApi","UnidadeMedidaApi","FormGeneral","helperTaxa","metaValorVenda","helperValorVenda","metaValorCompra","valorVendaAtencao","setValorVendaAtencao","parser","replace","taxa","FormProduto","produto","setProduto","bdProduto","getProduto","ServicoSchema","valor","GeneralForm","FormServico","funcionarios","servico","setServico","Servico","bdServico","getServico","isSelectMode","keyProp","ListSelectedItem","showModal","setShowModal","setRecord","Edit","deleteFunction","Delete","showExluir","rowSelection","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","tableProps","success","desativarFunction","List","okType","okButtonProps","autoFocus","cancelButtonProps","pagination","page","onRow","bordered","useFixedHeader","MenuSituation","parent","rect","getBoundingClientRect","onChangeHabilitado","situation","TODOS","setSituacao","DESABILITADO","onChangeDesabilitado","onClose","SelectFilterSituation","refSelectMenu","showOptions","setShowOptions","filterValues","setFilterValues","onPressEnter","New","paddingBottom","ShowSituation","log","ListCategoria","Excluir","Desativar","ListCidade","useMemo","ListCliente","ListCondicaoPagamento","EstadoApi","ListEstado","ListFornecedor","Intl","NumberFormat","minimumFractionDigits","ListFuncaoFuncionario","ListFuncionario","ListMarca","PaisApi","Text","Typography","ListProduto","ListServico","Menus","UserApi","ListUser","PaisSchema","ddi","sigla","pais","setPais","getPais","ListUnidadeMedida","UnidadeMedidaSchema","FormUnidadeMedida","unidademedida","setUnidadeMedida","bdCidade","getUnidadeMedida","CidadeSchema","ddd","estadoId","FormCidade","cidade","setCidade","getCidade","EstadoSchema","uf","paisId","FormEstado","estado","setEstado","getEstado","UserSchema","phoneNumber","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","bdestado","getUser","ChangePasswordUser","initialErrors","FormUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","ty","toFixed","init","every","valid","RowMode","TypeAttribute","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","rowIndex","number","handleRowMode","edit","handleRemove","new","onNewRow","mapRecord","components","body","row","cell","errorStyle","borderWidth","borderStyle","borderColor","borderRadius","hasListError","columnsAction","editable","onCell","useCallback","dataSourceNew","handleRowNew","mapedDataSource","now","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","FormaPagamentoApi","CondicaoPagamentoGeneral","Math","round","FormCondicaoPagamento","condicaopagamento","setCondicaoPagamento","getCondicaoPagamento","ListFormaPagamento","FormaPagamentoSchema","FormFormaPagamento","formapagamento","setFormaPagamento","getFormaPagamento","RoutePath","component","exact","ListPais","FormPais","LoginUserSchema","search","redirectUrl","URLSearchParams","TryLoginUser","xs","sm","lg","xl","xxl","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa3d0ff5.chunk.js","sourcesContent":["var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./InputSituation.style.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./nationality-select-styles.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".nationality-select {\\n  flex: 1;\\n  display: flex !important;\\n}\\n.nationality-select .ant-select-selection {\\n  flex: 1;\\n}\\n.nationality-group {\\n  display: flex !important;\\n  flex: 1;\\n  margin-top: 5px !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./modal-form.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".modal-wrap .ant-modal-content {\\n  min-height: 80%;\\n}\\n.modal-wrap .ant-modal-body {\\n  padding: 0;\\n}\\n.modal-wrap .ant-modal-body .form-application-container {\\n  margin: 0 !important;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./select-filter-situation.styles.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".select-situation {\\n  height: 32px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n}\\n.select-situation .select-situation-description {\\n  padding-right: 8px;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./menu-situation.styles.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".menu {\\n  position: fixed;\\n  z-index: 500;\\n  background-color: white;\\n  box-shadow: 1px 1px 3px 1px gray;\\n}\\n.list-situation {\\n  list-style-type: none;\\n  padding: 0;\\n}\\n.list-situation li {\\n  padding: 4px;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: end;\\n}\\n.list-situation li label {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n.list-situation li:hover {\\n  background-color: #e2e2e2;\\n}\\n.menu-selection-layer {\\n  position: fixed;\\n  z-index: 499;\\n  top: 0;\\n  left: 0;\\n  height: 100vh;\\n  width: 100vw;\\n}\\n\", \"\"]);\n\n","var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n        >\r\n            <PerfectScrollbar>\r\n                <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                    <Menu.Item key=\"Menu\">\r\n                        <Link to=\"/\">\r\n                            <Icon type=\"home\" />\r\n                            <span>Tela inicial</span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"cidades\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"environment\" />\r\n                                <span>Cidades</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"cidadesCrud\">\r\n                            <Link to=\"/cidade\">Cidades</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"estadoCrud\">\r\n                            <Link to=\"/estado\">Estados</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"paisCrud\">\r\n                            <Link to=\"/pais\"> Paises</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n\r\n                    <SubMenu\r\n                        key=\"system\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"folder-open\" />\r\n                                <span>Cadastros do sistema</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"Categoria\">\r\n                            <Link to=\"/categoria\">Categoria</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Cliente\">\r\n                            <Link to=\"/cliente\">Clientes</Link>\r\n                        </Menu.Item>\r\n\r\n                        <SubMenu\r\n                            key=\"CondicaoPagamento\"\r\n                            title={\r\n                                <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                            }>\r\n\r\n                            <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                                <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"FormaPagamentoCrud\">\r\n                                <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                            </Menu.Item>\r\n\r\n                        </SubMenu>\r\n\r\n                        <Menu.Item key=\"Fornecedor\">\r\n                            <Link to=\"/fornecedor\">Fornecedores</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FuncaoFuncionario\">\r\n                            <Link to=\"/funcao-funcionario\">Função Funcionários</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Funcionario\">\r\n                            <Link to=\"/funcionario\">Funcionários</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Marca\">\r\n                            <Link to=\"/marca\">Marcas</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Produto\">\r\n                            <Link to=\"/produto\">Produtos</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"Servico\">\r\n                            <Link to=\"/servico\">Serviços</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"unidadeMedidaCrud\">\r\n                            <Link to=\"/unidade-medida\">Unidade de medidas</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"UserCrud\">\r\n                            <Link to=\"/user\">Usuários</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n\r\n                    <SubMenu\r\n                        key=\"Movimento\"\r\n                        disabled={true}\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"shop\" />\r\n                                <span>Movimento</span>\r\n                            </span>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"venda\">\r\n                            <Link to=\"/venda\">Vendas</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"compra\">\r\n                            <Link to=\"/compra\">Compras</Link>\r\n                        </Menu.Item>\r\n\r\n\r\n                    </SubMenu>\r\n\r\n                </Menu>\r\n            </PerfectScrollbar>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            flex: \"1\",\r\n            alignItems: \"stretch\",\r\n            flexWrap: \"wrap\",\r\n        }}>\r\n\r\n            {props.children}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory({\r\n    basename: process.env.PUBLIC_URL\r\n});","import AuthenticatedUser from \"../models/Pessoas/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\nexport declare const ValidateStatuses: [\"success\", \"warning\", \"error\", \"validating\", \"\"];\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n    validateStatus?: typeof ValidateStatuses[number];\r\n    help?: string;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    var anotherProps: any = {} as any;\r\n    if (props.validateStatus) {\r\n        anotherProps.validateStatus = props.validateStatus;\r\n        anotherProps.help = props.help;\r\n    }\r\n\r\n\r\n    return (\r\n        <FormItem\r\n            name={props.name}\r\n            label={props.label || \"\"}\r\n            required={props.required}\r\n            className=\"form-custom-item\"\r\n            {...anotherProps}\r\n        >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field,] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <HeaderApp breadcrumbList={breadcrumb} />\r\n                    <PerfectScrollbar\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flex: \"1\",\r\n                            background: \"#F0F2F5\"\r\n                        }} >\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik?: FormikHelpers<any> | null, response?: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        formik?.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem) && mensagem.length > 0) {\r\n                let errorArray: any[] = errors[element];\r\n\r\n                if (errorArray.length > 0) {\r\n                    mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                    formik?.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n                }\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element) && mensagem.length > 0) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n    initialValues: any;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues({ ...props.initialValues, ...savedForm.formData });\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    initialValues={props.initialValues}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import * as Yup from 'yup';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\n\r\n\r\nexport const CategoriaSchema = Yup.object().shape<Categoria>({\r\n    nome: Yup.string()\r\n        .max(50, \"Categoria não deve possuir mais de 50 caracteres.\")\r\n        .required('Categoria não pode estar vaziu.')\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if ((error.response!.data!.code === 422 || error.response.status === 422) ||\r\n            (error.response!.data!.code === 409 || error.response.status === 409) ||\r\n            (error.response!.data!.code === 400 || error.response.status === 400)) {\r\n            return Promise.reject(new ValidationError(error.response));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.data.errors;\r\n        this.code = values.data.code ?? values.status;\r\n        this.message = values.data.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import { AxiosResponse } from 'axios';\r\nimport api from './Api.configure';\r\nimport { IBaseEntity, PaginationResult, PaginationQuery } from '../models/BaseEntity';\r\n\r\nexport class ApiBase<T extends IBaseEntity<any>> {\r\n\r\n    EndPoint: string;\r\n\r\n    constructor(endPoint: string) {\r\n        this.EndPoint = endPoint;\r\n    }\r\n\r\n\r\n    Save(t: T): Promise<AxiosResponse<any>> {\r\n        return api.post(this.EndPoint, t);\r\n    }\r\n\r\n    Update(t: T): Promise<AxiosResponse<any>> {\r\n        return api.put(`${this.EndPoint}/${t.id}`, t);\r\n    }\r\n\r\n    GetById(id: number): Promise<AxiosResponse<T>> {\r\n        return api.get(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    Excluir(id: number): Promise<AxiosResponse<any>> {\r\n        return api.delete(`${this.EndPoint}/${id.toString()}`);\r\n    }\r\n\r\n    GetListPagined(query: PaginationQuery): Promise<AxiosResponse<PaginationResult<T>>> {\r\n        return api.post(`${this.EndPoint}/list`, query);\r\n    }\r\n\r\n    Desativar(id: number): Promise<AxiosResponse<any>> {\r\n        return api.put(`${this.EndPoint}/desativar/${id.toString()}`);\r\n    }\r\n}\r\n\r\n","import { Categoria } from '../../models/Movimentos/Categoria';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/categoria';\r\n\r\nclass Api extends ApiBase<Categoria>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CategoriaApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport Select from 'antd/lib/select'\r\nimport { Input, Form } from 'antd'\r\nimport './nationality-select-styles.less'\r\nimport { ItemFormRender } from '../../hoc/WithFormItem'\r\nimport { useField } from 'formik'\r\n\r\n\r\nexport interface Props {\r\n    name: string;\r\n    nameIsBrasileiro: string;\r\n    label: string;\r\n    placeholder?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport enum NATIONALITY_TYPE {\r\n    BRASILEIRO = \"Brasileiro\",\r\n    ESTRANGEIRO = \"Estrangeiro\"\r\n}\r\n\r\nconst NationalitySelect: React.FC<Props> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , brasileiroHelpers] = useField(props.nameIsBrasileiro);\r\n    const [selectedValue, setSelectedValue] = useState(field.value)\r\n\r\n    useEffect(() => {\r\n        setSelectedValue(field.value === NATIONALITY_TYPE.BRASILEIRO ? NATIONALITY_TYPE.BRASILEIRO : NATIONALITY_TYPE.ESTRANGEIRO);\r\n    }, [field.value])\r\n\r\n    function onSelect(value: NATIONALITY_TYPE) {\r\n        setSelectedValue(value);\r\n\r\n        if (value === NATIONALITY_TYPE.BRASILEIRO) {\r\n            helpers.setValue(value);\r\n            brasileiroHelpers.setValue(true)\r\n        }\r\n        else {\r\n            helpers.setValue(\"\");\r\n            brasileiroHelpers.setValue(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form.Item\r\n            className=\"select-model-one-style-item\"\r\n            validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n            help={meta.error && meta.touched ? meta.error : \"\"}>\r\n            <ItemFormRender label={props.label} showLabel={true} required={props.required}>\r\n\r\n                <Input.Group compact className=\"nationality-group\">\r\n                    <Select\r\n                        onSelect={onSelect}\r\n                        value={selectedValue}\r\n                        className=\"nationality-select\">\r\n                        <Select.Option value={NATIONALITY_TYPE.BRASILEIRO}>{NATIONALITY_TYPE.BRASILEIRO}</Select.Option >\r\n                        <Select.Option value={NATIONALITY_TYPE.ESTRANGEIRO}>{NATIONALITY_TYPE.ESTRANGEIRO}</Select.Option >\r\n                    </Select>\r\n                    <Input style={{ width: '80%' }} hidden={selectedValue === NATIONALITY_TYPE.BRASILEIRO} {...field} placeholder={props.placeholder} />\r\n                </Input.Group>\r\n\r\n            </ItemFormRender>\r\n        </Form.Item>\r\n    )\r\n}\r\n\r\nexport default NationalitySelect\r\n","import React from 'react'\r\nimport { Switch } from 'antd'\r\nimport { useField } from 'formik';\r\nimport { ItemFormRender } from '../../../hoc/WithFormItem';\r\nimport \"./InputSituation.style.less\"\r\n\r\nexport interface Props {\r\n    name: string;\r\n}\r\n\r\nconst InputSituation: React.FC<Props> = (props) => {\r\n    const [, meta, helpers] = useField(props);\r\n\r\n    function onClick() {\r\n        if (!meta.value) {\r\n            return helpers.setValue(new Date());\r\n        }\r\n\r\n        helpers.setValue(undefined);\r\n    }\r\n\r\n    return (\r\n        <ItemFormRender label=\"Situação\">\r\n            <Switch className=\"switch-class\"\r\n                checkedChildren=\"Habilitado\"\r\n                unCheckedChildren=\"Desabilitado\"\r\n                onClick={onClick}\r\n                defaultChecked\r\n                checked={!meta.value} />\r\n        </ItemFormRender>\r\n    )\r\n}\r\n\r\nexport default InputSituation\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaSchema } from './CategoriaSchema';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\nconst FormCategoria: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCategoria(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Categoria, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await CategoriaApi.Update(values);\r\n            } else {\r\n                await CategoriaApi.Save(values);\r\n            }\r\n            props.history.push(\"/categoria\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCategoria(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCategoria = await CategoriaApi.GetById(id);\r\n            setCategoria(bdCategoria.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/categoria\"\r\n            breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: props.match.params.id ? \"Edição da Categoria\" : \"Nova Categoria\", URL: undefined }]}\r\n            initialValues={categoria}\r\n            validationSchema={CategoriaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={9}>\r\n                    <Input name=\"nome\" label=\"Categoria\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCategoria;\r\n","\r\nimport { BaseEntity } from './../BaseEntity';\r\nexport interface Pessoa extends BaseEntity {\r\n    apelido?: string | null,\r\n    bairro?: string | null,\r\n    cep?: string | null,\r\n    cidadeId?: number | null;\r\n    complemento?: string | null,\r\n    cpfcpnj?: string | null,\r\n    email?: string | null,\r\n    endereco?: string | null,\r\n    nome?: string | null,\r\n    numero?: string | null,\r\n    observacao?: string | null,\r\n    rgInscricaoEstadual?: string | null,\r\n    telefone?: string | null,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}","import * as Yup from 'yup';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\n// const regexCPFV1 = /(^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$)|(^\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2}$)/;\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const ClienteSchema = Yup.object().shape<Cliente>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Cliente não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Cliente deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Apelido não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string().when(\"nacionalidade\", (nacionalidade: NATIONALITY_TYPE, schema: any) => {\r\n        if (nacionalidade === NATIONALITY_TYPE.BRASILEIRO) {\r\n            return Yup.string()\r\n                .nullable()\r\n                .max(18, \"O CPF/CNPJ não deve possuir mais de 18 caracteres\")\r\n                .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n                .matches(regexCPF, \"CPF/CNPJ não é válido.\")\r\n        }\r\n    }),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    limiteCredito: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode estar negativo\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(18, \"Documento inválido.\"),\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .nullable().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number().required(\"Informe a Condição de pagemento.\"),\r\n\r\n});","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, memo, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport \"./modal-form.less\"\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && (state.length === 0 || state[0]?.id === undefined)))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                wrapClassName=\"modal-wrap\"\r\n                className=\"moda-container\"\r\n                width=\"95%\"\r\n                style={{ top: 10, }}\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    idIsInt?: boolean;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\");\r\n    const keyId = props.keyId ?? \"id\";\r\n    const idIsInt = props.idIsInt ?? true;\r\n    const keyDescription = props.keyDescription ?? \"nome\";\r\n    const required = props.required ?? true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: any | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            {idIsInt ?\r\n                                <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                                :\r\n                                <InputAntd value={meta.value} onChange={(e) => onChangeId(e.target.value)} onBlur={onBlurId} ></InputAntd>\r\n                            }\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? { [keyId]: field.value } : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<CondicaoPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CondicaoPagamentoApi = new Api();","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport NationalitySelect, { NATIONALITY_TYPE } from '../../../../../components/NationalitySelect/NationalitySelect';\r\nimport { useParams } from 'react-router-dom';\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const [fieldTipoPessoa] = useField<TIPO_PESSOA>(\"tipo\");\r\n    const [, , helperIsBrasileiro] = useField<boolean>(\"IsBrasileiro\");\r\n    const [fieldNacionalidade, , helperNacionalidade] = useField<NATIONALITY_TYPE>(\"nacionalidade\");\r\n    const [, , helperEstadoCivil,] = useField(\"estadoCivil\");\r\n    const [, , helperSexo] = useField(\"sexo\");\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n\r\n        helperEstadoCivil.setValue(undefined);\r\n        helperSexo.setValue(undefined);\r\n        helperNacionalidade.setValue(NATIONALITY_TYPE.BRASILEIRO);\r\n        helperIsBrasileiro.setValue(true);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [fieldTipoPessoa.value]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required disabled={!!id}>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Cliente\" placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"apelido\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" defaultValue={undefined}>\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\"  >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"Data Nascimento\" : \"Data de Fundação\"} placeholder=\"01/01/2001\" format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n\r\n                <Col span={6} hidden={fieldTipoPessoa.value === TIPO_PESSOA.Juridica}>\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" ></NationalitySelect>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input\r\n                        name=\"rgInscricaoEstadual\"\r\n                        label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? `RG${fieldNacionalidade.value === NATIONALITY_TYPE.BRASILEIRO ? \"\" : \" (Documento)\"}` : `Inscrição Estadual`}\r\n                        placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"}\r\n                        fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={fieldTipoPessoa.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Cliente } from '../../models/Pessoas/Cliente';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/clientes';\r\n\r\nclass Api extends ApiBase<Cliente>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ClienteApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { ClienteSchema } from './ClienteSchema';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FormikHelpers } from 'formik';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\n\r\nconst FormCliente: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [cliente, setCliente] = useState<Cliente>({\r\n        apelido: undefined,\r\n        isBrasileiro: true,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        complemento: undefined,\r\n        cpfcpnj: undefined,\r\n        dataNascimento: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        estadoCivil: undefined,\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        sexo: undefined,\r\n        telefone: undefined,\r\n        tipo: TIPO_PESSOA.Fisica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined,\r\n        numero: undefined\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCliente(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(cliente: Cliente, formikHelpers: FormikHelpers<Cliente>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await ClienteApi.Update(cliente);\r\n            } else {\r\n                await ClienteApi.Save(cliente);\r\n            }\r\n            props.history.push(\"/cliente\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCliente(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await ClienteApi.GetById(id);\r\n            setCliente(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cliente\"\r\n            breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: props.match.params.id ? \"Edição do Cliente\" : \"Novo Cliente\", URL: undefined }]}\r\n            initialValues={cliente}\r\n            validationSchema={ClienteSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <GeralForm />\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCliente;\r\n","import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Fornecedor não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Fornecedor deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Fornecedor.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Apelido não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(18, \"O CPF/CNPJ não deve possuir mais de 18 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n\r\n    limiteCredito: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido\")\r\n        .required('Informe o Limite de credito.')\r\n        .min(-0.00001, \"O Limite de credito não pode estar negativo\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(18, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    condicaoPagamentoId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Condição de pagemento.\"),\r\n\r\n    contato: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Contato não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"O Contato deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n});\r\n","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport { useParams } from 'react-router-dom';\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    let { id } = useParams();\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required disabled={!!id}>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Fornecedor } from '../../models/Pessoas/Fornecedor';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/fornecedores';\r\n\r\nclass Api extends ApiBase<Fornecedor>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FornecedorApi = new Api();\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [fornecedor, setFornecedor] = useState<Fornecedor>({\r\n        apelido: undefined,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        complemento: undefined,\r\n        contato: undefined,\r\n        cpfcpnj: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        id: undefined,\r\n        limiteCredito: undefined,\r\n        nome: undefined,\r\n        numero: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        telefone: undefined,\r\n        tipo: TIPO_PESSOA.Juridica,\r\n        cidadeId: undefined,\r\n        condicaoPagamentoId: undefined\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(fornecedor: Fornecedor, formikHelpers: FormikHelpers<Fornecedor>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FornecedorApi.Update(fornecedor);\r\n            } else {\r\n                await FornecedorApi.Save(fornecedor);\r\n            }\r\n            props.history.push(\"/fornecedor\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFornecedor(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFornecedor = await FornecedorApi.GetById(id);\r\n            setFornecedor(bdFornecedor.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: props.match.params.id ? \"Edição do Fornecedor\" : \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import * as Yup from 'yup';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\n\r\n\r\nexport const FuncaoFuncionarioSchema = Yup.object().shape<FuncaoFuncionario>({\r\n\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(50, \"Função do Funcionário não deve possuir mais de 50 caracteres.\")\r\n        .required('Função do Funcionário não pode estar vaziu.'),\r\n\r\n    cargaHoraria: Yup.number()\r\n        .nullable()\r\n        .min(0.0001, \"A Carga Horária não pode estar igual ou inferior a 0.\")\r\n        .required('A Carga Horária deve estar informada.'),\r\n\r\n    observacao: Yup.string().nullable().max(255, \"Observação não pode ter mais de 255 caracteres.\"),\r\n\r\n    descricao: Yup.string().nullable().max(255, \"Descrição não pode ter mais de 255 caracteres.\"),\r\n});\r\n","import { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcao-funcionarios';\r\n\r\nclass Api extends ApiBase<FuncaoFuncionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncaoFuncionarioApi = new Api();","export interface BaseEntity extends IBaseEntity<number> {\r\n}\r\n\r\nexport interface IBaseEntity<TId> {\r\n    id?: TId;\r\n    DataCriacao?: Date;\r\n    DataAtualizacao?: Date;\r\n}\r\n\r\nexport interface PaginationQuery {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    filter?: string;\r\n    orderByProps?: string;\r\n    situacao?: SITUACAO\r\n}\r\n\r\nexport interface PaginationResult<TEntity> {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    totalItem: number;\r\n    result: TEntity[]\r\n}\r\n\r\nexport enum SITUACAO {\r\n    HABILITADO = \"Habilitado\",\r\n    DESABILITADO = \"Desabilitado\",\r\n    TODOS = \"Todos\"\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input, TextArea, Switch, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport { FuncaoFuncionarioSchema } from './FuncaoFuncionarioSchema';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormFuncaoFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [funcaofuncionario, setFuncaofuncionario] = useState<FuncaoFuncionario>({\r\n        nome: undefined,\r\n        requerCNH: false,\r\n        descricao: undefined,\r\n        cargaHoraria: undefined,\r\n        observacao: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncaoFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FuncaoFuncionario, formikHelpers: FormikHelpers<FuncaoFuncionario>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncaoFuncionarioApi.Update(values);\r\n            } else {\r\n                await FuncaoFuncionarioApi.Save(values);\r\n            }\r\n            props.history.push(\"/funcao-funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFuncaoFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncaofuncionario = await FuncaoFuncionarioApi.GetById(id);\r\n            setFuncaofuncionario(bdFuncaofuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcao-funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: props.match.params.id ? \"Edição da Função Funcionário\" : \"Nova Função Funcionário\", URL: undefined }]}\r\n            initialValues={funcaofuncionario}\r\n            validationSchema={FuncaoFuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Função Funcionário\" placeholder=\"técnico\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"cargaHoraria\" label=\"Carga Horária\" placeholder=\"8\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Switch name=\"requerCNH\" label=\"Requer CNH?\" checkedChildren=\"Requer\" unCheckedChildren=\"Opcional\" ></Switch>\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={17}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={17}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    )\r\n}\r\n\r\nexport default FormFuncaoFuncionario\r\n","import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport { FuncaoFuncionario } from './../../../../models/Pessoas/FuncaoFuncionario';\r\nconst regexCPF = /([0-9]{2}[.]?[0-9]{3}[.]?[0-9]{3}[/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[.]?[0-9]{3}[.]?[0-9]{3}[-]?[0-9]{2})/;\r\nconst regexRG = /((^[A-Z]{2}-?)?([0-9\\\\.-]{5,}))([A-Z]{3})?([A-Z]{2})?/\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario>({\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Funcionário não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Função do Funcionário  deve possuir mais de 5 caracteres.\")\r\n        .required('Informe o Cliente.'),\r\n\r\n    apelido: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Apelido não deve possuir mais de 60 caracteres.\"),\r\n\r\n    bairro: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Bairro não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe Bairro.'),\r\n\r\n    cep: Yup.string()\r\n        .nullable()\r\n        .max(9, \"O CEP não deve possuir mais de 9 caracteres.\")\r\n        .min(8, \"O CEP deve possuir mais de 8 caracteres.\")\r\n        .required('Informe o CEP.'),\r\n\r\n    complemento: Yup.string()\r\n        .nullable()\r\n        .max(60, \"O Complemento não deve possuir mais de 60 caracteres\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"A Descrição não deve possuir mais de 255 caracteres\"),\r\n\r\n    cpfcpnj: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o CPF/CNPJ.\")\r\n        .max(18, \"O CPF/CNPJ não deve possuir mais de 18 caracteres\")\r\n        .min(5, \"O CPF/CNPJ deve possuir mais de 5 caracteres\")\r\n        .matches(regexCPF, \"CPF/CNPJ não é válido.\"),\r\n\r\n    dataNascimento: Yup.date()\r\n        .nullable()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .required(\"Informe a data.\")\r\n        .max(new Date(), \"Data inválida.\"),\r\n\r\n    email: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe o Email.\")\r\n        .max(60, \"O Email não deve possuir mais de 60 caracteres\")\r\n        .email(\"Informe um email válido\"),\r\n\r\n    endereco: Yup.string()\r\n        .nullable()\r\n        .min(5, \"O Endereço deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"O Endereço não deve possuir mais de 60 caracteres.\")\r\n        .required('Informe o Endereço.'),\r\n\r\n    estadoCivil: Yup.mixed().nullable().required('Informe o Estado Civíl.'),\r\n\r\n    nacionalidade: Yup.string()\r\n        .nullable()\r\n        .required('Informe a Nacionalidade.')\r\n        .min(5, \"A Nacionalidade deve possuir mais de 5 caracteres.\")\r\n        .max(60, \"A Nacionalidade não deve possuir mais de 60 caracteres.\"),\r\n\r\n    rgInscricaoEstadual: Yup.string()\r\n        .nullable()\r\n        .matches(regexRG, \"Documento inválido.\")\r\n        .max(18, \"Documento inválido.\")\r\n        .required(\"Informe o Documento.\"),\r\n\r\n    sexo: Yup.mixed().nullable().required(\"Informe o sexo.\"),\r\n\r\n    telefone: Yup.string()\r\n        .nullable()\r\n        .min(5, \"Informe um telefone válido,\")\r\n        .max(30, \"O Telefone não pode ter mais de 30 caracteres.\")\r\n        .required(\"Informe um telefone.\"),\r\n\r\n    cidadeId: Yup.number()\r\n        .typeError(\"Informe um valor válido.\")\r\n        .nullable().required(\"Informe a Cidade.\"),\r\n\r\n    numero: Yup.string()\r\n        .nullable()\r\n        .typeError(\"Informe o Número.\")\r\n        .min(1, \"O Número deve possuir mais de 1 caracteres.\")\r\n        .max(10, \"O Número não pode ter mais de 10 caracteres.\")\r\n        .required(\"Informe o Número.\"),\r\n\r\n    cnh: Yup.string()\r\n        .nullable()\r\n        .max(14, \"A CNH não deve possuir mais de 14 caracteres.\")\r\n        .when(\"funcaoFuncionario\", (funcaoFuncionario: FuncaoFuncionario, schema: any) => {\r\n            if (!funcaoFuncionario || (funcaoFuncionario && !funcaoFuncionario.requerCNH)) {\r\n                return schema;\r\n            }\r\n\r\n            return schema\r\n                .typeError(\"Informe um valor válido.\")\r\n                .required(\"Informe a CNH.\");\r\n        }),\r\n\r\n    dataValidadeCNH: Yup.date()\r\n        .nullable()\r\n        .when([\"funcaoFuncionario\", \"cnh\"], (funcaoFuncionario: FuncaoFuncionario, cnh: string, schema: any) => {\r\n\r\n            if (funcaoFuncionario?.requerCNH === true || cnh?.length > 0) {\r\n                return Yup.date()\r\n                    .typeError(\"Informe um valor válido.\")\r\n                    .required(\"Informe a Data de Validade.\");\r\n            }\r\n\r\n            return Yup.date().nullable();\r\n        }),\r\n\r\n    funcaoFuncionarioId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Função do Funcionario\")\r\n});\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult, SITUACAO } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1, situacao: SITUACAO.HABILITADO })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../apis/Cidades/PaisApi';\r\nimport { PaginationResult, PaginationQuery } from '../../models/BaseEntity';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<any>>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ getListPagined: props.getListPagined  });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Label, ErrorMessage } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { PaginationResult, PaginationQuery } from '../../models/BaseEntity';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: Label;\r\n    columns: ColumnProps<any>[];\r\n    errorMessage: ErrorMessage;\r\n    path: string;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<any>>>;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [, metaTable, helperTable] = useField<any[]>({ name: props.name });\r\n    // const [data, setData] = useState<any[]>(metaTable.value ?? [])\r\n    const [, meta, helper] = useField<any[]>({ name: props.name + \"SelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        width: 100,\r\n        title: \"Ações\",\r\n        render: renderAction\r\n    })\r\n\r\n\r\n    function onSaveClick() {\r\n\r\n        let lefJoin = meta.value.filter(e => {\r\n            return (metaTable.value ?? []).filter((ee) => ee[keyId] === e[keyId]).length === 0\r\n        });\r\n\r\n        let value = [...(metaTable.value ?? []), ...lefJoin];\r\n        helperTable.setValue(value);\r\n\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        helperTable.setValue(metaTable.value.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={props.fetchMethod}\r\n                            name={props.name + \"SelectionIds\"}\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={props.label}\r\n                            errorMessage={props.errorMessage}\r\n                            getListPagined={props.getListPagined}\r\n                            path={props.path} />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={metaTable.value} size=\"small\" rowKey=\"id\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, TextArea, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { ServicoApi } from '../../../../../apis/Movimentos/ServicoApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { useField } from 'formik';\r\nimport NationalitySelect from '../../../../../components/NationalitySelect/NationalitySelect';\r\nimport { FuncaoFuncionario } from '../../../../../models/Pessoas/FuncaoFuncionario';\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n    ];\r\n\r\n    const [fieldFuncaoFuncionario] = useField<FuncaoFuncionario>(\"funcaoFuncionario\");\r\n    const [fieldCNH] = useField<string>(\"cnh\");\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Funcionário\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <NationalitySelect name=\"nacionalidade\" label=\"Nacionalidade\" nameIsBrasileiro=\"isBrasileiro\" placeholder=\"Brasileiro.\" required></NationalitySelect>\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cpfcpnj\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"nome\"\r\n                        objectName=\"funcaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"salario\" label=\"Salário\" placeholder=\"2500,00\" required min={0}/>\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataAdmissao\"\r\n                        label=\"Data de Admissão\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        required={true}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataDemissao\"\r\n                        label=\"Data de Demissão\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" required={fieldFuncaoFuncionario?.value?.requerCNH} />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker\r\n                        name=\"dataValidadeCNH\"\r\n                        label=\"Data de Validade\"\r\n                        placeholder=\"01/01/2001\"\r\n                        format=\"DD/MM/yyyy\"\r\n                        required={fieldCNH.value?.length > 0 || fieldFuncaoFuncionario?.value?.requerCNH}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={ServicoApi.GetById.bind(ServicoApi)}\r\n                        getListPagined={ServicoApi.GetListPagined.bind(ServicoApi)}\r\n                        label={{ label: \"Serviços\", title: \"Selecione um Serviço\" }}\r\n                        name=\"servicos\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Serviço\" }}\r\n                        path=\"servico\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import { Funcionario } from '../../models/Pessoas/Funcionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcionarios';\r\n\r\nclass Api extends ApiBase<Funcionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncionarioApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { NATIONALITY_TYPE } from '../../../../components/NationalitySelect/NationalitySelect';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario, setFuncionario] = useState<Funcionario>({\r\n        apelido: undefined,\r\n        bairro: undefined,\r\n        cep: undefined,\r\n        cidadeId: undefined,\r\n        cnh: undefined,\r\n        complemento: undefined,\r\n        cpfcpnj: undefined,\r\n        dataAdmissao: undefined,\r\n        dataDemissao: undefined,\r\n        dataNascimento: undefined,\r\n        dataValidadeCNH: undefined,\r\n        email: undefined,\r\n        endereco: undefined,\r\n        estadoCivil: undefined,\r\n        funcaoFuncionarioId: undefined,\r\n        isBrasileiro: undefined,\r\n        nacionalidade: NATIONALITY_TYPE.BRASILEIRO,\r\n        nome: undefined,\r\n        numero: undefined,\r\n        observacao: undefined,\r\n        rgInscricaoEstadual: undefined,\r\n        salario: undefined,\r\n        sexo: undefined,\r\n        telefone: undefined,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(Funcionario: Funcionario, formikHelpers: FormikHelpers<Funcionario>) {\r\n        try {\r\n            if (props.match.params.id) {\r\n                await FuncionarioApi.Update(Funcionario);\r\n            } else {\r\n                await FuncionarioApi.Save(Funcionario);\r\n            }\r\n            props.history.push(\"/funcionario\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getFuncionario(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdFuncionario = await FuncionarioApi.GetById(id);\r\n            setFuncionario(bdFuncionario.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: props.match.params.id ? \"Edição do Funcionário\" : \"Novo Funcionário\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <GeralForm />\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import * as Yup from 'yup';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\n\r\n\r\nexport const MarcaSchema = Yup.object().shape<Marca>({\r\n    nome: Yup.string()\r\n        .max(50, \"Marca não deve possuir mais de 50 caracteres.\")\r\n        .required('Marca não pode estar vaziu.')\r\n});","import { Marca } from '../../models/Movimentos/Marca';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/marcas';\r\n\r\nclass Api extends ApiBase<Marca>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const MarcaApi = new Api();","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaSchema } from './FormMarcaSchema';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormMarca: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [marca, setMarca] = useState<Marca>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getMarca(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Marca, formikHelpers: FormikHelpers<Marca>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await MarcaApi.Update(values);\r\n            } else {\r\n                await MarcaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/marca\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getMarca(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdMarca = await MarcaApi.GetById(id);\r\n            setMarca(bdMarca.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/marca\"\r\n            breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: props.match.params.id ? \"Edição da marca\" :\"Nova marca\", URL: undefined }]}\r\n            initialValues={marca}\r\n            validationSchema={MarcaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Marca\" placeholder=\"Manutenção\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormMarca;\r\n","import * as Yup from 'yup';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\n\r\n\r\nexport const ProdutoSchema = Yup.object().shape<Produto>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Produto não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Produto deve possuir mais de 5 caracteres.\")\r\n        .required('Produto não pode estar vaziu.'),\r\n\r\n    marcaId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Marca.\")\r\n        .min(0, \"Informe a Marca.\"),\r\n\r\n    quantidade: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Quantidade.\")\r\n        .min(0, \"Informe a Quantidade.\"),\r\n\r\n    quantidadeMinima: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Quantidade Mínima.\")\r\n        .min(0, \"Informe a Quantidade Mínima.\"),\r\n\r\n    valorCompra: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe o Valor de Compra.\")\r\n        .min(0, \"Informe o Valor de Compra.\"),\r\n\r\n    valorVenda: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe o Valor de Venda.\")\r\n        .min(0, \"Informe o Valor de Venda.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .nullable()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    unidadeMedidaId: Yup.string()\r\n        .nullable()\r\n        .required(\"Informe uma Unidade de Medida.\"),\r\n\r\n    codigoBarras: Yup.string()\r\n        .nullable()\r\n        .max(20, \"Código de Barras não deve possuir mais de 20 caracteres.\"),\r\n\r\n    referencia: Yup.string()\r\n        .nullable()\r\n        .max(60, \"Referência não deve possuir mais de 60 caracteres.\")\r\n        .min(5, \"Referência deve possuir mais de 5 caracteres.\")\r\n        .required('Referência não pode estar vazia.'),\r\n\r\n    descricao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import { Produto } from '../../models/Movimentos/Produto';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/produtos';\r\n\r\nclass Api extends ApiBase<Produto>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ProdutoApi = new Api();","import { UnidadeMedida } from '../../models/Movimentos/UnidadeMedida';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/unidades-medida';\r\n\r\nclass Api extends ApiBase<UnidadeMedida>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const UnidadeMedidaApi = new Api();","import React, { useState,useEffect } from 'react'\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { Input, TextArea, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { MarcaApi } from '../../../../../apis/Movimentos/MarcaApi';\r\nimport { Row, Col } from 'antd';\r\nimport { UnidadeMedidaApi } from '../../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport { useField } from 'formik';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormGeneral: React.FC = () => {\r\n\r\n    const [,, helperTaxa] = useField<number>(\"taxa\");\r\n    const [, metaValorVenda, helperValorVenda] = useField<number>(\"valorVenda\");\r\n    const [, metaValorCompra] = useField<number>(\"valorCompra\");\r\n    const [valorVendaAtencao, setValorVendaAtencao] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setValorVendaAtencao(metaValorCompra.value >= metaValorVenda.value);\r\n    }, [metaValorCompra.value, metaValorVenda.value]);\r\n\r\n    function calculeValorTaxa(value: number | string | undefined = 0) {\r\n        let valorVenda = value as number;\r\n        let taxa = (valorVenda - metaValorCompra.value) / (metaValorCompra.value ) * 100;\r\n        helperTaxa.setValue(taxa);\r\n    }\r\n\r\n    function calculeValorVenda(value: number | string | undefined = 0) {\r\n        let taxa = value as number;\r\n\r\n        let valorVenda = metaValorCompra.value * ((taxa / 100) + 1);\r\n        if (isNaN(valorVenda)) {\r\n            return;\r\n        }\r\n        helperValorVenda.setValue(valorVenda);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Produto\" placeholder=\"Produto\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <SelectModelOne\r\n                        fetchMethod={UnidadeMedidaApi.GetById.bind(UnidadeMedidaApi)}\r\n                        name=\"unidadeMedidaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        idIsInt={false}\r\n                        showDescription={false}\r\n                        label={{ title: \"Seleção de Unidade de Medida\", label: \"Unidade de Medida\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Unidade de Medida!\" }}\r\n                        path=\"unidade-medida\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"codigoBarras\" label=\"Codigo Barras\" placeholder=\"Codigo Barras\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"referencia\" label=\"Referência\" placeholder=\"Codigo\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={4} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={MarcaApi.GetById.bind(MarcaApi)}\r\n                        name=\"marcaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Marca\", label: \"Marca\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Marca!\" }}\r\n                        path=\"marca\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoria!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidadeMinima\" label=\"Quantidade Mínima\" placeholder=\"2\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name=\"valorCompra\" label=\"Valor Compra\" placeholder=\"10,20\" required\r\n                        parser={(value) => value?.replace(/\\$\\s?|(,*)/g, '') || \"\"}\r\n                    />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"taxa\" label=\"Margem de lucro (%)\" min={0}  placeholder=\"15,50\" onChange={calculeValorVenda}/>\r\n                </Col>\r\n\r\n\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        onChange={calculeValorTaxa}\r\n                        name=\"valorVenda\"\r\n                        label=\"Valor Venda\"\r\n                        placeholder=\"15,50\"\r\n                        required\r\n                        validateStatus={valorVendaAtencao ? \"warning\" : \"\"}\r\n                        help={valorVendaAtencao ? \"Valor de Venda é Inferior ao de Compra\" : \"\"} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"quantidade\" label=\"Quantidade\" placeholder=\"10\" required />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormGeneral\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ProdutoSchema } from './ProdutoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport FormGeneral from './components/FormGeneral';\r\nimport { Modal } from 'antd';\r\n\r\nconst FormProduto: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [produto, setProduto] = useState<Produto>({\r\n        nome: undefined,\r\n        categoriaId: undefined,\r\n        quantidade: undefined,\r\n        quantidadeMinima: undefined,\r\n        valorCompra: undefined,\r\n        valorVenda: undefined,\r\n        taxa: undefined,\r\n        unidadeMedidaId: undefined,\r\n        codigoBarras: undefined,\r\n        referencia: undefined,\r\n        marcaId: undefined,\r\n        descricao: undefined,\r\n        observacao: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProduto(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmitConfirm(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n\r\n        if (produto.valorCompra && produto.valorVenda && (produto.valorCompra <= produto.valorVenda)) {\r\n            await onSubmit(produto, formikHelpers);\r\n\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Valor de Venda inconsistente\",\r\n            content: \"O Valor de Venda é inferior ao valor de compra\",\r\n            onOk: () => onSubmit(produto, formikHelpers)\r\n        })\r\n    }\r\n\r\n    async function onSubmit(produto: Produto, formikHelpers: FormikHelpers<Produto>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ProdutoApi.Update(produto);\r\n            } else {\r\n                await ProdutoApi.Save(produto);\r\n            }\r\n\r\n            props.history.push(\"/produto\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getProduto(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdProduto = await ProdutoApi.GetById(id);\r\n\r\n            let valorVenda = bdProduto.data.valorVenda ?? 0;\r\n            let valorCompra = bdProduto.data.valorCompra ?? 0;\r\n            setProduto({ ...bdProduto.data, taxa: (valorVenda - valorCompra) / (valorCompra) * 100 });\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/produto\"\r\n            breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: props.match.params.id ? \"Edição do Produto\" : \"Novo Produto\", URL: undefined }]}\r\n            initialValues={produto}\r\n            validationSchema={ProdutoSchema}\r\n            onSubmit={onSubmitConfirm}\r\n        >\r\n\r\n            <FormGeneral />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormProduto\r\n","import * as Yup from 'yup';\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\n\r\n\r\nexport const ServicoSchema = Yup.object().shape<Servico>({\r\n    id: Yup.number(),\r\n\r\n    nome: Yup.string()\r\n        .max(60, \"Serviço não deve possuir mais de 60 caracteres.\")\r\n        .required('Serviço não pode estar vaziu.'),\r\n\r\n    valor: Yup.number()\r\n        .min(-0.00001, \"O valor não pode estar negativo.\")\r\n        .required(\"Informe o valor.\"),\r\n\r\n    categoriaId: Yup.number()\r\n        .required(\"Informe a Categoria.\")\r\n        .min(0, \"Informe a Categoria.\"),\r\n\r\n    descricao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Descrição não deve possuir mais de 255 caracteres.\"),\r\n\r\n    observacao: Yup.string()\r\n        .nullable()\r\n        .max(255, \"Observação não deve possuir mais de 255 caracteres.\"),\r\n});\r\n","import React, {  } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TextArea } from './../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { CategoriaApi } from '../../../../../apis/Movimentos/CategoriaApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Funcionario } from './../../../../../models/Pessoas/Funcionario';\r\nimport { FuncionarioApi } from '../../../../../apis/Pessoas/FuncionarioApi';\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst columns: ColumnProps<Funcionario>[] = [\r\n    {\r\n        title: 'Código',\r\n        dataIndex: 'id',\r\n    },\r\n    {\r\n        title: 'Funcionário',\r\n        dataIndex: 'nome',\r\n    },\r\n    {\r\n        title: 'Função',\r\n        dataIndex: 'funcaoFuncionario.nome',\r\n    },\r\n    {\r\n        title: 'Carga Horária',\r\n        dataIndex: 'funcaoFuncionario.cargaHoraria',\r\n    },\r\n];\r\n\r\nconst GeneralForm: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Serviço\" placeholder=\"Serviço\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <InputNumber name=\"valor\" label=\"Valor\" required min={0}/>\r\n                </Col>\r\n\r\n                <Col span={8}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CategoriaApi.GetById.bind(CategoriaApi)}\r\n                        name=\"categoriaId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Categoria\", label: \"Categoria\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos uma Categoriaa!\" }}\r\n                        path=\"categoria\" />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <TextArea name=\"descricao\" label=\"Descrição\" rows={3} />\r\n                </Col>\r\n\r\n                <Col span={12}>\r\n                    <TextArea name=\"oservacao\" label=\"Observação\" rows={3} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={FuncionarioApi.GetById.bind(FuncionarioApi)}\r\n                        getListPagined={FuncionarioApi.GetListPagined.bind(FuncionarioApi)}\r\n                        label={{ label: \"Funcionários\", title: \"Selecione um Funcionário\" }}\r\n                        name=\"funcionarios\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um funcionário\" }}\r\n                        path=\"funcionario\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeneralForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Servico } from '../../../../models/Movimentos/Servico';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ServicoSchema } from './ServicoSchema';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport GeneralForm from './components/GeneralForm';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst FormServico: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n    const [servico, setServico] = useState<Servico>({\r\n        nome: \"\",\r\n        valor: undefined,\r\n        categoriaId: undefined,\r\n        descricao: undefined,\r\n        observacao: undefined,\r\n        funcionarios: undefined\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getServico(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n\r\n    async function onSubmit(Servico: Servico, formikHelpers: FormikHelpers<Servico>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await ServicoApi.Update(Servico);\r\n            } else {\r\n                await ServicoApi.Save(Servico);\r\n            }\r\n\r\n            props.history.push(\"/Servico\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getServico(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdServico = await ServicoApi.GetById(id);\r\n\r\n            setServico(bdServico.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/servico\"\r\n            breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: props.match.params.id ? \"Edição do Serviço\" : \"Novo Serviço\", URL: undefined }]}\r\n            initialValues={servico}\r\n            validationSchema={ServicoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeneralForm />\r\n\r\n        </CrudFormLayout>)\r\n}\r\n\r\nexport default FormServico\r\n","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal, notification } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\nimport { ValidationError } from '../../../apis/Api.configure';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    desativarFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => { setFormMode(FormMode.Edit); setState(undefined) }}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n    function showDisableSituation(e: ValidationError) {\r\n        Modal.confirm({\r\n            title: e.message,\r\n            content: \"Deseja desativar?\",\r\n            cancelText: \"Cancelar\",\r\n            okText: \"Desativar\",\r\n            onOk: async () => {\r\n                setLoading(true);\r\n                try {\r\n\r\n                    props.desativarFunction && await props.desativarFunction((record || {})[key])\r\n                    props.tableProps.reflesh();\r\n\r\n                    notification.success({\r\n                        message: \"Registro desativado com sucesso!\",\r\n                        duration: 10\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    errorBack(null, e);\r\n                }\r\n                finally {\r\n                    setLoading(false);\r\n                    setFormMode(FormMode.List)\r\n                    hidenExluir();\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    try {\r\n\r\n                        props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                        props.tableProps.reflesh();\r\n\r\n                        notification.success({\r\n                            message: \"Registro excluido com sucesso!\",\r\n                            duration: 10\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        errorBack(null, e);\r\n\r\n                        if (e.code === 409 && props.desativarFunction && !(record || {})[\"situacao\"]) {\r\n                            return showDisableSituation(e);\r\n                        }\r\n                    }\r\n                    finally {\r\n                        setLoading(false);\r\n                        setFormMode(FormMode.List)\r\n                        hidenExluir();\r\n                    }\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading,\r\n                    autoFocus: true,\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { useState } from 'react'\r\nimport \"./menu-situation.styles.less\"\r\nimport ShowSituation from '../../ShowSituation/ShowSituation';\r\nimport { Checkbox } from 'antd';\r\nimport { SITUACAO } from '../../../../models/BaseEntity';\r\n\r\nexport interface Props {\r\n    parent: HTMLElement | null;\r\n    situation: SITUACAO;\r\n    setSituacao: React.Dispatch<React.SetStateAction<SITUACAO>>\r\n    onClose: () => void\r\n}\r\n\r\nconst MenuSituation: React.FC<Props> = (props) => {\r\n\r\n    if (!props.parent) {\r\n        return null;\r\n    }\r\n\r\n    let rect = props.parent.getBoundingClientRect();\r\n\r\n    let top = rect.top + 30;\r\n    let left = rect.left;\r\n    let width = rect.width;\r\n\r\n    function onChangeHabilitado(event: React.MouseEvent<HTMLLIElement, MouseEvent>) {\r\n\r\n        event.preventDefault()\r\n\r\n        if (props.situation === SITUACAO.TODOS) {\r\n            return props.setSituacao(SITUACAO.DESABILITADO);\r\n        }\r\n\r\n        return props.setSituacao(SITUACAO.TODOS);\r\n    }\r\n\r\n    function onChangeDesabilitado(event: React.MouseEvent<HTMLLIElement, MouseEvent>) {\r\n\r\n        event.preventDefault()\r\n\r\n        if (props.situation === SITUACAO.TODOS) {\r\n            return props.setSituacao(SITUACAO.HABILITADO);\r\n        }\r\n        return props.setSituacao(SITUACAO.TODOS);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-selection-layer\" onClick={props.onClose}>\r\n            </div>\r\n            <div style={{ top, left, width }} className=\"menu\">\r\n                <ul className=\"list-situation\">\r\n                    <li onClick={onChangeHabilitado} >\r\n                        <Checkbox\r\n                            checked={props.situation === SITUACAO.HABILITADO || props.situation === SITUACAO.TODOS}\r\n                            onClick={onChangeHabilitado} />Habilitado\r\n                            {/* {ShowSituation(null)} */}\r\n                    </li>\r\n\r\n                    <li onClick={onChangeDesabilitado} >\r\n                        <Checkbox\r\n                            checked={props.situation === SITUACAO.DESABILITADO || props.situation === SITUACAO.TODOS}\r\n                            onClick={onChangeDesabilitado} />Desabilitado\r\n                            {/* {ShowSituation({ Situacao: new Date() })} */}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuSituation\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { SITUACAO } from '../../../models/BaseEntity';\r\nimport { Icon, Tooltip } from 'antd';\r\nimport \"./select-filter-situation.styles.less\"\r\nimport MenuSituation from './component/MenuSituation';\r\n\r\nexport interface Props {\r\n    onChange: (values: SITUACAO) => void;\r\n}\r\n\r\nconst SelectFilterSituation: React.FC<Props> = (props) => {\r\n\r\n    const [situacao, setSituacao] = useState<SITUACAO>(SITUACAO.HABILITADO);\r\n    const refSelectMenu = useRef<HTMLDivElement>(null);\r\n    const [showOptions, setShowOptions] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        props.onChange(situacao);\r\n    }, [props, situacao])\r\n\r\n    return (\r\n        <Tooltip placement=\"top\" title=\"Filtro por situação.\" >\r\n            <div className=\"select-situation\" ref={refSelectMenu} onClick={() => setShowOptions((value) => !value)}>\r\n                <span className=\"select-situation-description\">\r\n                    {situacao}\r\n                </span>\r\n                <span>\r\n                    <Icon type={showOptions ? \"up\" : \"down\"} style={{ fontSize: 15 }} />\r\n                </span>\r\n            </div>\r\n\r\n            {showOptions && <MenuSituation parent={refSelectMenu.current} situation={situacao} setSituacao={setSituacao} onClose={() => setShowOptions(false)} />}\r\n\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default SelectFilterSituation\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button, Select } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport SelectFilterSituation from '../../Situation/SelectFilterSituation/SelectFilterSituation';\r\nimport { SITUACAO } from '../../../models/BaseEntity';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const [situacao, setSituacao] = useState<SITUACAO>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n\r\n    const { Option } = Select;\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues, situacao })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={3} style={{ textAlign: \"center\" }}>\r\n                <SelectFilterSituation onChange={(value) => setSituacao(value)} />\r\n            </Col>\r\n\r\n            <Col span={1} >\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues, situacao })\r\n                    }} />\r\n            </Col>\r\n\r\n\r\n            <Col span={3} push={7} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../models/BaseEntity';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n    desativarFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        desativarFunction={props.desativarFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import React from 'react'\r\nimport { Badge } from 'antd'\r\n\r\nexport interface Props {\r\n    Situacao?: Date | null\r\n}\r\n\r\nconst ShowSituation = (props : Props | undefined | null) => {\r\n    console.log(props)\r\n\r\n    if (!props) {\r\n        return <Badge color={\"blue\"} text={\"Habilitado\"} />\r\n    }\r\n\r\n    return <Badge color={\"red\"} text={\"Desabilitado\"} />\r\n}\r\n\r\nexport default ShowSituation\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Categoria } from '../../../../models/Movimentos/Categoria';\r\nimport { CategoriaApi } from '../../../../apis/Movimentos/CategoriaApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListCategoria: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CategoriaApi.GetListPagined.bind(CategoriaApi) });\r\n\r\n    const columns: ColumnProps<Categoria>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Categorias\", URL: \"/categoria\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={CategoriaApi.Excluir.bind(CategoriaApi)}\r\n                desativarFunction={CategoriaApi.Desativar.bind(CategoriaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCategoria;\r\n","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CidadeApi.GetListPagined.bind(CidadeApi) });\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'estado.nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ], []);\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={CidadeApi.Desativar.bind(CidadeApi)}\r\n                deleteFunction={CidadeApi.Excluir.bind(CidadeApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport ListForm from '../../../../components/ListForm/ListForm'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ClienteApi } from '../../../../apis/Pessoas/ClienteApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Cliente } from '../../../../models/Pessoas/Cliente';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListCliente: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: ClienteApi.GetListPagined.bind(ClienteApi) });\r\n\r\n    const columns: ColumnProps<Cliente>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cliente',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Apelido/Nome Fantasia',\r\n            dataIndex: 'apelido',\r\n        },\r\n        {\r\n            title: 'CPF/CNPJ',\r\n            dataIndex: 'cpfcpnj',\r\n            render: (text: any, record: Cliente, index: number) => {\r\n                if (record.isBrasileiro) {\r\n                    return text;\r\n                }\r\n\r\n                return text + \" (estrangeiro)\";\r\n            }\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Clientes\", URL: \"/cliente\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={ClienteApi.Desativar.bind(ClienteApi)}\r\n                deleteFunction={ClienteApi.Excluir.bind(ClienteApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListCliente\r\n\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: CondicaoPagamentoApi.GetListPagined.bind(CondicaoPagamentoApi) });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={CondicaoPagamentoApi.Desativar.bind(CondicaoPagamentoApi)}\r\n                deleteFunction={CondicaoPagamentoApi.Excluir.bind(CondicaoPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import { Estado } from '../../models/Cidades/Estado';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\nclass Api extends ApiBase<Estado>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const EstadoApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: EstadoApi.GetListPagined.bind(EstadoApi)});\r\n\r\n    const columns = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'pais.nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={EstadoApi.Desativar.bind(EstadoApi)}\r\n                deleteFunction={EstadoApi.Excluir.bind(EstadoApi)}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FornecedorApi } from '../../../../apis/Pessoas/Fornecedor.Api';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListFornecedor: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FornecedorApi.GetListPagined.bind(FornecedorApi) });\r\n\r\n    const columns: ColumnProps<Fornecedor>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Fornecedor',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Nome Fantasia/Apelido',\r\n            dataIndex: 'apelido',\r\n        },\r\n        {\r\n            title: 'Crédito',\r\n            dataIndex: 'limiteCredito',\r\n            render: (text: any, record: Fornecedor, index: number) => {\r\n                var nf = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2,\r\n                });\r\n                return nf.format(record.limiteCredito ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FornecedorApi.Excluir.bind(FornecedorApi)}\r\n                desativarFunction={FornecedorApi.Desativar.bind(FornecedorApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFornecedor;","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncaoFuncionarioApi } from '../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\nimport { FuncaoFuncionario } from '../../../../models/Pessoas/FuncaoFuncionario';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListFuncaoFuncionario: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: FuncaoFuncionarioApi.GetListPagined.bind(FuncaoFuncionarioApi) });\r\n\r\n    const columns: ColumnProps<FuncaoFuncionario>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Função Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'cargaHoraria',\r\n        },\r\n        {\r\n            title: 'CNH?',\r\n            dataIndex: 'requerCNH',\r\n            render: (text: any, record: FuncaoFuncionario, index: number) => record.requerCNH ? \"Sim\" : \"Não\"\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funções Funcionário\", URL: \"/funcao-funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncaoFuncionarioApi.Excluir.bind(FuncaoFuncionarioApi)}\r\n                desativarFunction={FuncaoFuncionarioApi.Desativar.bind(FuncaoFuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncaoFuncionario\r\n","import React from 'react'\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { FuncionarioApi } from '../../../../apis/Pessoas/FuncionarioApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListFuncionario: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FuncionarioApi.GetListPagined.bind(FuncionarioApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Funcionário',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Cargo',\r\n            dataIndex: 'funcaoFuncionario.nome',\r\n        },\r\n        {\r\n            title: 'Carga Horária',\r\n            dataIndex: 'funcaoFuncionario.cargaHoraria',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FuncionarioApi.Excluir.bind(FuncionarioApi)}\r\n                desativarFunction={FuncionarioApi.Desativar.bind(FuncionarioApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListFuncionario;","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Marca } from '../../../../models/Movimentos/Marca';\r\nimport { MarcaApi } from '../../../../apis/Movimentos/MarcaApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListMarca: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: MarcaApi.GetListPagined.bind(MarcaApi) });\r\n\r\n    const columns: ColumnProps<Marca>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Marcas\", URL: \"/marca\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={MarcaApi.Excluir.bind(MarcaApi)}\r\n                desativarFunction={MarcaApi.Desativar.bind(MarcaApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListMarca;\r\n","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();","import React, { useMemo } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi) });\r\n\r\n    const columns: ColumnProps<Pais>[] = useMemo(() => [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ] as ColumnProps<Pais>[], []);\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={PaisApi.Desativar.bind(PaisApi)}\r\n                deleteFunction={PaisApi.Excluir.bind(PaisApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ProdutoApi } from '../../../../apis/Movimentos/ProdutoApi';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Produto } from '../../../../models/Movimentos/Produto';\r\nimport { Typography } from 'antd';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\nconst { Text } = Typography;\r\n\r\nconst ListProduto: React.FC = () => {\r\n    const response = UseListPagined({\r\n        getListPagined: ProdutoApi.GetListPagined.bind(ProdutoApi)\r\n    });\r\n\r\n    const columns: ColumnProps<Produto>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Produto',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Marca',\r\n            dataIndex: 'marca.nome',\r\n        },\r\n        {\r\n            title: 'Valor de Venda',\r\n            dataIndex: 'valorVenda',\r\n            align:\"right\",\r\n            render: (valorVenda: number, record: Produto) => {\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                if (record.valorVenda && record.valorCompra && record.valorVenda < record.valorCompra) {\r\n                    return <Text type=\"warning\">{format.format(record.valorVenda)}</Text>\r\n                }\r\n\r\n                return format.format(record.valorVenda ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Produtos\", URL: \"/produto\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ProdutoApi.Excluir.bind(ProdutoApi)}\r\n                desativarFunction={ProdutoApi.Desativar.bind(ProdutoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListProduto;","import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\nimport { Servico } from './../../../../models/Movimentos/Servico';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ServicoApi.GetListPagined.bind(ServicoApi) });\r\n\r\n    const columns:ColumnProps<Servico>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n            render:(text: any, record: Servico, index: number) =>{\r\n                let format = Intl.NumberFormat(undefined, {\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return format.format(record.valor ?? 0)\r\n            }\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ServicoApi.Excluir.bind(ServicoApi)}\r\n                desativarFunction={ServicoApi.Desativar.bind(ServicoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import api from '../Api.configure';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Pessoas/LoginUser';\r\nimport AuthenticatedUser from '../../models/Pessoas/AuthenticatedUser';\r\nimport UserModel from '../../models/Pessoas/UserModel';\r\nimport UserChangePasswordModel from '../../models/Pessoas/UserChangePasswordModel';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\nclass Api extends ApiBase<UserModel>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n\r\n    TryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n        return api.post(endPoint + \"/authorize\", user);\r\n    }\r\n    \r\n    ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n        return api.put(endPoint + \"/Change-Password\", user);\r\n    }\r\n}\r\nexport const UserApi = new Api();\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./FormUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst FormUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUser;\r\n","import React from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: UserApi.GetListPagined.bind(UserApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                desativarFunction={UserApi.Desativar.bind(UserApi)}\r\n                columns={columns} />\r\n\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"País não deve possuir mais de 50 caracteres.\")\r\n        .required('País não pode estar vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"DDI não deve possuir mais de 5 caracteres.\")\r\n        .required('DDI não pode estar vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"Sigla não deve possuir mais de 5 caracteres.\")\r\n        .required('Sigla não pode estar vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: Pais, formikHelpers: FormikHelpers<Pais>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await PaisApi.Update(values);\r\n            } else {\r\n                await PaisApi.Save(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await PaisApi.GetById(id);\r\n            setPais(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: props.match.params.id ? \"Edição do Pais\" : \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(FormPais);\r\n","import React from 'react'\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListUnidadeMedida: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: UnidadeMedidaApi.GetListPagined.bind(UnidadeMedidaApi)});\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Unidade de Medida',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n        <ListForm\r\n            tableProps={response}\r\n            deleteFunction={UnidadeMedidaApi.Excluir.bind(UnidadeMedidaApi)}\r\n            desativarFunction={UnidadeMedidaApi.Desativar.bind(UnidadeMedidaApi)}\r\n            columns={columns} />\r\n\r\n    </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListUnidadeMedida\r\n","import * as Yup from 'yup';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\n\r\n\r\nexport const UnidadeMedidaSchema = Yup.object().shape<UnidadeMedida>({\r\n    id: Yup.string()\r\n        .max(3, \"Código não deve possuir mais de 3 caracteres.\")\r\n        .min(1, \"Código deve possuir mais de 1 caracter.\")\r\n        .required('Código não pode estar vaziu.'),\r\n\r\n    nome: Yup.string()\r\n        .max(50, \"Unidade Medida não deve possuir mais de 50 caracteres.\")\r\n        .required('Unidade Medida não pode estar vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UnidadeMedida } from '../../../../models/Movimentos/UnidadeMedida';\r\nimport { UnidadeMedidaSchema } from './UnidadeMedidaSchema';\r\nimport { UnidadeMedidaApi } from '../../../../apis/Movimentos/UnidadeMedidaApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormUnidadeMedida: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [unidademedida, setUnidadeMedida] = useState<UnidadeMedida>({ nome: \"\", id: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getUnidadeMedida(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: UnidadeMedida, formikHelpers: FormikHelpers<UnidadeMedida>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UnidadeMedidaApi.Update(values);\r\n            } else {\r\n                await UnidadeMedidaApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/unidade-medida\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n\r\n    }\r\n\r\n    async function getUnidadeMedida(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await UnidadeMedidaApi.GetById(id);\r\n            setUnidadeMedida(bdCidade.data);\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/unidade-medida\"\r\n            breadcrumbList={[{ displayName: \"Unidades de Medida\", URL: \"/unidade-medida\" }, { displayName: props.match.params.id ? \"Edição da Unida de Medida\" : \"Nova Unida de Medida\", URL: undefined }]}\r\n            initialValues={unidademedida}\r\n            validationSchema={UnidadeMedidaSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"nome\" label=\"Unidade Medida\" placeholder=\"Unidade\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUnidadeMedida;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"Cidade não deve possuir mais de 50 caracteres.\")\r\n        .required('Cidade não pode estar vazia.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"DDD não deve possuir mais de 5 caracteres.\")\r\n        .required('DDD da Cidade não pode estar vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeApi } from '../../../../apis/Cidades/CidadeApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<Cidade>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CidadeApi.Update(values);\r\n            } else {\r\n                await CidadeApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdCidade = await CidadeApi.GetById(id);\r\n            setCidade(bdCidade.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: props.match.params.id ? \"Edição da Cidade\" : \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={EstadoApi.GetById.bind(EstadoApi)}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCidade;\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"Estado não deve possuir mais de 50 caracteres.\")\r\n        .required('Estado não pode estar vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"UF não deve possuir mais de 5 caracteres.\")\r\n        .required('UF não pode estar vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\nimport { EstadoApi } from '../../../../apis/Cidades/EstadoApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await EstadoApi.Update(values);\r\n            } else {\r\n                await EstadoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await EstadoApi.GetById(id);\r\n            setEstado(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: props.match.params.id ? \"Edição do Estado\" : \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <SelectModel\r\n                        fetchMethod={PaisApi.GetById.bind(PaisApi)}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormEstado;\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await UserApi.GetById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UserApi.Update(values);\r\n            } else {\r\n                await UserApi.Save(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await UserApi.ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve estar maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve estar maior que 0.\")\r\n        .max(100, \"O percentual não pode estar maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Condição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"Condição não deve possuir mais de 50 caracteres.\")\r\n        .required('Condição não pode estar vaziu.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode estar menor que 0.\")\r\n        .max(100, \"O valor não pode estar maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode estar menor que 0.\")\r\n        .max(100, \"O valor não pode estar maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem estar sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = useMemo(() => props.rowKey ?? \"id\", [props.rowKey]);\r\n    const dataSource = useMemo(() => mapRecord(field.value as any[]), [field.value]);\r\n    const components: TableComponents = useMemo(() => {\r\n        return {\r\n            body: {\r\n                row: (props) => <EditableFormRow {...props} />,\r\n                cell: (props) => <EditableCell {...props} />,\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const errorStyle: React.CSSProperties = useMemo(() => {\r\n        return {\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderRadius: \"5px\",\r\n        }\r\n    }, []);\r\n\r\n    const hasListError = useMemo(() => !Array.isArray(meta.error) && meta.touched && (meta.error?.length ?? \"\") > 2, [meta.error, meta.touched]);\r\n\r\n    const columnsAction = useMemo(() => props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    }), [props.columns]);\r\n\r\n    const columns: ColumnProps<any>[] = useMemo(() => columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    }), [columnsAction])\r\n\r\n    const handleSave = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource]);\r\n\r\n    const handleRemove = useCallback(\r\n        (values: RecordTable & any) => {\r\n            const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowMode = useCallback(\r\n        (record: RecordTable & any, rowMode: RowMode) => {\r\n            const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n            helpers.setValue(dataSourceNew);\r\n        }, [dataSource])\r\n\r\n    const handleRowNew = useCallback(\r\n        () => {\r\n\r\n            let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n            helpers.setValue(mapedDataSource);\r\n        }, [dataSource])\r\n\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n\r\n    \r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nclass Api extends ApiBase<FormaPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FormaPagamentoApi = new Api();","import React, { memo } from 'react'\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { FormaPagamentoApi } from '../../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\n\r\nconst RenderSelectionFormaPagamento: React.FC = () => {\r\n\r\n    return (\r\n        <SelectModelOne\r\n            fetchMethod={FormaPagamentoApi.GetById.bind(FormaPagamentoApi)}\r\n            name=\"formaPagamento.id\"\r\n            objectName=\"formaPagamento\"\r\n            keyDescription=\"nome\"\r\n            required={true}\r\n            showLabel={false}\r\n            label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n            errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n            col={{\r\n                inputId: 4,\r\n                btnSearch: 2,\r\n                inputDescription: 18\r\n            }}\r\n            path=\"forma-pagamento\" />\r\n    )\r\n}\r\n\r\nexport default memo(RenderSelectionFormaPagamento);","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport RenderSelectionMode from './RenderSelectionFormaPagamento'\r\nimport InputSituation from '../../../../../components/Situation/InputSituation/InputSituation';\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual (%)\", editable: true,\r\n            render: (text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"500px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <RenderSelectionMode />\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={11}>\r\n                    <Input name=\"nome\" label=\"Nome da Condição de Pagamento\" placeholder=\"Pagamento em 30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto (%)\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n            <br></br>\r\n            <Divider>Parcelas</Divider>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\nimport { CondicaoPagamentoApi } from '../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst FormCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await CondicaoPagamentoApi.Update(values);\r\n            } else {\r\n                await CondicaoPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await CondicaoPagamentoApi.GetById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condições de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: props.match.params.id ? \"Edição da Condição de Pagamento\" :\"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormCondicaoPagamento;\r\n","import React, { } from 'react';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\nimport ShowSituation from '../../../../components/Situation/ShowSituation/ShowSituation';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ getListPagined: FormaPagamentoApi.GetListPagined.bind(FormaPagamentoApi) });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Situação',\r\n            dataIndex: 'situacao',\r\n            render: ShowSituation\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={FormaPagamentoApi.Excluir.bind(FormaPagamentoApi)}\r\n                desativarFunction={FormaPagamentoApi.Desativar.bind(FormaPagamentoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"Forma de Pagamento não deve possuir mais de 50 caracteres.\")\r\n        .required('Forma de Pagamento não pode estar vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\nimport { FormaPagamentoApi } from '../../../../apis/CondicaoPagamento/FormaPagamentoApi';\r\nimport InputSituation from '../../../../components/Situation/InputSituation/InputSituation';\r\n\r\nconst FormFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await FormaPagamentoApi.Update(values);\r\n            } else {\r\n                await FormaPagamentoApi.Save(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdestado = await FormaPagamentoApi.GetById(id);\r\n            setFormaPagamento(bdestado.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Formas de Pagamento\", URL: \"/forma-pagamento\" }, { displayName:props.match.params.id ? \"Edição da Forma de Pagamento\" : \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <InputSituation name=\"situacao\"  />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFormaPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport FormCategoria from '../../../pages/Movimentos/Categorias/FormCategoria/FormCategoria';\r\nimport FormCliente from '../../../pages/Pessoas/Clientes/FormCliente/FormCliente';\r\nimport FormFornecedor from '../../../pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor';\r\nimport FormFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/FormFuncaoFuncionario/FormFuncaoFuncionario';\r\nimport FormFuncionario from '../../../pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario';\r\nimport FormMarca from './../../../pages/Movimentos/Marcas/FormMarca/FormMarca';\r\nimport FormProduto from '../../../pages/Movimentos/Produtos/FormProduto/FormProduto';\r\nimport FormServico from '../../../pages/Movimentos/Servicos/FormServico/FormServico';\r\nimport ListCategoria from './../../../pages/Movimentos/Categorias/ListCategoria/ListCategoria';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport ListCliente from '../../../pages/Pessoas/Clientes/ListCliente/ListCliente';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListFornecedor from '../../../pages/Pessoas/Fornecedores/ListFornecedor/ListFornecedor';\r\nimport ListFuncaoFuncionario from './../../../pages/Pessoas/FuncaoFuncionario/ListFuncaoFuncionario/ListFuncaoFuncionario';\r\nimport ListFuncionario from '../../../pages/Pessoas/Funcionarios/ListFuncionario/ListFuncionario';\r\nimport ListMarca from '../../../pages/Movimentos/Marcas/ListCategoria/ListMarca';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport ListProduto from '../../../pages/Movimentos/Produtos/ListProduto/ListProduto';\r\nimport ListServico from './../../../pages/Movimentos/Servicos/ListServico/ListServico';\r\nimport ListUser from '../../../pages/Pessoas/Users/ListUser/ListUser';\r\nimport FormPais from '../../../pages/Cidades/Pais/FormPais/FormPais';\r\nimport ListUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/ListUnidadeMedida/ListUnidadeMedida';\r\nimport FormUnidadeMedida from './../../../pages/Movimentos/UnidadeMedida/FormUnidadeMedida/FormUnidadeMedida';\r\nimport FormCidade from '../../../pages/Cidades/Cidade/FormCidade/FormCidade';\r\nimport FormEstado from '../../../pages/Cidades/Estado/FormEstado/FormEstado';\r\nimport FormUser from '../../../pages/Pessoas/Users/FormUser/FormUser';\r\nimport FormCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/FormCondicaoPagamento/FormCondicaoPagamento';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport FormFormaPagamento from '../../../pages/CondicaoPagamento/FormPagamento/FormFormaPagamento/FormFormaPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/categoria\" component={ListCategoria} exact />\r\n            <Route path=\"/categoria/edit/:id\" component={FormCategoria} />\r\n            <Route path=\"/categoria/new\" component={FormCategoria} />\r\n\r\n            <Route path=\"/cidade\" component={ListCidade} exact />\r\n            <Route path=\"/cidade/edit/:id\" component={FormCidade} />\r\n            <Route path=\"/cidade/new\" component={FormCidade} />\r\n\r\n            <Route path=\"/cliente\" component={ListCliente} exact />\r\n            <Route path=\"/cliente/edit/:id\" component={FormCliente} />\r\n            <Route path=\"/cliente/new\" component={FormCliente} />\r\n\r\n            <Route path=\"/condicao-pagamento\" component={ListCondicaoPagamento} exact />\r\n            <Route path=\"/condicao-pagamento/edit/:id\" component={FormCondicaoPagamento} />\r\n            <Route path=\"/condicao-pagamento/new\" component={FormCondicaoPagamento} />\r\n\r\n            <Route path=\"/estado\" component={ListEstado} exact />\r\n            <Route path=\"/estado/edit/:id\" component={FormEstado} />\r\n            <Route path=\"/estado/new\" component={FormEstado} />\r\n\r\n            <Route path=\"/forma-pagamento\" component={ListFormaPagamento} exact />\r\n            <Route path=\"/forma-pagamento/edit/:id\" component={FormFormaPagamento} />\r\n            <Route path=\"/forma-pagamento/new\" component={FormFormaPagamento} />\r\n\r\n            <Route path=\"/fornecedor\" component={ListFornecedor} exact />\r\n            <Route path=\"/fornecedor/edit/:id\" component={FormFornecedor} />\r\n            <Route path=\"/fornecedor/new\" component={FormFornecedor} />\r\n\r\n            <Route path=\"/funcao-funcionario\" component={ListFuncaoFuncionario} exact />\r\n            <Route path=\"/funcao-funcionario/edit/:id\" component={FormFuncaoFuncionario} />\r\n            <Route path=\"/funcao-funcionario/new\" component={FormFuncaoFuncionario} />\r\n\r\n            <Route path=\"/funcionario\" component={ListFuncionario} exact />\r\n            <Route path=\"/funcionario/edit/:id\" component={FormFuncionario} />\r\n            <Route path=\"/funcionario/new\" component={FormFuncionario} />\r\n\r\n            <Route path=\"/marca\" component={ListMarca} exact />\r\n            <Route path=\"/marca/edit/:id\" component={FormMarca} />\r\n            <Route path=\"/marca/new\" component={FormMarca} />\r\n\r\n            <Route path=\"/pais\" component={ListPais} exact />\r\n            <Route path=\"/pais/edit/:id\" component={FormPais} />\r\n            <Route path=\"/pais/new\" component={FormPais} />\r\n\r\n            <Route path=\"/produto\" component={ListProduto} exact />\r\n            <Route path=\"/produto/edit/:id\" component={FormProduto} />\r\n            <Route path=\"/produto/new\" component={FormProduto} />\r\n\r\n            <Route path=\"/servico\" component={ListServico} exact />\r\n            <Route path=\"/servico/edit/:id\" component={FormServico} />\r\n            <Route path=\"/servico/new\" component={FormServico} />\r\n\r\n            <Route path=\"/user\" component={ListUser} exact />\r\n            <Route path=\"/user/edit/:id\" component={FormUser} />\r\n            <Route path=\"/user/new\" component={FormUser} />\r\n\r\n            <Route path=\"/unidade-medida\" component={ListUnidadeMedida} exact />\r\n            <Route path=\"/unidade-medida/edit/:id\" component={FormUnidadeMedida} />\r\n            <Route path=\"/unidade-medida/new\" component={FormUnidadeMedida} />\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../../models/Pessoas/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../../services/Authenticate';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../apis/Pessoas/UserApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await UserApi.TryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout, { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Pessoas/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\"  component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}