{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","layouts/FormBasicLayout/FormBasicLayout.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/ModalForm/ModalFormContext.ts","hoc/WithFormItem.tsx","hoc/useDebouncedCallback.ts","components/WithFormItem/withFormItem.tsx","hoc/UseListPagined.ts","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","components/SelectModel/SelectModelOne.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalForm.tsx","apis/Cidades/PaisApi.ts","apis/Pessoas/FuncaoFuncionarioApi.ts","components/SelectModel/SelectModelMore.tsx","components/SelectModel/SelectModelMoreWithTable.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","memo","props","setBreadcrumb","useContext","BasicLayoutContext","useEffect","breadcrumbList","className","children","_defineProperty","obj","value","configurable","writable","ModalFormContext","React","createContext","state","undefined","setState","ModalFormContextProvider","Provider","Consumer","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","formMode","FormMode","View","isDisabled","disabled","name","label","required","autoComplete","style","width","withFormItemCustom","useField","field","WithItemNone","showLabel","padding","ItemFormRender","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","UseListPagined","useState","isLoading","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","total","dataSource","responseBack","setResponseBack","getDataBack","a","getListPagined","response","data","totalItem","result","valuesFilter","requestResult","reflesh","FormikForm","forwardRef","ref","history","useHistory","formik","useFormikContext","keyLocalStorage","location","pathname","toLowerCase","localStorage","getItem","Modal","confirm","title","content","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","values","ceatedDate","Date","formData","setItem","JSON","stringify","removeItem","savedForm","parse","setValues","onKeyUp","event","onKeyDown","isSubmitting","zIndex","height","margin","left","top","position","background","type","fontSize","color","theme","isFunction","justify","paddingTop","span","display","flexDirection","paddingRight","textAlign","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","onClick","backPath","submitForm","withRouter","childRef","formikHelpers","onSubmit","errorBack","FormBasicLayout","enableReinitialize","keyEvent","charCode","keyCode","preventDefault","visible","setVisible","description","setDescription","keyId","keyDescription","meta","helpers","objectName","helpersObject","setSubmitting","showDescription","getDesciptionValues","id","fetchMethod","respose","setValue","handleClick","Item","validateStatus","error","touched","help","col","inputId","min","onChange","setTouched","onBlur","btnSearch","icon","inputDescription","SelectOne","params","isNaN","Number","errorMessage","path","breadcrumb","sharedState","setSharedState","setFormMode","basename","RoutePath","to","CloseForm","concat","destroyOnClose","Array","isArray","message","noSelection","SelectMultiple","PaisApi","ApiBase","FuncaoFuncionarioApi","SelectModelMore","Option","setDataSource","GetListPagined","bind","onSearch","text","md","filterOption","loading","mode","map","e","onSelect","newSelection","find","newState","onDeselect","onDropdownVisibleChange","SelectModelMoreWithTable","setData","helper","columns","render","record","index","placement","oldData","onRemoveClick","old","lefJoin","ee","size"],"mappings":"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","file":"static/js/3.c02ffa95.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues(savedForm.formData);\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    \r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: number | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();","import { FuncaoFuncionario } from '../../models/Pessoas/FuncaoFuncionario';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/funcao-funcionarios';\r\n\r\nclass Api extends ApiBase<FuncaoFuncionario>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const FuncaoFuncionarioApi = new Api();","import React, { useState, useEffect } from 'react'\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\nimport { useField } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { Form, Row, Col, Button, Select } from 'antd';\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UseListPagined } from '../../hoc/UseListPagined';\r\nimport { PaisApi } from '../../apis/Cidades/PaisApi';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelMore: React.FC<Props> = (props) => {\r\n\r\n    const { Option } = Select;\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    // const [selected, setSelected] = useState<any[]>([]);\r\n    const [dataSource, setDataSource] = useState<any[]>([])\r\n    const [visible, setVisible] = useState(false);\r\n    const [, meta, helpers] = useField<any[]>({ name: props.name });\r\n    const response = UseListPagined({ getListPagined: PaisApi.GetListPagined.bind(PaisApi)  });\r\n\r\n    function setState(params: any[]) {\r\n        setDataSource(params)\r\n        helpers.setValue(params);\r\n    }\r\n\r\n    const onSearch = useDebouncedCallback(async (text: string) => {\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: text\r\n        });\r\n    }, 500);\r\n\r\n    function onSelect(value: string) {\r\n        let newSelection = dataSource.find(e => e[keyId] === value);\r\n\r\n        let newState = [...meta.value ?? [], newSelection];\r\n        helpers.setValue(newState);\r\n\r\n        response.setFilterRequest({\r\n            ...response.filterRequest,\r\n            currentPage: 1,\r\n            filter: undefined\r\n        })\r\n    }\r\n\r\n    function onDeselect(value: any) {\r\n        let newState = meta.value?.filter(e => e[keyId] !== value);\r\n        helpers.setValue(newState);\r\n    }\r\n\r\n    function onDropdownVisibleChange(visible: boolean) {\r\n        if (visible) {\r\n            setDataSource(response.requestResult.dataSource)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataSource(response.requestResult.dataSource)\r\n    }, [response.requestResult.dataSource])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n\r\n                    <Col md={21} >\r\n                        <ItemFormRender showLabel={showLabel} required={required} label={props.label.label}>\r\n                            <Select\r\n                                filterOption={false}\r\n                                loading={response.isLoading}\r\n                                onSearch={onSearch}\r\n                                mode=\"multiple\"\r\n                                value={meta.value?.map(e => e[keyId])}\r\n                                onSelect={onSelect}\r\n                                onDeselect={onDeselect}\r\n                                onDropdownVisibleChange={onDropdownVisibleChange}\r\n                            >\r\n                                {dataSource.map(e => {\r\n                                    return <Option key={e[keyId]} value={e[keyId]} title={e[keyDescription]} >{e[keyDescription]}</Option>;\r\n                                })}\r\n                            </Select>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col md={3} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectMultiple}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={meta.value ?? []}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SelectModelMore\r\n","import React, { useState } from 'react'\r\nimport { Table, Row, Col, Button, Tooltip, Tag } from 'antd';\r\nimport SelectModelMore from './SelectModelMore';\r\nimport { WithItemNone } from '../../hoc/WithFormItem';\r\nimport { useField } from 'formik';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Label, ErrorMessage } from '../ModalForm/ModalForm';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport interface Props {\r\n    keyId?: string;\r\n    keyDescription?: string;\r\n    required?: boolean;\r\n    name: string;\r\n    label: Label;\r\n    columns: ColumnProps<any>[];\r\n    errorMessage: ErrorMessage;\r\n    path: string;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n}\r\n\r\nconst SelectModelMoreWithTable: React.FC<Props> = (props) => {\r\n\r\n    const [data, setData] = useState<any[]>([])\r\n    const [, meta, helper] = useField<any[]>({ name: props.name + \"SelectionIds\" })\r\n\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        width: 100,\r\n        title: \"Ações\",\r\n        render: renderAction\r\n    })\r\n\r\n    function onSaveClick() {\r\n\r\n\r\n        setData((old) => {\r\n\r\n            let lefJoin = meta.value.filter(e => {\r\n                return old.filter((ee) => ee[keyId] === e[keyId]).length === 0\r\n            });\r\n\r\n            return [...old, ...lefJoin]\r\n        });\r\n        helper.setValue([]);\r\n    }\r\n\r\n    function onRemoveClick(record: any) {\r\n        setData((oldData) => oldData.filter(e => e[keyId] !== record[keyId]))\r\n    }\r\n\r\n    function renderAction(text: any, record: any, index: number) {\r\n\r\n        return (\r\n            <Tooltip placement=\"top\" title=\"Remove o Registro Selecionado.\" >\r\n                <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => {\r\n                    onRemoveClick(record)\r\n                }} >Remover</Tag>\r\n            </Tooltip>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row justify=\"end\" >\r\n\r\n                <Col span={12}>\r\n                    <WithItemNone>\r\n                        <div className=\"ant-col ant-form-item-label\">\r\n                            <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label.label ?? <>&nbsp;</>}</label>\r\n                        </div>\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={10}>\r\n                    <WithItemNone>\r\n                        <SelectModelMore\r\n                            fetchMethod={props.fetchMethod}\r\n                            name={props.name + \"SelectionIds\"}\r\n                            keyDescription={keyDescription}\r\n                            keyId={keyId}\r\n                            required={props.required}\r\n                            showLabel={false}\r\n                            label={props.label}\r\n                            errorMessage={props.errorMessage}\r\n                            path={props.path} />\r\n                    </WithItemNone>\r\n                </Col>\r\n                <Col span={2} >\r\n                    <WithItemNone>\r\n                        <Button onClick={onSaveClick}>Incluir</Button>\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <WithItemNone >\r\n                        <Table columns={columns} dataSource={data} size=\"small\" />\r\n                    </WithItemNone>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectModelMoreWithTable\r\n"],"sourceRoot":""}