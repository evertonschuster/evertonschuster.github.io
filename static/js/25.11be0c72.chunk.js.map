{"version":3,"sources":["pages/Pessoas/Users/FormUser/FormUser.tsx","pages/Pessoas/Users/FormUser/UserSchema.ts","pages/Pessoas/Users/FormUser/Components/RegisterUserGeneral.tsx","pages/Pessoas/Users/FormUser/Components/ChangePassword.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","hoc/WithFormItem.tsx","hoc/useDebouncedCallback.ts","components/WithFormItem/withFormItem.tsx","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx"],"names":["Menus","UserSchema","formMode","Yup","shape","userName","required","phoneNumber","nullable","email","password","FormMode","New","undefined","confirmPassword","oneOf","e","UserChangePasswor","currentPassword","newPassword","withRouter","props","useState","userModel","setUserModel","loading","setLoading","useContext","BasicLayoutContext","id","a","UserApi","GetById","bdestado","data","values","formikHelpers","match","params","Update","Save","history","push","errorBack","useEffect","getUser","CrudFormLayout","isLoading","backPath","breadcrumbList","displayName","URL","initialValues","validationSchema","onSubmit","span","name","label","placeholder","readOnly","type","hidden","ChangePasswordUser","initialErrors","FormUser","TabPane","Tabs","defaultActiveKey","Profile","tab","key","disabled","changePassword","memo","setBreadcrumb","className","children","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","View","isDisabled","autoComplete","style","width","withFormItemCustom","useField","field","WithItemNone","showLabel","padding","ItemFormRender","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","FormikForm","forwardRef","ref","useHistory","formik","useFormikContext","keyLocalStorage","location","pathname","toLowerCase","localStorage","getItem","Modal","confirm","title","content","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","ceatedDate","Date","formData","setItem","JSON","stringify","removeItem","savedForm","parse","setValues","onKeyUp","event","onKeyDown","isSubmitting","zIndex","height","margin","left","top","position","background","fontSize","color","theme","isFunction","justify","paddingTop","display","flexDirection","paddingRight","textAlign","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","onClick","submitForm","childRef","FormBasicLayout","enableReinitialize","keyEvent","charCode","keyCode","preventDefault"],"mappings":"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","file":"static/js/25.11be0c72.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./FormUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst FormUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default FormUser;\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../../models/Pessoas/UserModel';\r\nimport { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../../models/Pessoas/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../../models/Pessoas/UserModel';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport BasicLayoutContext, { FormMode } from '../../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from '../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await UserApi.GetById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UserApi.Update(values);\r\n            } else {\r\n                await UserApi.Save(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../../models/Pessoas/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\nimport { UserApi } from '../../../../../apis/Pessoas/UserApi';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await UserApi.ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues(savedForm.formData);\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    \r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n"],"sourceRoot":""}