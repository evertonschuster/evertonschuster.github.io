{"version":3,"sources":["pages/Movimentos/Servicos/ListServico/ListServico.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","layouts/FormBasicLayout/FormBasicLayout.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/ModalForm/ModalFormContext.ts","hoc/UseListPagined.ts","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","apis/Movimentos/ServicoApi.ts"],"names":["ListServico","response","UseListPagined","getListPagined","ServicoApi","GetListPagined","bind","breadcrumbList","displayName","URL","tableProps","deleteFunction","Excluir","columns","title","dataIndex","key","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","memo","props","setBreadcrumb","useContext","BasicLayoutContext","useEffect","className","children","_defineProperty","obj","value","configurable","writable","ModalFormContext","React","createContext","state","undefined","setState","ModalFormContextProvider","Provider","Consumer","useState","isLoading","setIsLoading","pageSize","currentPage","filterRequest","setFilterRequest","current","total","dataSource","responseBack","setResponseBack","getDataBack","a","data","totalItem","result","valuesFilter","requestResult","reflesh","withRouter","formMode","setFormMode","sharedState","isSelectMode","FormMode","SelectMultiple","SelectOne","keyProp","ListSelectedItem","concat","showModal","setShowModal","record","setRecord","loading","setLoading","keyDescription","width","render","text","index","to","location","pathname","replace","onClick","Edit","placement","color","Delete","showExluir","rowSelection","type","onChange","selectedRowKeys","selectedRows","map","e","hidenExluir","savedFormMode","visible","onOk","errorBack","List","onCancel","okText","cancelText","okType","okButtonProps","autoFocus","cancelButtonProps","pagination","page","onRow","newState","find","bordered","rowKey","size","useFixedHeader","filterValues","setFilterValues","span","placeholder","event","onPressEnter","style","textAlign","icon","New","setSharedState","paddingBottom","ApiBase"],"mappings":"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","file":"static/js/20.4d3c4135.chunk.js","sourcesContent":["import React from 'react'\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport FormBasicLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ServicoApi } from '../../../../apis/Movimentos/ServicoApi';\r\n\r\nconst ListServico: React.FC = () => {\r\n    const response = UseListPagined({ getListPagined: ServicoApi.GetListPagined.bind(ServicoApi) });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Código',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Servico',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={[{ displayName: \"Serviços\", URL: \"/servico\" }, { displayName: \"Listagem\" }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ServicoApi.Excluir.bind(ServicoApi)}\r\n                columns={columns} />\r\n\r\n        </FormBasicLayout>\r\n    )\r\n}\r\n\r\nexport default ListServico;","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport { PaginationQuery, PaginationResult } from '../models/BaseEntity';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport interface Props<TEntity> {\r\n    getListPagined: (filter: PaginationQuery) => Promise<AxiosResponse<PaginationResult<TEntity>>>,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport function UseListPagined(props: Props<any>): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    async function getDataBack() {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let response = await props.getListPagined(filterRequest);\r\n            setResponseBack({\r\n                current: response.data.currentPage,\r\n                pageSize: response.data.pageSize,\r\n                total: response.data.totalItem,\r\n                dataSource: response.data.result\r\n            });\r\n        }\r\n        finally {\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        // console.error(\"Fui pro back\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState<any>()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => { setFormMode(FormMode.Edit); setState(undefined) }}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    try {\r\n\r\n                        props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                        setLoading(false);\r\n                        props.tableProps.reflesh();\r\n                    }\r\n                    catch (e) {\r\n                        errorBack(null, e);\r\n                    }\r\n                    finally {\r\n                        setFormMode(FormMode.List)\r\n                        hidenExluir();\r\n                    }\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading,\r\n                    autoFocus: true,\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../models/BaseEntity';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();"],"sourceRoot":""}