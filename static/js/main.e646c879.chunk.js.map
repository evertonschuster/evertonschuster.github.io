{"version":3,"sources":["webpack:///./src/pages/Users/Login/LoginUserStyle.less?1f56","pages/Users/Login/LoginUserStyle.less","layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","layouts/BasicLayout/BasicLayout.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","hoc/WithFormItem.tsx","components/WithFormItem/withFormItem.tsx","pages/Cidades/Pais/RegisterPais/PaisSchema.ts","apis/Api.ts","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/RegisterPais/RegisterPais.tsx","components/ModalForm/ModalFormContext.ts","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","hoc/UseListPagined.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","hoc/useDebouncedCallback.ts","pages/Cidades/Estado/RegisterEstado/EstadoSchema.ts","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/RegisterEstado/RegisterEstado.tsx","pages/Cidades/Estado/ListEstado/ListEstado.tsx","apis/Cidades/CidadeApi.ts","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Cidades/Cidade/CreateCidade/CidadeSchema.ts","pages/Cidades/Cidade/CreateCidade/CreateCidade.tsx","pages/Users/ListUser/ListUser.tsx","apis/Users/UserApi.ts","pages/Users/RegisterUser/UserSchema.ts","pages/Users/RegisterUser/RegisterUser.tsx","pages/Users/RegisterUser/Components/RegisterUserGeneral.tsx","pages/Users/RegisterUser/Components/ChangePassword.tsx","apis/Associados/AssociadoApi.ts","pages/Associados/CreateTitular/TitularSchema.ts","pages/Associados/CreateTitular/Components/CreateAssociado.tsx","pages/Associados/CreateTitular/Components/Dependente.tsx","pages/Associados/CreateTitular/CreateTitular.tsx","pages/Associados/ListTitular/ListTitular.tsx","apis/CondicaoPagamento/FormaPagamento.ts","pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento.tsx","apis/CondicaoPagamento/CondicaoPagamento.ts","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/EditableTable.tsx","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/NumeroDias.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/Percentual.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/components/CondicaoPagamentoGeneral.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Users/Login/LoginUserSchema.ts","pages/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["content","module","i","options","locals","exports","push","SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","ContentApp","props","Content","style","margin","padding","background","minHeight","children","history","createHistory","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","window","location","pathname","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","display","flex","useEffect","errorBack","formik","response","prosRemoveMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","mensagem","Array","isArray","errorArray","textAlign","setFieldError","reduce","p","c","find","withRouter","values","formikHelpers","a","onSubmit","onKeyDown","keyEvent","charCode","keyCode","enableReinitialize","isSubmitting","isLoading","zIndex","width","height","left","top","position","fontSize","color","isFunction","paddingTop","marginRight","backPath","submitForm","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","isDisabled","disabled","name","label","required","autoComplete","ItemFormRender","showLabel","Input","InputAntd","InputNumber","InputNumberAntd","decimalSeparator","DatePicker","DatePickerAntd","PaisSchema","Yup","shape","nome","max","ddi","sigla","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","SavePais","pais","post","UpdatePais","put","GetPaisById","id","get","toString","ExcluirPais","delete","loading","setLoading","setPais","match","params","bdpais","getPais","validationSchema","initialValues","placeholder","readOnly","ModalFormContext","state","setState","ModalFormContextProvider","isSelectMode","SelectMultiple","SelectOne","keyProp","ListSelectedItem","concat","showModal","setShowModal","record","setRecord","keyDescription","columns","render","text","replace","Edit","placement","deleteFunction","Delete","showExluir","rowSelection","onChange","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","visible","onOk","tableProps","reflesh","List","onCancel","okText","cancelText","okType","okButtonProps","cancelButtonProps","pagination","current","requestResult","pageSize","total","page","setFilterRequest","filterRequest","currentPage","onRow","newState","filter","dataSource","bordered","rowKey","useFixedHeader","filterValues","setFilterValues","value","target","onPressEnter","New","paddingBottom","UseListPagined","setIsLoading","responseBack","setResponseBack","getDataBack","valuesFilter","then","totalItem","result","finally","dataIndex","basename","path","CloseForm","setVisible","destroyOnClose","length","errorMessage","noSelection","description","setDescription","keyId","useField","field","meta","helpers","ObjectName","helpersObject","setSubmitting","useFormikContext","getDesciptionValues","fetchMethod","respose","setValue","handleClick","callback","wait","argsRef","useRef","timeout","cleanup","clearTimeout","args","setTimeout","useDebouncedCallback","validateStatus","help","sm","xs","min","isNaN","Number","EstadoSchema","uf","paisId","nullable","typeError","SaveEstado","estado","UpdateEstado","GetEstadoById","ExcluirEstado","RegisterEstado","setEstado","getEstado","ListEstado","SaveCidade","cidade","UpdateCidade","GetCidadeById","ExcluirCidade","ListCidade","CidadeSchema","ddd","estadoId","CreateCidade","setCidade","bdestado","getCidade","ListUser","tryLoginUser","endPoint","UpdateUser","ChangePasswordUser","SaveUser","GetUserById","Menus","UserSchema","phoneNumber","email","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","hidden","initialErrors","RegisterUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","SaveTitular","titular","UpdateTitular","GetTitularById","ExcluirTitular","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","onSave","onCancelForm","resetForm","telefone","handleSubmit","Dependente","indexEvent","dependentes","indexRow","setFieldValue","onRemoveAssocido","onSaveAssociado","insert","justifyContent","arrayHelpers","item","CreateTitular","cep","bairro","endereco","numero","setTitular","getTitular","dashed","SaveFormaPagamento","formapagamento","UpdateFormaPagamento","GetFormaPagamentoById","ExcluirFormaPagamento","ListFormaPagamento","FormaPagamentoSchema","CreateFormaPagamento","setFormaPagamento","getFormaPagamento","SaveCondicaoPagamento","condicaopagamento","UpdateCondicaoPagamento","GetCondicaoPagamentoById","ExcluirCondicaoPagamento","ListCondicaoPagamento","CondicaoPagamentoParcelaSchema","numeroDias","integer","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","test","parcelas","ty","toFixed","init","every","valid","RowMode","TypeAttribute","handleSave","initiallValues","restProps","rowMode","view","tableKey","renderEditable","rowIndex","number","handleRowMode","edit","handleRemove","new","onNewRow","mapRecord","components","body","row","EditableFormRow","cell","EditableCell","hasListError","col","editable","onCell","dataSourceNew","handleRowNew","mapedDataSource","Date","now","borderWidth","borderStyle","borderColor","borderRadius","footer","validate","percelasSource","findIndex","beforeRecord","validateNumeroDias","Percentual","percentualTotal","validatePercentual","CondicaoPagamentoGeneral","toLocaleString","Math","round","CreateCondicaoPagamento","setCondicaoPagamento","getCondicaoPagamento","RoutePath","component","RegisterPais","exact","ListPais","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","success","md","lg","xl","xxl","autoFocus","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e646c879.chunk.js","sourcesContent":["var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./LoginUserStyle.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"@media all and (min-width: 480px) {\\n  .ant-card-head-title {\\n    text-align: center;\\n  }\\n  .form-custom-item-footer {\\n    padding-top: 20px;\\n    width: 100%;\\n    text-align: center;\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .form-custom-item-form {\\n    padding: 13px 2px !important;\\n  }\\n  .form-custom-item-form {\\n    animation: animationLoginText 1s ease-out;\\n  }\\n  .ant-card-head-title {\\n    font-size: 25px;\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  .ant-card-ant-card-bordered {\\n    box-shadow: 2px 2px 20px -2px;\\n    border-radius: 5px;\\n    animation: animationLoginCard 1.7s ease-out;\\n  }\\n  .forget-password-item-form {\\n    animation: animationLoginText 1.7s ease-out;\\n  }\\n  body {\\n    min-height: 100vh;\\n    background-image: linear-gradient(20deg, #3498db, #8e44ad);\\n  }\\n  .login-form {\\n    overflow: hidden;\\n  }\\n}\\n@keyframes animationLoginCard {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-50%) scale(0.9);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0%) scale(1);\\n  }\\n}\\n@keyframes animationLoginText {\\n  from {\\n    transform: scale(0.2);\\n  }\\n  to {\\n    transform: scale(1);\\n  }\\n}\\n\", \"\"]);\n\n","import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n            >\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\"> \r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuário</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"TitularCrud\">\r\n                        <Link to=\"/Titular\">Titulares</Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"CondicaoPagamento\"\r\n                        title={\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FormaPagamentoCrud\">\r\n                            <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Icon type=\"shop\" />\r\n                <Icon type=\"contacts\" /> */}\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Content\r\n            style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#fff',\r\n                minHeight: \"90%\",\r\n            }}>\r\n\r\n\r\n            {props.children}\r\n\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory();","import AuthenticatedUser from \"../models/Users/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\", display: \"flex\", flex: 1 }}>\r\n            <Layout  >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <PerfectScrollbar >\r\n                        <HeaderApp breadcrumbList={breadcrumb} />\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React from 'react';\r\nimport { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik: FormikHelpers<any>, response: any, prosRemoveMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n\r\n        formik.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        const errors = response.errors;\r\n\r\n        Object.keys(errors).forEach(element => {\r\n            let mensagem = errors[element];\r\n\r\n            if (Array.isArray(mensagem)) {\r\n                let errorArray: any[] = errors[element]\r\n\r\n                mensagem = errorArray.map(e => <span style={{ textAlign: \"justify\" }}>- {e} <br /></span>);\r\n                formik.setFieldError(element, errorArray.reduce((p, c) => p + \"\\n\" + c, \"\"));\r\n            }\r\n\r\n            if (!prosRemoveMessage?.find(e => e === element)) {\r\n                notification.error({\r\n                    message: <span style={{ textAlign: \"justify\" }}>{mensagem}</span>,\r\n                    duration: 10\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Button, Icon } from 'antd';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, isFunction } from 'formik';\r\nimport { Form } from 'formik-antd';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            await props.onSubmit(values, formikHelpers);\r\n\r\n        } catch (e) {\r\n\r\n            errorBack(formikHelpers, e)\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(keyEvent: any) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                {(formik) => (\r\n                    <Form onKeyDown={onKeyDown} >\r\n                        {renderLoading(formik.isSubmitting)}\r\n\r\n                        {isFunction(props.children)\r\n                            ? props.children(formik)\r\n                            : props.children}\r\n\r\n                        < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                            <Col>\r\n                                <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => props.history.push(props.backPath)}>Cancelar</Button>\r\n                                <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormLayout);\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withItemNone = <P extends object>(Field: React.ComponentType<P>): React.FC<P> => (props: any) =>\r\n    (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span>\r\n            </div>\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        <Field {...props} />\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Input as InputAntd, InputNumber as InputNumberAntd, DatePicker as DatePickerAntd } from \"formik-antd\"\r\nimport { withFormItem } from \"../../hoc/WithFormItem\"\r\n\r\n\r\nexport const Input = withFormItem(InputAntd)\r\nexport const InputNumber = withFormItem(InputNumberAntd, { decimalSeparator:\",\" })\r\n\r\nexport const DatePicker = withFormItem(DatePickerAntd)","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"./../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if (error.response!.data!.code === 422 || error.response.status === 422) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import api from '../Api';\r\nimport { Pais } from '../../models/Cidades/Pais';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\n\r\nexport function SavePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, pais);\r\n}\r\n\r\nexport function UpdatePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, pais);\r\n}\r\n\r\nexport function GetPaisById(id: number): Promise<AxiosResponse<Pais>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirPais(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { SavePais, GetPaisById, UpdatePais } from '../../../../apis/Cidades/PaisApi';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await UpdatePais(values);\r\n            } else {\r\n                await SavePais(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetPaisById(id);\r\n        setPais(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPais);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => {setFormMode(FormMode.Edit); setState(undefined)}}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n        setState(undefined)\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                    setLoading(false);\r\n                    props.tableProps.reflesh();\r\n                    setFormMode(FormMode.List)\r\n                    hidenExluir();\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" shape=\"circle\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../hoc/UseListPagined';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport api from './../apis/Api';\r\n\r\n\r\nexport interface Props {\r\n    URL: string,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport interface PaginationQuery {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    filter?: string\r\n}\r\n\r\nexport function UseListPagined(props: Props): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    function getDataBack() {\r\n        setIsLoading(true);\r\n        api.post(props.URL, { ...filterRequest, ...props.valuesFilter })\r\n            .then(response => {\r\n                setResponseBack({\r\n                    current: response.data.currentPage,\r\n                    pageSize: response.data.pageSize,\r\n                    total: response.data.totalItem,\r\n                    dataSource: response.data.result\r\n                });\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        console.error(\"Fui pro back\")\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.URL, filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, {  } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirPais } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/pais/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirPais}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(FormMode.SelectOne)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.ObjectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.ObjectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error ? \"error\" : \"validating\"}\r\n                help={meta.error ?? \"\"}>\r\n                <Row>\r\n                    <Col sm={4} xs={15} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber min={1} value={meta.value} onChange={helpers.setValue} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col sm={18} xs={12}>\r\n                        <ItemFormRender showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col sm={2} xs={3} style={{ textAlign: \"right\" }} >\r\n                        <ItemFormRender showLabel={showLabel}>\r\n                            <Button type=\"primary\" shape=\"circle\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import { AxiosResponse } from 'axios'\r\nimport api from '../Api';\r\nimport { Estado } from '../../models/Cidades/Estado';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\n\r\nexport function SaveEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, estado);\r\n}\r\n\r\nexport function UpdateEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, estado);\r\n}\r\n\r\nexport function GetEstadoById(id: number): Promise<AxiosResponse<Estado>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirEstado(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { UpdateEstado, SaveEstado, GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { GetPaisById } from '../../../../apis/Cidades/PaisApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateEstado(values);\r\n            } else {\r\n                await SaveEstado(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetEstadoById(id);\r\n        setEstado(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetPaisById}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterEstado;\r\n","import React from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirEstado } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Estado/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirEstado}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import api from '../Api';\r\nimport { Cidade } from '../../models/Cidades/Cidade';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nexport function SaveCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, cidade);\r\n}\r\n\r\nexport function UpdateCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, cidade);\r\n}\r\n\r\nexport function GetCidadeById(id: number): Promise<AxiosResponse<Cidade>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCidade(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirCidade } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Cidade/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCidade}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { UpdateCidade, SaveCidade, GetCidadeById } from '../../../../apis/Cidades/CidadeApi';\r\nimport { GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst CreateCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCidade(values);\r\n            } else {\r\n                await SaveCidade(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetCidadeById(id);\r\n        setCidade(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetEstadoById}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCidade;\r\n","import React from 'react';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/User/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Users/LoginUser';\r\nimport AuthenticatedUser from '../../models/Users/AuthenticatedUser';\r\nimport UserModel from '../../models/Users/UserModel';\r\nimport UserChangePasswordModel from '../../models/Users/UserChangePasswordModel';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\n\r\nexport function tryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n    return api.post(endPoint + \"/authorize\", user);\r\n}\r\n\r\nexport function UpdateUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, user);\r\n}\r\n\r\nexport function ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint + \"/Change-Password\", user);\r\n}\r\n\r\n\r\nexport function SaveUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, user);\r\n}\r\n\r\n\r\nexport function GetUserById(id: number): Promise<AxiosResponse<UserModel>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../models/Users/UserModel';\r\nimport { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../models/Users/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./RegisterUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst RegisterUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../models/Users/UserModel';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { GetUserById, UpdateUser, SaveUser } from '../../../../apis/Users/UserApi';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from './../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetUserById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateUser(values);\r\n            } else {\r\n                await SaveUser(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { ChangePasswordUser } from '../../../../apis/Users/UserApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../models/Users/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Titular } from '../../models/Associados/Titular';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\n\r\nexport function SaveTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, titular);\r\n}\r\n\r\nexport function UpdateTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, titular);\r\n}\r\n\r\nexport function GetTitularById(id: number): Promise<AxiosResponse<Titular>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirTitular(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport { Associado } from '../../../models/Associados/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Tooltip, Tag } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from './../../../../models/Associados/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => {\r\n\r\n                return (\r\n                    <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                        <Tag color=\"red\" key={index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => onRemoveAssocido(index)} >Remover</Tag>\r\n                    </Tooltip>)\r\n                    ;\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\", dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                size=\"small\"\r\n                dataSource={formik.values.dependentes || []}\r\n                rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { UpdateTitular, SaveTitular, GetTitularById } from '../../../apis/Associados/AssociadoApi';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport Dependente from './Components/Dependente';\r\n\r\nconst CreateTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateTitular(values);\r\n            } else {\r\n                await SaveTitular(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetTitularById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/titular\"\r\n            breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n            initialValues={titular}\r\n            validationSchema={TitularSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Id\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Divider dashed >Dependentes</Divider>\r\n\r\n            <Dependente />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateTitular;\r\n","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\nimport { ExcluirTitular } from './../../../apis/Associados/AssociadoApi';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/associados/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirTitular}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nexport function SaveFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, formapagamento);\r\n}\r\n\r\nexport function UpdateFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, formapagamento);\r\n}\r\n\r\nexport function GetFormaPagamentoById(id: number): Promise<AxiosResponse<FormaPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFormaPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirFormaPagamento } from '../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/forma-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirFormaPagamento}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { UpdateFormaPagamento, SaveFormaPagamento, GetFormaPagamentoById } from '../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\n\r\nconst CreateFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateFormaPagamento(values);\r\n            } else {\r\n                await SaveFormaPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetFormaPagamentoById(id);\r\n        setFormaPagamento(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateFormaPagamento;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function UpdateCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function GetCondicaoPagamentoById(id: number): Promise<AxiosResponse<CondicaoPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCondicaoPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { ExcluirCondicaoPagamento } from '../../../../apis/CondicaoPagamento/CondicaoPagamento';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/condicao-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCondicaoPagamento}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { RecordTable } from '../../../../components/EditableTable/EditableTable';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .integer(\"Informe um número válido.\")\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .typeError(\"Informe um número válido.\")\r\n        .required(\"Informe o percentual.\")\r\n        .min(0.01, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object()\r\n        .shape<FormaPagamento>({\r\n            id: Yup.number()\r\n                .integer(\"Informe um número válido.\")\r\n                .typeError(\"Informe um número válido.\")\r\n                .required(\"Informe uma Dondição de Pagamento.\")\r\n        })\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    multa: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    desconto: Yup.number()\r\n        .required(\"Informe um número válido.\")\r\n        .typeError(\"Informe um número válido.\")\r\n        .min(0, \"O valor não pode ser menor que 0.\")\r\n        .max(100, \"O valor não pode ser maior que 100.\"),\r\n    parcela: Yup.array()\r\n        .of(CondicaoPagamentoParcelaSchema)\r\n        .min(1, \"Informe ao menos uma parcela.\")\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                let total = (parcelas.value as CondicaoPagamentoParcela[]).reduce((ty, parcela) => ty + parcela.percentual, 0);\r\n                return `Soma percentual diferente de 100% (${(100 - total).toFixed(2)}).`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                return parcelas.reduce((ty, parcela) => ty + parcela.percentual, 0) === 100;\r\n            }\r\n        })\r\n        .test({\r\n            name: \"parcela\",\r\n            message: (parcelas) => {\r\n                return `As parcelas devem ser sequenciais.`\r\n            },\r\n            test: (parcelas: CondicaoPagamentoParcela[]) => {\r\n                let init = 0;\r\n                return parcelas.every(e => {\r\n                    let valid = e.numeroDias >= init\r\n                    init = e.numeroDias;\r\n                    return valid;\r\n                });\r\n            }\r\n        })\r\n});\r\n\r\n\r\n\r\n\r\nexport function validateNumeroDias(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource.findIndex(e => e.tableKey === record.tableKey)\r\n    if (index < 0 || percelasSource.length === 1) {\r\n        return undefined\r\n    }\r\n\r\n    let beforeRecord = percelasSource[index - 1];\r\n    if (!beforeRecord) {\r\n        return undefined;\r\n    }\r\n    if (beforeRecord.numeroDias <= value) {\r\n        return undefined;\r\n    }\r\n\r\n    return `Número de dias inferior a parcela anterior${beforeRecord.numeroDias !== undefined ? ` (${beforeRecord.numeroDias})` : \"\"}.`\r\n}\r\n\r\n\r\nexport function validatePercentual(value: number, record: CondicaoPagamentoParcela & RecordTable, percelasSource: (CondicaoPagamentoParcela & RecordTable)[]) {\r\n    let index = percelasSource\r\n        .findIndex(e => e.tableKey === record.tableKey);\r\n\r\n    if (index < 0) {\r\n        return undefined\r\n    }\r\n\r\n    let percentualTotal = percelasSource\r\n        .filter(e => e.tableKey !== record.tableKey)\r\n        .reduce((e, a) => e + a.percentual, 0);\r\n\r\n    if ((percentualTotal + value) <= 100) {\r\n        return undefined\r\n    }\r\n\r\n    return `Soma total o percentual ultrapassa 100% (${100 - percentualTotal}).`\r\n}","import React, { memo } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface RecordTable {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = props.rowKey ?? \"id\";\r\n    const dataSource = mapRecord(field.value as any[]);\r\n\r\n    const components: TableComponents = {\r\n        body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n        },\r\n    };\r\n\r\n    const errorStyle: React.CSSProperties = {\r\n        borderWidth: \"1px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"red\",\r\n        borderRadius: \"5px\",\r\n    }\r\n\r\n    const hasListError = !Array.isArray(meta.error) && (meta.error?.length ?? \"\") > 2;\r\n\r\n    const columnsAction = props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: RecordTable, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    });\r\n\r\n    const columns: ColumnProps<any>[] = columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: RecordTable, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    });\r\n\r\n    function handleSave(values: RecordTable & any) {\r\n\r\n        const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRemove(values: RecordTable & any) {\r\n\r\n        const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRowMode(record: RecordTable & any, rowMode: RowMode) {\r\n\r\n        const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRowNew() {\r\n\r\n        let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n        helpers.setValue(mapedDataSource);\r\n\r\n    }\r\n\r\n    function mapRecord(dataSource: RecordTable[]): RecordTable[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: RecordTable\r\n    initiallValues: RecordTable,\r\n    handleSave: (values: RecordTable, formikHelpers: FormikHelpers<RecordTable>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr key={record.tableKey} {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            key={record.tableKey}\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr key={record.tableKey} {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\nexport default memo(EditableCell, () => false);\r\n","import React, { memo } from 'react';\r\nimport { RecordTable, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: RecordTable;\r\n    index: number;\r\n    handleRowMode: (record: RecordTable, rowMode: RowMode) => void;\r\n    handleRemove: (record: RecordTable) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    console.log(\"errors\", errors)\r\n\r\n    function handleCancel(record: RecordTable) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default memo(EditableCellAction, () => false);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EditableRowFooter, () => false);\r\n","import React, { memo } from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { CondicaoPagamentoParcela } from './../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { validateNumeroDias } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst NumeroDias: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n    console.log(submitForm.errors);\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber\r\n            name=\"numeroDias\" label=\"\" placeholder=\"0\" required\r\n            validate={(value) => validateNumeroDias(value, props.record, props.percelasSource)} \r\n            />\r\n    )\r\n\r\n}\r\n\r\nexport default memo(NumeroDias);\r\n","import React from 'react';\r\nimport { InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { useFormikContext } from 'formik';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { RecordTable } from '../../../../../components/EditableTable/EditableTable';\r\nimport { validatePercentual } from '../CondicaoPagamentoSchema';\r\n\r\nexport interface Props {\r\n    text: any;\r\n    record: CondicaoPagamentoParcela & RecordTable;\r\n    index: number;\r\n    percelasSource: (CondicaoPagamentoParcela & RecordTable)[]\r\n}\r\n\r\nconst Percentual: React.FC<Props> = (props) => {\r\n\r\n    //Se remover esta linha, o react nao atualiza o componente, \r\n    //  assim não executando o validator\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const submitForm = useFormikContext();\r\n\r\n\r\n\r\n    return (\r\n        <InputNumber name=\"percentual\" label=\"\" placeholder=\"0\" required \r\n        validate={(value) => validatePercentual(value, props.record, props.percelasSource)} \r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default Percentual;\r\n","import React from 'react';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport EditableTable, { ColumnEditableProps } from '../../../../../components/EditableTable/EditableTable';\r\nimport NumeroDias from './NumeroDias';\r\nimport Percentual from './Percentual';\r\nimport { FormaPagamento } from '../../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { GetFormaPagamentoById } from '../../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { Input, InputNumber } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { CondicaoPagamentoParcelaSchema } from '../CondicaoPagamentoSchema';\r\nimport { CondicaoPagamentoParcela } from '../../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { useField } from 'formik';\r\nimport { CondicaoPagamento } from '../../../../../models/CondicaoPagamento/CondicaoPagamento';\r\n\r\n\r\nconst CondicaoPagamentoGeneral: React.FC = () => {\r\n\r\n    const [field] = useField(\"parcela\");\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        {\r\n            dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true,\r\n            renderEditable: (text: any, record: any, index: number) => <NumeroDias text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"percentual\", title: \"Percentual\", editable: true,\r\n            render:(text: any, record: any, index: number) => text.toLocaleString(),\r\n            renderEditable: (text: any, record: any, index: number) => <Percentual text={text} record={record} index={index} percelasSource={field.value} />\r\n        },\r\n        {\r\n            dataIndex: \"formaPagamento\",\r\n            title: \"Forma de Pagamento\",\r\n            editable: true,\r\n            width: \"700px\",\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <SelectModelOne\r\n                        fetchMethod={GetFormaPagamentoById}\r\n                        name=\"formaPagamento.id\"\r\n                        ObjectName=\"formaPagamento\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        showLabel={false}\r\n                        label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n                        path=\"forma-pagamento\" />\r\n                },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={13}>\r\n                    <Input name=\"nome\" label=\"Condição de Pagamento\" placeholder=\"30/60/90\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"multa\" label=\"Multa\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"juro\" label=\"Juro\" placeholder=\"0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber name=\"desconto\" label=\"Desconto\" placeholder=\"0\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Divider>Parcelas</Divider>\r\n                    <EditableTable columns={columns}\r\n                        initiallValues={{\r\n                            numeroDias: undefined,\r\n                            percentual: Math.round((100 - ((field.value as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                            formaPagamento: undefined\r\n                        }}\r\n                        name=\"parcela\"\r\n                        validationSchema={CondicaoPagamentoParcelaSchema}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default CondicaoPagamentoGeneral;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { UpdateCondicaoPagamento, SaveCondicaoPagamento, GetCondicaoPagamentoById } from '../../../../apis/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema } from './CondicaoPagamentoSchema';\r\nimport CondicaoPagamentoGeneral from './components/CondicaoPagamentoGeneral';\r\n\r\nconst CreateCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCondicaoPagamento(values);\r\n            } else {\r\n                await SaveCondicaoPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetCondicaoPagamentoById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <CondicaoPagamentoGeneral />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCondicaoPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport RegisterPais from '../../../pages/Cidades/Pais/RegisterPais/RegisterPais';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport RegisterEstado from '../../../pages/Cidades/Estado/RegisterEstado/RegisterEstado';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport CreateCidade from '../../../pages/Cidades/Cidade/CreateCidade/CreateCidade';\r\nimport ListUser from '../../../pages/Users/ListUser/ListUser';\r\nimport RegisterUser from '../../../pages/Users/RegisterUser/RegisterUser';\r\nimport CreateTitular from '../../../pages/Associados/CreateTitular/CreateTitular';\r\nimport ListTitular from '../../../pages/Associados/ListTitular/ListTitular';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport CreateFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport CreateCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/pais/new\" component={RegisterPais} />\r\n            <Route path=\"/pais/edit/:id\" component={RegisterPais} />\r\n            <Route exact path=\"/pais\" component={ListPais} />\r\n\r\n            <Route path=\"/estado/new\" component={RegisterEstado} />\r\n            <Route path=\"/estado/edit/:id\" component={RegisterEstado} />\r\n            <Route exact path=\"/estado\" component={ListEstado} />\r\n\r\n            <Route path=\"/cidade/new\" component={CreateCidade} />\r\n            <Route path=\"/cidade/edit/:id\" component={CreateCidade} />\r\n            <Route exact path=\"/cidade\" component={ListCidade} />\r\n\r\n\r\n            <Route exact path=\"/user/new\" component={RegisterUser} />\r\n            <Route exact path=\"/user/edit/:id\" component={RegisterUser} />\r\n            <Route exact path=\"/user\" component={ListUser} />\r\n\r\n            <Route exact path=\"/titular/new\" component={CreateTitular} />\r\n            <Route exact path=\"/titular/edit/:id\" component={CreateTitular} />\r\n            <Route exact path=\"/titular\" component={ListTitular} />\r\n            \r\n            <Route exact path=\"/forma-pagamento/new\" component={CreateFormaPagamento} />\r\n            <Route exact path=\"/forma-pagamento/edit/:id\" component={CreateFormaPagamento} />\r\n            <Route exact path=\"/forma-pagamento\" component={ListFormaPagamento} />\r\n\r\n            <Route exact path=\"/condicao-pagamento/new\" component={CreateCondicaoPagamento} />\r\n            <Route exact path=\"/condicao-pagamento/edit/:id\" component={CreateCondicaoPagamento} />\r\n            <Route exact path=\"/condicao-pagamento\" component={ListCondicaoPagamento} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../models/Users/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { useState } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.less\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { tryLoginUser } from '../../../apis/Users/UserApi';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../services/Authenticate';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            setLoading(true);\r\n            let response = await tryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n        finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                        loading={loading}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\" component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}