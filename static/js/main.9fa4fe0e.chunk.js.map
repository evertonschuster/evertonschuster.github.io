{"version":3,"sources":["layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","layouts/BasicLayout/BasicLayout.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.ts","layouts/CrudFormLayout/CrudFormLayout.tsx","hoc/WithFormItem.tsx","components/WithFormItem/withFormItem.tsx","pages/Cidades/Pais/RegisterPais/PaisSchema.ts","apis/Api.ts","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/RegisterPais/RegisterPais.tsx","components/ModalForm/ModalFormContext.ts","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","hoc/UseListPagined.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","hoc/useDebouncedCallback.ts","pages/Cidades/Estado/RegisterEstado/EstadoSchema.ts","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/RegisterEstado/RegisterEstado.tsx","pages/Cidades/Estado/ListEstado/ListEstado.tsx","apis/Cidades/CidadeApi.ts","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Cidades/Cidade/RegisterCidade/CidadeSchema.ts","pages/Cidades/Cidade/RegisterCidade/RegisterCidade.tsx","pages/Users/ListUser/ListUser.tsx","apis/Users/UserApi.ts","pages/Users/RegisterUser/UserSchema.ts","pages/Users/RegisterUser/RegisterUser.tsx","pages/Users/RegisterUser/Components/RegisterUserGeneral.tsx","pages/Users/RegisterUser/Components/ChangePassword.tsx","apis/Associados/AssociadoApi.ts","pages/Associados/CreateTitular/TitularSchema.ts","pages/Associados/CreateTitular/Components/CreateAssociado.tsx","pages/Associados/CreateTitular/Components/Dependente.tsx","pages/Associados/CreateTitular/CreateTitular.tsx","pages/Associados/ListTitular/ListTitular.tsx","services/RouterService/Components/RoutePath.tsx","pages/Users/Login/LoginUserSchema.ts","pages/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","style","overflow","height","left","userSelect","theme","mode","inlineCollapsed","Item","key","to","type","title","ContentApp","props","Content","margin","padding","background","minHeight","children","history","createHistory","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","push","window","location","pathname","userName","FormMode","React","memo","Header","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","state","useEffect","errorBack","formik","response","prosMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","find","withRouter","values","formikHelpers","a","onSubmit","onKeyDown","keyEvent","charCode","keyCode","enableReinitialize","isSubmitting","isLoading","zIndex","width","top","position","fontSize","color","isFunction","paddingTop","marginRight","backPath","submitForm","withFormItem","Field","basicLayoutContext","isViewMode","isDisabled","disabled","name","label","required","autoComplete","ItemFormRender","Input","InputAntd","InputNumber","InputNumberAntd","DatePicker","DatePickerAntd","PaisSchema","Yup","shape","nome","max","ddi","sigla","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","SavePais","pais","post","UpdatePais","put","GetPaisById","id","get","toString","ExcluirPais","delete","loading","setLoading","setPais","match","params","bdpais","getPais","validationSchema","initialValues","placeholder","readOnly","ModalFormContext","setState","ModalFormContextProvider","isSelectMode","SelectMultiple","SelectOne","keyProp","ListSelectedItem","concat","showModal","setShowModal","record","setRecord","keyDescription","columns","render","text","replace","Edit","placement","deleteFunction","Delete","showExluir","rowSelection","onChange","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","visible","onOk","tableProps","reflesh","List","onCancel","okText","cancelText","okType","okButtonProps","cancelButtonProps","pagination","current","requestResult","pageSize","total","page","setFilterRequest","filterRequest","currentPage","onRow","newState","filter","dataSource","bordered","rowKey","useFixedHeader","filterValues","setFilterValues","value","target","onPressEnter","textAlign","New","paddingBottom","UseListPagined","setIsLoading","responseBack","setResponseBack","getDataBack","valuesFilter","then","totalItem","result","finally","dataIndex","basename","path","CloseForm","setVisible","destroyOnClose","Array","isArray","length","errorMessage","noSelection","connect","description","setDescription","keyId","getDesciptionValues","fetchMethod","respose","handleClick","callback","wait","argsRef","useRef","timeout","cleanup","clearTimeout","args","setTimeout","useDebouncedCallback","setSubmitting","min","setFieldValue","isNaN","Number","EstadoSchema","uf","paisId","nullable","typeError","SaveEstado","estado","UpdateEstado","GetEstadoById","ExcluirEstado","RegisterEstado","setEstado","getEstado","ListEstado","SaveCidade","cidade","UpdateCidade","GetCidadeById","ExcluirCidade","CidadeSchema","ddd","estadoId","RegisterCidade","setCidade","bdestado","getCidade","ListUser","tryLoginUser","endPoint","UpdateUser","ChangePasswordUser","SaveUser","GetUserById","Menus","UserSchema","phoneNumber","email","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","hidden","initialErrors","RegisterUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","SaveTitular","titular","UpdateTitular","GetTitularById","ExcluirTitular","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","onSave","onCancelForm","resetForm","telefone","handleSubmit","Dependente","indexEvent","dependentes","indexRow","onRemoveAssocido","useFormikContext","onSaveAssociado","field","insert","display","flex","justifyContent","arrayHelpers","item","CreateTitular","cep","bairro","endereco","numero","setTitular","getTitular","dashed","RoutePath","component","RegisterPais","exact","ListPais","ListCidade","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","success","xs","sm","md","lg","xl","xxl","autoFocus","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fa4fe0e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                left: 0,\r\n                userSelect: \"none\",\r\n            }}>\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\">\r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuário</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"TitularCrud\">\r\n                        <Link to=\"/Titular\">Titulares</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Icon type=\"shop\" />\r\n                <Icon type=\"contacts\" /> */}\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Content\r\n            style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#fff',\r\n                minHeight: 280,\r\n                overflow: \"hidden\"\r\n            }}>\r\n\r\n\r\n            {props.children}\r\n\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory();","import AuthenticatedUser from \"../models/Users/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        history.push(\"login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\" }}>\r\n            <Layout style={{ minHeight: \"100vh\" }} >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n\r\n                    <HeaderApp breadcrumbList={breadcrumb} />\r\n                    <ContentApp > {props.children} </ContentApp>\r\n\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import React, { useContext, useEffect, memo, ReactNode, useState } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n    const [state] = useState(props.breadcrumbList)\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik: FormikHelpers<any>, response: any, prosMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n\r\n        formik.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        const errors = response.errors;\r\n\r\n        prosMessage && Object.keys(errors).forEach(element => {\r\n            let result = prosMessage!.find(e => e === element);\r\n            result && notification.error({\r\n                message: errors[element],\r\n                duration: 10\r\n            });\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import React, {  } from 'react';\r\nimport { Row, Col, Button, Icon } from 'antd';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, isFunction } from 'formik';\r\nimport { Form } from 'formik-antd';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            await props.onSubmit(values, formikHelpers);\r\n\r\n        } catch (e) {\r\n\r\n            errorBack(formikHelpers, e)\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(keyEvent: any) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                {(formik) => (\r\n                    <Form onKeyDown={onKeyDown} >\r\n                        {renderLoading(formik.isSubmitting)}\r\n\r\n                        {isFunction(props.children)\r\n                            ? props.children(formik)\r\n                            : props.children}\r\n\r\n                        < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                            <Col>\r\n                                <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => props.history.push(props.backPath)}>Cancelar</Button>\r\n                                <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormLayout);\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withItemNone = <P extends object>(Field: React.ComponentType<P>): React.FC<P> => (props: any) =>\r\n    (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span>\r\n            </div>\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        <Field {...props} />\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport const ItemFormRender: React.FC<any> = (props) => {\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span>\r\n            </div>\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Input as InputAntd, InputNumber as InputNumberAntd, DatePicker as DatePickerAntd } from \"formik-antd\"\r\nimport { withFormItem } from \"../../hoc/WithFormItem\"\r\n\r\n\r\nexport const Input = withFormItem(InputAntd)\r\nexport const InputNumber = withFormItem(InputNumberAntd)\r\n\r\nexport const DatePicker = withFormItem(DatePickerAntd)","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"./../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if (error.response!.data!.code === 422 || error.response.status === 422) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import api from '../Api';\r\nimport { Pais } from '../../models/Cidades/Pais';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\n\r\nexport function SavePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, pais);\r\n}\r\n\r\nexport function UpdatePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, pais);\r\n}\r\n\r\nexport function GetPaisById(id: number): Promise<AxiosResponse<Pais>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirPais(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { SavePais, GetPaisById, UpdatePais } from '../../../../apis/Cidades/PaisApi';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await UpdatePais(values);\r\n            } else {\r\n                await SavePais(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetPaisById(id);\r\n        setPais(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPais);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.Edit)}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                    setLoading(false);\r\n                    props.tableProps.reflesh();\r\n                    setFormMode(FormMode.List)\r\n                    hidenExluir();\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" shape=\"circle\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../hoc/UseListPagined';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport api from './../apis/Api';\r\n\r\n\r\nexport interface Props {\r\n    URL: string,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport interface PaginationQuery {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    filter?: string\r\n}\r\n\r\nexport function UseListPagined(props: Props): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    function getDataBack() {\r\n        setIsLoading(true);\r\n        api.post(props.URL, { ...filterRequest, ...props.valuesFilter })\r\n            .then(response => {\r\n                setResponseBack({\r\n                    current: response.data.currentPage,\r\n                    pageSize: response.data.pageSize,\r\n                    total: response.data.totalItem,\r\n                    dataSource: response.data.result\r\n                });\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        console.error(\"Fui pro back\")\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.URL, filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, {  } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirPais } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/pais/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirPais}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(FormMode.SelectOne)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n}\r\n\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n        \r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okText=\"Selecionar\">\r\n                <RouterServiceModel path={props.path} setState={props.setState} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { InputNumber } from \"../WithFormItem/withFormItem\"\r\nimport { Input as InputAntd } from \"antd\"\r\nimport { ItemFormRender } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { connect, FormikContextType } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props & { formik: FormikContextType<any> }> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n\r\n\r\n    useEffect(() => {\r\n        let id = props.formik.values[props.name];\r\n        handleClick(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.formik.values[props.name]])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription])\r\n            } else {\r\n                setDescription(\"\")\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        props.formik.setFieldValue(props.name, id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            props.formik.setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            props.formik.setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        name={props.name}\r\n                        required={required}\r\n                        min={0}\r\n                        label={props.label.label} />\r\n                </Col>\r\n                <Col span={19}>\r\n                    <ItemFormRender>\r\n                        <InputAntd value={description} />\r\n                    </ItemFormRender>\r\n                </Col>\r\n                <Col span={2} style={{ textAlign: \"right\" }} >\r\n                    <ItemFormRender>\r\n                        <Button type=\"primary\" shape=\"circle\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                    </ItemFormRender>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ModelForm\r\n                required={props.required}\r\n                visible={visible}\r\n                setVisible={setVisible}\r\n                setState={setState}\r\n                state={isNaN(props.formik.values[props.name]) ? [] : { [keyId]: Number(props.formik.values[props.name]) }}\r\n                label={props.label}\r\n                errorMessage={props.errorMessage}\r\n                path={props.path} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default connect<Props, {}>(SelectModelOne);\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import { AxiosResponse } from 'axios'\r\nimport api from '../Api';\r\nimport { Estado } from '../../models/Cidades/Estado';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\n\r\nexport function SaveEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, estado);\r\n}\r\n\r\nexport function UpdateEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, estado);\r\n}\r\n\r\nexport function GetEstadoById(id: number): Promise<AxiosResponse<Estado>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirEstado(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { UpdateEstado, SaveEstado, GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { GetPaisById } from '../../../../apis/Cidades/PaisApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateEstado(values);\r\n            } else {\r\n                await SaveEstado(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetEstadoById(id);\r\n        setEstado(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetPaisById}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterEstado;\r\n","import React from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirEstado } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Estado/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirEstado}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import api from '../Api';\r\nimport { Cidade } from '../../models/Cidades/Cidade';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nexport function SaveCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, cidade);\r\n}\r\n\r\nexport function UpdateCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, cidade);\r\n}\r\n\r\nexport function GetCidadeById(id: number): Promise<AxiosResponse<Cidade>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCidade(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, {  } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirCidade } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Cidade/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCidade}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListCidade);\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { UpdateCidade, SaveCidade, GetCidadeById } from '../../../../apis/Cidades/CidadeApi';\r\nimport { GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCidade(values);\r\n            } else {\r\n                await SaveCidade(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetCidadeById(id);\r\n        setCidade(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetEstadoById}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterCidade;\r\n","import React from 'react';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/User/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Users/LoginUser';\r\nimport AuthenticatedUser from '../../models/Users/AuthenticatedUser';\r\nimport UserModel from '../../models/Users/UserModel';\r\nimport UserChangePasswordModel from '../../models/Users/UserChangePasswordModel';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\n\r\nexport function tryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n    return api.post(endPoint + \"/authorize\", user);\r\n}\r\n\r\nexport function UpdateUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, user);\r\n}\r\n\r\nexport function ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint + \"/Change-Password\", user);\r\n}\r\n\r\n\r\nexport function SaveUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, user);\r\n}\r\n\r\n\r\nexport function GetUserById(id: number): Promise<AxiosResponse<UserModel>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../models/Users/UserModel';\r\nimport { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../models/Users/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./RegisterUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst RegisterUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../models/Users/UserModel';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { GetUserById, UpdateUser, SaveUser } from '../../../../apis/Users/UserApi';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from './../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetUserById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateUser(values);\r\n            } else {\r\n                await SaveUser(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { ChangePasswordUser } from '../../../../apis/Users/UserApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../models/Users/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Titular } from '../../models/Associados/Titular';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\n\r\nexport function SaveTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, titular);\r\n}\r\n\r\nexport function UpdateTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, titular);\r\n}\r\n\r\nexport function GetTitularById(id: number): Promise<AxiosResponse<Titular>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirTitular(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport { Associado } from '../../../models/Associados/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from './../../../../models/Associados/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => <Button onClick={() => onRemoveAssocido(index)} type=\"danger\">Remover</Button>\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\",dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table columns={columns} dataSource={formik.values.dependentes || []} rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { UpdateTitular, SaveTitular, GetTitularById } from '../../../apis/Associados/AssociadoApi';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Dependente from './Components/Dependente';\r\n\r\nconst CreateTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateTitular(values);\r\n            } else {\r\n                await SaveTitular(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetTitularById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <PerfectScrollbar style={{ height: \"79vh\" }}>\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/titular\"\r\n                breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n                initialValues={titular}\r\n                validationSchema={TitularSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {() => (\r\n                    <>\r\n                        <Row>\r\n                            <Col span={2}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={2}>\r\n                                <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                            </Col>\r\n                            <Col span={2}>\r\n                                <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Divider dashed >Dependentes</Divider>\r\n\r\n                        <Dependente />\r\n                    </>\r\n                )}\r\n\r\n            </CrudFormLayout>\r\n        </PerfectScrollbar>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateTitular;\r\n","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\nimport { ExcluirTitular } from './../../../apis/Associados/AssociadoApi';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/associados/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirTitular}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport RegisterPais from '../../../pages/Cidades/Pais/RegisterPais/RegisterPais';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport RegisterEstado from '../../../pages/Cidades/Estado/RegisterEstado/RegisterEstado';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport RegisterCidade from '../../../pages/Cidades/Cidade/RegisterCidade/RegisterCidade';\r\nimport ListUser from '../../../pages/Users/ListUser/ListUser';\r\nimport RegisterUser from '../../../pages/Users/RegisterUser/RegisterUser';\r\nimport CreateTitular from '../../../pages/Associados/CreateTitular/CreateTitular';\r\nimport ListTitular from '../../../pages/Associados/ListTitular/ListTitular';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/pais/new\" component={RegisterPais} />\r\n            <Route path=\"/pais/edit/:id\" component={RegisterPais} />\r\n            <Route exact path=\"/pais\" component={ListPais} />\r\n\r\n            <Route path=\"/estado/new\" component={RegisterEstado} />\r\n            <Route path=\"/estado/edit/:id\" component={RegisterEstado} />\r\n            <Route exact path=\"/estado\" component={ListEstado} />\r\n\r\n            <Route path=\"/cidade/new\" component={RegisterCidade} />\r\n            <Route path=\"/cidade/edit/:id\" component={RegisterCidade} />\r\n            <Route exact path=\"/cidade\" component={ListCidade} />\r\n\r\n\r\n            <Route exact path=\"/user/new\" component={RegisterUser} />\r\n            <Route exact path=\"/user/edit/:id\" component={RegisterUser} />\r\n            <Route exact path=\"/user\" component={ListUser} />\r\n\r\n            <Route exact path=\"/titular/new\" component={CreateTitular} />\r\n            <Route exact path=\"/titular/edit/:id\" component={CreateTitular} />\r\n            <Route exact path=\"/titular\" component={ListTitular} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../models/Users/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.css\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { tryLoginUser } from '../../../apis/Users/UserApi';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../services/Authenticate';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            let response = await tryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\" >\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\" component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}