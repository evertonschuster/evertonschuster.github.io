{"version":3,"sources":["pages/Cidades/Pais/FormPais/PaisSchema.ts","pages/Cidades/Pais/FormPais/FormPais.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","hoc/WithFormItem.tsx","hoc/useDebouncedCallback.ts","components/WithFormItem/withFormItem.tsx","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","apis/Cidades/PaisApi.ts"],"names":["PaisSchema","Yup","shape","nome","max","required","ddi","sigla","withRouter","props","useState","loading","setLoading","pais","setPais","values","formikHelpers","a","match","params","id","PaisApi","Update","Save","history","push","errorBack","GetById","bdpais","data","useEffect","getPais","CrudFormLayout","isLoading","onSubmit","validationSchema","breadcrumbList","displayName","URL","undefined","backPath","initialValues","span","name","label","placeholder","readOnly","memo","setBreadcrumb","useContext","BasicLayoutContext","className","children","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","formMode","FormMode","View","isDisabled","disabled","autoComplete","style","width","withFormItemCustom","useField","field","WithItemNone","showLabel","padding","ItemFormRender","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","Input","formikAntd","fast","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","FormikForm","forwardRef","ref","useHistory","formik","useFormikContext","keyLocalStorage","location","pathname","toLowerCase","localStorage","getItem","Modal","confirm","title","content","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","ceatedDate","Date","formData","setItem","JSON","stringify","removeItem","savedForm","parse","setValues","onKeyUp","event","onKeyDown","isSubmitting","zIndex","height","margin","left","top","position","background","type","fontSize","color","theme","isFunction","justify","paddingTop","display","flexDirection","paddingRight","textAlign","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","onClick","submitForm","childRef","FormBasicLayout","enableReinitialize","keyEvent","charCode","keyCode","preventDefault","ApiBase"],"mappings":"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","file":"static/js/26.4d0b38e1.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { PaisApi } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst FormPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: Pais, formikHelpers: FormikHelpers<Pais>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await PaisApi.Update(values);\r\n            } else {\r\n                await PaisApi.Save(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        try {\r\n            if (!id) {\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            let bdpais = await PaisApi.GetById(id);\r\n            setPais(bdpais.data);\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={3}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={10}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(FormPais);\r\n","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues(savedForm.formData);\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    \r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import { Pais } from '../../models/Cidades/Pais';\r\nimport { ApiBase } from './../Api';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\nclass Api extends ApiBase<Pais>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const PaisApi = new Api();"],"sourceRoot":""}