{"version":3,"sources":["layouts/BasicLayout/Components/SideMenuApp.tsx","layouts/BasicLayout/Components/ContentApp.tsx","services/RouterService/routing.ts","services/Authenticate.ts","layouts/BasicLayout/Components/HeaderApp.tsx","layouts/BasicLayout/BasicLayoutContext.tsx","layouts/BasicLayout/BasicLayout.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","utils/MessageApi.ts","layouts/CrudFormLayout/CrudFormLayout.tsx","hoc/WithFormItem.tsx","components/WithFormItem/withFormItem.tsx","pages/Cidades/Pais/RegisterPais/PaisSchema.ts","apis/Api.ts","apis/Cidades/PaisApi.ts","pages/Cidades/Pais/RegisterPais/RegisterPais.tsx","components/ModalForm/ModalFormContext.ts","components/ListForm/components/ListFormTable.tsx","components/ListForm/components/ListFormHeader.tsx","components/ListForm/ListForm.tsx","hoc/UseListPagined.ts","pages/Cidades/Pais/ListPais/ListPais.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalForm.tsx","components/SelectModel/SelectModelOne.tsx","hoc/useDebouncedCallback.ts","pages/Cidades/Estado/RegisterEstado/EstadoSchema.ts","apis/Cidades/EstadoApi.ts","pages/Cidades/Estado/RegisterEstado/RegisterEstado.tsx","pages/Cidades/Estado/ListEstado/ListEstado.tsx","apis/Cidades/CidadeApi.ts","pages/Cidades/Cidade/ListCidade/ListCidade.tsx","pages/Cidades/Cidade/CreateCidade/CidadeSchema.ts","pages/Cidades/Cidade/CreateCidade/CreateCidade.tsx","pages/Users/ListUser/ListUser.tsx","apis/Users/UserApi.ts","pages/Users/RegisterUser/UserSchema.ts","pages/Users/RegisterUser/RegisterUser.tsx","pages/Users/RegisterUser/Components/RegisterUserGeneral.tsx","pages/Users/RegisterUser/Components/ChangePassword.tsx","apis/Associados/AssociadoApi.ts","pages/Associados/CreateTitular/TitularSchema.ts","pages/Associados/CreateTitular/Components/CreateAssociado.tsx","pages/Associados/CreateTitular/Components/Dependente.tsx","pages/Associados/CreateTitular/CreateTitular.tsx","pages/Associados/ListTitular/ListTitular.tsx","apis/CondicaoPagamento/FormaPagamento.ts","pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento.tsx","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/FormaPagamentoSchema.ts","pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento.tsx","apis/CondicaoPagamento/CondicaoPagamento.ts","pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento.tsx","components/EditableTable/EditableTable.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CondicaoPagamentoSchema.ts","components/EditableTable/Components/EditableFormRow.tsx","components/EditableTable/Components/EditableCell.tsx","components/EditableTable/Components/EditableCellAction.tsx","components/EditableTable/Components/EditableRowFooter.tsx","pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento.tsx","services/RouterService/Components/RoutePath.tsx","pages/Users/Login/LoginUserSchema.ts","pages/Users/Login/LoginUser.tsx","services/RouterService/RouterService.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SideMenuApp","Sider","Layout","useState","collapsed","setCollapsed","trigger","collapsible","onDoubleClick","event","preventDefault","theme","mode","inlineCollapsed","Item","key","to","type","title","ContentApp","props","Content","style","margin","padding","background","minHeight","overflow","height","children","history","createHistory","TOKEN_KEY","getToken","userData","localStorage","getItem","obj","JSON","parse","token","login","user","setItem","stringify","getUserName","userName","FormMode","React","memo","Header","userSelect","align","gutter","span","className","paddingLeft","breadcrumbList","map","e","index","undefined","URL","displayName","justify","paddingRight","count","size","icon","overlay","onClick","removeItem","push","window","location","pathname","BasicLayoutContext","createContext","breadcrumb","setBreadcrumb","formMode","View","setFormMode","sharedState","setSharedState","BasicLayoutContextProvider","Provider","Consumer","BasicLayout","useContext","animationName","animationDuration","state","useEffect","errorBack","formik","response","prosMessage","console","info","errors","status","notification","error","message","duration","setErrors","Object","keys","forEach","element","find","withRouter","values","formikHelpers","a","onSubmit","onKeyDown","keyEvent","charCode","keyCode","enableReinitialize","isSubmitting","isLoading","zIndex","width","left","top","position","fontSize","color","isFunction","paddingTop","marginRight","backPath","submitForm","withFormItem","Field","basicLayoutContext","isViewMode","isDisabled","disabled","name","label","required","autoComplete","ItemFormRender","showLabel","Input","InputAntd","InputNumber","InputNumberAntd","DatePicker","DatePickerAntd","PaisSchema","Yup","shape","nome","max","ddi","sigla","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","Promise","reject","originalRequest","_retry","data","code","log","ValidationError","this","SavePais","pais","post","UpdatePais","put","GetPaisById","id","get","toString","ExcluirPais","delete","loading","setLoading","setPais","match","params","bdpais","getPais","validationSchema","initialValues","placeholder","readOnly","ModalFormContext","setState","ModalFormContextProvider","isSelectMode","SelectMultiple","SelectOne","keyProp","ListSelectedItem","concat","showModal","setShowModal","record","setRecord","keyDescription","columns","render","text","replace","Edit","placement","deleteFunction","Delete","showExluir","rowSelection","onChange","selectedRowKeys","selectedRows","hidenExluir","savedFormMode","visible","onOk","tableProps","reflesh","List","onCancel","okText","cancelText","okType","okButtonProps","cancelButtonProps","pagination","current","requestResult","pageSize","total","page","setFilterRequest","filterRequest","currentPage","onRow","newState","filter","dataSource","bordered","rowKey","useFixedHeader","filterValues","setFilterValues","value","target","onPressEnter","textAlign","New","paddingBottom","UseListPagined","setIsLoading","responseBack","setResponseBack","getDataBack","valuesFilter","then","totalItem","result","finally","dataIndex","basename","path","CloseForm","setVisible","destroyOnClose","Array","isArray","length","errorMessage","noSelection","description","setDescription","keyId","useField","field","meta","helpers","ObjectName","helpersObject","setSubmitting","useFormikContext","getDesciptionValues","fetchMethod","respose","setValue","handleClick","callback","wait","argsRef","useRef","timeout","cleanup","clearTimeout","args","setTimeout","useDebouncedCallback","validateStatus","help","isNaN","Number","EstadoSchema","uf","paisId","nullable","typeError","SaveEstado","estado","UpdateEstado","GetEstadoById","ExcluirEstado","RegisterEstado","setEstado","getEstado","ListEstado","SaveCidade","cidade","UpdateCidade","GetCidadeById","ExcluirCidade","ListCidade","CidadeSchema","ddd","estadoId","CreateCidade","setCidade","bdestado","getCidade","ListUser","tryLoginUser","endPoint","UpdateUser","ChangePasswordUser","SaveUser","GetUserById","Menus","UserSchema","phoneNumber","email","password","confirmPassword","oneOf","UserChangePasswor","currentPassword","newPassword","userModel","setUserModel","getUser","hidden","initialErrors","RegisterUser","TabPane","Tabs","defaultActiveKey","Profile","tab","changePassword","SaveTitular","titular","UpdateTitular","GetTitularById","ExcluirTitular","TitularSchema","rg","cpf","AssociadoSchema","CreateAssociado","onSave","onCancelForm","resetForm","telefone","handleSubmit","Dependente","indexEvent","dependentes","indexRow","setFieldValue","onRemoveAssocido","onSaveAssociado","insert","display","flex","justifyContent","arrayHelpers","item","CreateTitular","cep","bairro","endereco","numero","setTitular","getTitular","dashed","SaveFormaPagamento","formapagamento","UpdateFormaPagamento","GetFormaPagamentoById","ExcluirFormaPagamento","ListFormaPagamento","FormaPagamentoSchema","CreateFormaPagamento","setFormaPagamento","getFormaPagamento","SaveCondicaoPagamento","condicaopagamento","UpdateCondicaoPagamento","GetCondicaoPagamentoById","ExcluirCondicaoPagamento","RowMode","TypeAttribute","ListCondicaoPagamento","CondicaoPagamentoParcelaSchema","numeroDias","min","percentual","formaPagamento","CondicaoPagamentoSchema","juro","multa","desconto","parcela","of","handleSave","initiallValues","restProps","rowMode","view","renderEditable","rowIndex","number","decimalSeparator","EditableCellAction","handleRowMode","edit","handleRemove","new","EditableRowFooter","onNewRow","mapRecord","components","body","row","EditableFormRow","cell","EditableCell","hasListError","col","editable","onCell","dataSourceNew","tableKey","handleRowNew","mapedDataSource","Date","now","borderWidth","borderStyle","borderColor","borderRadius","footer","CreateCondicaoPagamento","setCondicaoPagamento","getCondicaoPagamento","Math","round","reduce","RoutePath","component","RegisterPais","exact","ListPais","ListTitular","LoginUserSchema","search","redirectUrl","URLSearchParams","success","xs","sm","md","lg","xl","xxl","autoFocus","tabIndex","prefix","htmlType","RouterService","LoginUser","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb1487d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Menu, Icon, Layout } from \"antd\";\r\nimport SubMenu from 'antd/lib/menu/SubMenu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuApp: React.FC = () => {\r\n    const { Sider } = Layout;\r\n    const [collapsed, setCollapsed] = useState(true);\r\n\r\n    return (\r\n        <Sider trigger={null}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onDoubleClick={(event) => {\r\n                setCollapsed(!collapsed);\r\n                event.preventDefault();\r\n            }}\r\n            >\r\n            <Menu theme=\"dark\" mode=\"inline\" inlineCollapsed={true} >\r\n                <Menu.Item key=\"Menu\">\r\n                    <Link to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                        <span>Tela inicial</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu\r\n                    key=\"cidades\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"environment\" />\r\n                            <span>Cidades</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"cidadesCrud\">\r\n                        <Link to=\"/cidade\">Cidades</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"estadoCrud\"> \r\n                        <Link to=\"/estado\">Estados</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"paisCrud\">\r\n                        <Link to=\"/pais\"> Paises</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n                <SubMenu\r\n                    key=\"system\"\r\n                    title={\r\n                        <span>\r\n                            <Icon type=\"folder-open\" />\r\n                            <span>Cadastros do sistema</span>\r\n                        </span>\r\n                    }>\r\n\r\n                    <Menu.Item key=\"UserCrud\">\r\n                        <Link to=\"/user\">Usuário</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"TitularCrud\">\r\n                        <Link to=\"/Titular\">Titulares</Link>\r\n                    </Menu.Item>\r\n\r\n                    <SubMenu\r\n                        key=\"CondicaoPagamento\"\r\n                        title={\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        }>\r\n\r\n                        <Menu.Item key=\"CondicaoPagamentoCrud\">\r\n                            <Link to=\"/condicao-pagamento\">Condição de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item key=\"FormaPagamentoCrud\">\r\n                            <Link to=\"/forma-pagamento\">Forma de Pag.</Link>\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Icon type=\"shop\" />\r\n                <Icon type=\"contacts\" /> */}\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n}\r\n\r\nexport default SideMenuApp;","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst ContentApp: React.FC = (props) => {\r\n\r\n    const { Content } = Layout;\r\n\r\n    return (\r\n        <Content\r\n            style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                background: '#fff',\r\n                minHeight: 280,\r\n                overflow: \"hidden\",\r\n                height: \"100vh\"\r\n            }}>\r\n\r\n\r\n            {props.children}\r\n\r\n        </Content>\r\n    );\r\n}\r\n\r\nexport default ContentApp;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport const history = createHistory();","import AuthenticatedUser from \"../models/Users/AuthenticatedUser\";\r\nimport {history} from './../services/RouterService/routing'\r\n\r\nexport const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\nexport function isAuthenticated() {\r\n    return !(!localStorage.getItem(TOKEN_KEY));\r\n}\r\n\r\nexport function getToken() {\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.token || \"\";\r\n}\r\n\r\nexport function login(user: AuthenticatedUser) {\r\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n};\r\n\r\nexport function removeToken() {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getUserName() {\r\n    verefiIsLogedAndLogaut();\r\n    let userData = localStorage.getItem(TOKEN_KEY);\r\n    var obj = JSON.parse(userData!);\r\n\r\n    return obj?.userName || \"\";\r\n}\r\n\r\nexport function verefiIsLogedAndLogaut() {\r\n    if (!isAuthenticated()) {\r\n        // history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n    }\r\n}","import React from 'react';\r\nimport { Layout, Avatar, Row, Col, Badge, Breadcrumb, Icon, Menu, Dropdown } from 'antd';\r\nimport { BreadcrumbProp } from '../BasicLayout';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserName, logout } from '../../../services/Authenticate';\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[]\r\n}\r\n\r\nconst HeaderApp: React.FC<Props> = (props) => {\r\n\r\n    const { Header } = Layout;\r\n\r\n    function renderMenu() {\r\n        return (\r\n            <Menu >\r\n                <Menu.Item key=\"1\">1st menu item</Menu.Item>\r\n                <Menu.Item key=\"2\">2nd memu item</Menu.Item>\r\n                <Menu.Item key=\"3\" onClick={() => logout()}>Sair</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Header style={{ background: '#fff', padding: 0, userSelect: \"none\" }}>\r\n\r\n            <Row type=\"flex\" align=\"middle\" gutter={20} >\r\n                <Col span={18} className=\"gutter-row\">\r\n                    <Breadcrumb style={{ paddingLeft: \"10px\" }}>\r\n                        <Breadcrumb.Item key={-1}>\r\n                            <Link to=\"/\">Inicial</Link>\r\n                        </Breadcrumb.Item>\r\n                        {\r\n                            (props.breadcrumbList || []).map((e, index) =>\r\n                                <Breadcrumb.Item key={index}>\r\n                                    {e.URL === undefined ? e.displayName : <Link to={e.URL}>{e.displayName}</Link>}\r\n                                </Breadcrumb.Item>)\r\n                        }\r\n\r\n                    </Breadcrumb>\r\n                </Col>\r\n\r\n                <Col span={6} >\r\n                    <Row type=\"flex\" justify=\"end\" gutter={20} style={{ paddingRight: \"30px\" }}>\r\n                        <Col>\r\n                            <Badge count={1}>\r\n                                <Avatar size=\"large\" icon=\"user\" />\r\n                            </Badge>\r\n                        </Col>\r\n                        <Col>\r\n                            <Dropdown overlay={renderMenu()}>\r\n                                <span>\r\n                                    {getUserName()} <Icon type=\"down\" />\r\n                                </span>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Header>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(HeaderApp);\r\n","import React from 'react'\r\nimport { BreadcrumbProp } from './BasicLayout';\r\n\r\n\r\nexport enum FormMode {\r\n    New = 0,\r\n    View = 1,\r\n    Edit = 2,\r\n    Delete = 3,\r\n    SelectOne = 4,\r\n    SelectMultiple = 5,\r\n    List = 6\r\n}\r\n\r\n\r\nexport interface BasicLayoutContextProp {\r\n    breadcrumb?: BreadcrumbProp[];\r\n    setBreadcrumb: (value?: BreadcrumbProp[]) => void;\r\n\r\n    formMode: FormMode;\r\n    setFormMode: (values: FormMode) => void;\r\n\r\n    sharedState: any;\r\n    setSharedState: (value: any) => void;\r\n}\r\n\r\nconst BasicLayoutContext = React.createContext<BasicLayoutContextProp>(\r\n    {\r\n        breadcrumb: undefined,\r\n        setBreadcrumb: () => { },\r\n\r\n        formMode: FormMode.View,\r\n        setFormMode: () => { },\r\n\r\n        sharedState: undefined,\r\n        setSharedState: () => { },\r\n\r\n    }\r\n);\r\n\r\nexport const BasicLayoutContextProvider = BasicLayoutContext.Provider\r\nexport const BasicLayoutContextConsumer = BasicLayoutContext.Consumer\r\n\r\nexport default BasicLayoutContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react';\r\nimport { Layout } from 'antd';\r\nimport SideMenuApp from './Components/SideMenuApp';\r\nimport ContentApp from './Components/ContentApp';\r\nimport HeaderApp from './Components/HeaderApp';\r\nimport BasicLayoutContext from './BasicLayoutContext';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport \"./basic-layout.css\";\r\n\r\n\r\nexport interface BreadcrumbProp {\r\n    displayName: string,\r\n    URL?: string\r\n}\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n}\r\n\r\nconst BasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { breadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    return (\r\n        <div style={{ animationName: \"openSystem\", animationDuration: \"2s\" }}>\r\n            <Layout style={{ minHeight: \"100vh\" }} >\r\n\r\n                <SideMenuApp />\r\n\r\n                <Layout  >\r\n                    <PerfectScrollbar style={{ height: \"100vh\" }}>\r\n                        <HeaderApp breadcrumbList={breadcrumb} />\r\n                        <ContentApp > {props.children} </ContentApp>\r\n                    </PerfectScrollbar>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicLayout;\r\n","import React, { useContext, useEffect, memo, ReactNode, useState } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n    const [state] = useState(props.breadcrumbList)\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","import { notification } from \"antd\";\r\nimport { FormikHelpers } from \"formik\";\r\n\r\nexport function errorBack(formik: FormikHelpers<any>, response: any, prosMessage?: string[]) {\r\n\r\n    try {\r\n        console.info(\"Cabaciou\", response.errors);\r\n\r\n        if (response?.response?.status === 405) {\r\n            notification.error({\r\n                message: \"405 (Method Not Allowed)\",\r\n                duration: 10\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!response?.errors) {\r\n            return;\r\n        }\r\n\r\n        formik.setErrors(response.errors);\r\n        notification.error({\r\n            message: response[\"message\"],\r\n            duration: 10\r\n        });\r\n\r\n        const errors = response.errors;\r\n\r\n        prosMessage && Object.keys(errors).forEach(element => {\r\n            let result = prosMessage!.find(e => e === element);\r\n            result && notification.error({\r\n                message: errors[element],\r\n                duration: 10\r\n            });\r\n        });\r\n\r\n\r\n    } catch (e) {\r\n        console.error(\"Erro ao exibir as messagem \", e);\r\n    }\r\n}","import React, {  } from 'react';\r\nimport { Row, Col, Button, Icon } from 'antd';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, isFunction } from 'formik';\r\nimport { Form } from 'formik-antd';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            await props.onSubmit(values, formikHelpers);\r\n\r\n        } catch (e) {\r\n\r\n            errorBack(formikHelpers, e)\r\n\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function onKeyDown(keyEvent: any) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                {(formik) => (\r\n                    <Form onKeyDown={onKeyDown} >\r\n                        {renderLoading(formik.isSubmitting)}\r\n\r\n                        {isFunction(props.children)\r\n                            ? props.children(formik)\r\n                            : props.children}\r\n\r\n                        < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                            <Col>\r\n                                <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => props.history.push(props.backPath)}>Cancelar</Button>\r\n                                <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormLayout);\r\n","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withItemNone = <P extends object>(Field: React.ComponentType<P>): React.FC<P> => (props: any) =>\r\n    (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span>\r\n            </div>\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        <Field {...props} />\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Input as InputAntd, InputNumber as InputNumberAntd, DatePicker as DatePickerAntd } from \"formik-antd\"\r\nimport { withFormItem } from \"../../hoc/WithFormItem\"\r\n\r\n\r\nexport const Input = withFormItem(InputAntd)\r\nexport const InputNumber = withFormItem(InputNumberAntd)\r\n\r\nexport const DatePicker = withFormItem(DatePickerAntd)","import * as Yup from 'yup';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\n\r\n\r\nexport const PaisSchema = Yup.object().shape<Pais>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do pais não pode ser vaziu.'),\r\n\r\n    ddi: Yup.string()\r\n        .max(5, \"O campo [DDI] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDI] do pais não pode ser vaziu.'),\r\n\r\n    sigla: Yup.string()\r\n        .max(5, \"O campo [Sigla] não deve possuir mais de 5 caracteres.\")\r\n        .required('[Sigla] do pais não pode ser vaziu.'),\r\n});","import axios from \"axios\";\r\nimport { getToken } from \"../services/Authenticate\";\r\nimport { message } from \"antd\";\r\nimport { history } from \"./../services/RouterService/routing\"\r\n\r\nlet baseUri = \"https://controle-fluxo-empresarial.herokuapp.com/\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseUri = \"http://localhost:5000\"\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: baseUri\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        if (error.response === undefined) {\r\n\r\n            console.error(\"Erros da requisição\", error.response);\r\n            message.error(\"O sistema está temporariamente fora do ar!\");\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            history.push(\"/login?redirectUrl=\" + window.location.pathname)\r\n        }\r\n\r\n        if (error.response!.data!.code === 422 || error.response.status === 422) {\r\n            console.log(\"Cambioooo\")\r\n            return Promise.reject(new ValidationError(error.response.data));\r\n        }\r\n\r\n\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\nexport default api;\r\n\r\n\r\nexport class ValidationError {\r\n    constructor(values: any) {\r\n        this.errors = values.errors;\r\n        this.code = values.code;\r\n        this.message = values.message;\r\n    }\r\n\r\n    errors: any;\r\n    code: number;\r\n    message: string;\r\n}\r\n","import api from '../Api';\r\nimport { Pais } from '../../models/Cidades/Pais';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const endPoint: string = 'api/pais';\r\n\r\n\r\nexport function SavePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, pais);\r\n}\r\n\r\nexport function UpdatePais(pais: Pais): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, pais);\r\n}\r\n\r\nexport function GetPaisById(id: number): Promise<AxiosResponse<Pais>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirPais(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { PaisSchema } from './PaisSchema';\r\nimport { SavePais, GetPaisById, UpdatePais } from '../../../../apis/Cidades/PaisApi';\r\nimport { Pais } from '../../../../models/Cidades/Pais';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterPais: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pais, setPais] = useState<Pais>({ nome: \"\", ddi: \"\", sigla: \"\" })\r\n\r\n    useEffect(() => {\r\n        getPais(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n            if (props.match.params.id) {\r\n                await UpdatePais(values);\r\n            } else {\r\n                await SavePais(values);\r\n            }\r\n            props.history.push(\"/Pais\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getPais(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetPaisById(id);\r\n        setPais(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            onSubmit={onSubmit}\r\n            validationSchema={PaisSchema}\r\n            breadcrumbList={[{ displayName: \"Pais\", URL: \"/Pais\" }, { displayName: \"Novo Pais\", URL: undefined }]}\r\n            backPath=\"/pais\"\r\n            initialValues={pais}>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Pais\" placeholder=\"Pais\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"sigla\" label=\"Sigla\" placeholder=\"Sigla\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"ddi\" label=\"DDI\" placeholder=\"DDI\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterPais);\r\n","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext, memo, useState } from 'react';\r\nimport { Table, Tooltip, Tag, Modal } from 'antd';\r\nimport { ListItem } from '../ListForm';\r\nimport { ColumnProps, TableRowSelection } from 'antd/lib/table';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ModalFormContext from '../../ModalForm/ModalFormContext';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nexport interface Props<T> {\r\n    keyProp?: string;\r\n    columns: ColumnProps<T>[];\r\n    tableProps: ListItem<T>;\r\n    deleteFunction?: (id: number) => void;\r\n    keyDescription?: string;\r\n}\r\n\r\nconst ListFormTable: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState } = useContext(BasicLayoutContext);\r\n    const { setState, state } = useContext(ModalFormContext);\r\n    const isSelectMode = formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne;\r\n    const key = props.keyProp || \"id\";\r\n    const ListSelectedItem: any[] = state ? [].concat(state) : [];\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [record, setRecord] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n\r\n    const columns = props.columns.concat({\r\n        title: 'Ações',\r\n        key: 'action',\r\n        width: \"150px\",\r\n        render: (text: any, record: any, index: number) => (\r\n            <>\r\n                <Link to={(props.location.pathname + \"/edit/\" + record[key]).replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.Edit)}>\r\n                    <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                        <Tag color=\"green\" key={index + \"12\"} className=\"custom-cursor-pointer\" >Editar</Tag>\r\n                    </Tooltip>\r\n                </Link>\r\n\r\n                {props.deleteFunction ?\r\n                    <Tooltip placement=\"top\" title=\"Excluir Registro Selecionado.\" >\r\n                        <Tag color=\"red\" key={index + \"23\"} className=\"custom-cursor-pointer\" onClick={() => { setFormMode(FormMode.Delete); showExluir(record) }} >Excluir</Tag>\r\n                    </Tooltip>\r\n                    : null}\r\n\r\n            </>\r\n        ),\r\n    })\r\n\r\n    const rowSelection: TableRowSelection<any> = {\r\n        // selections: false,\r\n        type: formMode === FormMode.SelectMultiple ? \"checkbox\" : \"radio\",\r\n        onChange: onChangeRowSelection,\r\n        selectedRowKeys: ListSelectedItem.map(e => e[key])\r\n    }\r\n\r\n    function onChangePagination(page: number) {\r\n        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: page })\r\n    }\r\n\r\n    function onChangeRowSelection<T>(selectedRowKeys: string[] | number[], selectedRows: T[]) {\r\n        setState(selectedRows);\r\n    }\r\n\r\n    function showExluir(record: any) {\r\n        setShowModal(true);\r\n        setRecord(record);\r\n    }\r\n\r\n    function hidenExluir() {\r\n        setShowModal(false);\r\n\r\n        if (sharedState && sharedState.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n        }\r\n    }\r\n\r\n\r\n    function onClick(record: any) {\r\n        if (!isSelectMode) return;\r\n\r\n        if (FormMode.SelectOne === formMode) {\r\n            setState([record]);\r\n            return;\r\n        }\r\n\r\n\r\n        let newState = ListSelectedItem;\r\n\r\n        if (ListSelectedItem.find(e => e[key] === record[key]) === undefined) {\r\n            newState = ListSelectedItem.concat(record);\r\n        }\r\n        else {\r\n            newState = ListSelectedItem.filter(e => e[key] !== record[key]);\r\n        }\r\n\r\n        setState(newState);\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Modal\r\n                title=\"Atenção!!\"\r\n                visible={showModal}\r\n                onOk={async () => {\r\n                    setLoading(true);\r\n                    props.deleteFunction && await props.deleteFunction((record || {})[key])\r\n                    setLoading(false);\r\n                    props.tableProps.reflesh();\r\n                    setFormMode(FormMode.List)\r\n                    hidenExluir();\r\n                }}\r\n                onCancel={hidenExluir}\r\n                okText=\"Excluir\"\r\n                cancelText=\"Cancelar\"\r\n                okType=\"danger\"\r\n                okButtonProps={{\r\n                    loading: loading\r\n                }}\r\n                cancelButtonProps={{\r\n                    loading: loading\r\n                }}\r\n            >\r\n                <span>\r\n                    Você está prestes a excluir '{(record || {})[keyDescription]}'.\r\n                <br />\r\n                    Está certo disso?\r\n                </span>\r\n            </Modal>\r\n\r\n            <Table\r\n                pagination={{\r\n                    current: props.tableProps.requestResult.current,\r\n                    pageSize: props.tableProps.requestResult.pageSize,\r\n                    total: props.tableProps.requestResult.total,\r\n                    onChange: onChangePagination\r\n                }}\r\n                loading={props.tableProps.isLoading}\r\n                rowSelection={isSelectMode ? rowSelection : undefined}\r\n                onRow={(record: any) => { return { onClick: () => { onClick(record) } } }}\r\n                columns={columns}\r\n                dataSource={props.tableProps.requestResult.dataSource}\r\n                bordered={true}\r\n                rowKey={(record: any) => record[key]}\r\n                // scroll={{ y: 3000 }}\r\n                size=\"small\"\r\n                useFixedHeader={true}>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormTable));\r\n","import React, { memo, useState, useContext } from 'react';\r\nimport { Input, Col, Button } from 'antd';\r\nimport { withRouter, Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ListItem } from '../ListForm';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n}\r\n\r\nconst ListFormHeader: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n    //#region Constantes\r\n\r\n    const [filterValues, setFilterValues] = useState<string>()\r\n    const { setFormMode } = useContext(BasicLayoutContext);\r\n    //#endregion\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col span={10}>\r\n                <Input placeholder=\"Filtrar\" value={filterValues}\r\n                    onChange={(event) => { setFilterValues(event.target.value) }}\r\n                    onPressEnter={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n            <Col span={1} style={{ textAlign: \"center\" }}>\r\n                <Button type=\"primary\" shape=\"circle\" icon=\"search\"\r\n                    onClick={() => {\r\n                        props.tableProps.setFilterRequest({ ...props.tableProps.filterRequest, currentPage: 1, filter: filterValues })\r\n                    }} />\r\n            </Col>\r\n\r\n            <Col span={2} push={11} style={{ textAlign: \"right\" }}>\r\n                <Button type=\"primary\">\r\n                    <Link to={(props.location.pathname + \"/new\").replace(\"//\", \"/\")} onClick={() => setFormMode(FormMode.New)}>\r\n                        Adicionar\r\n                        </Link>\r\n                </Button>\r\n            </Col>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ListFormHeader));\r\n","import React, { memo, useContext, useEffect } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { PaginationQuery } from '../../hoc/UseListPagined';\r\nimport ListFormTable from './components/ListFormTable';\r\nimport ListFormHeader from './components/ListFormHeader';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface TableProps<T> {\r\n    dataSource: T[];\r\n    current: number;\r\n    pageSize: number;\r\n    total: number;\r\n}\r\n\r\nexport interface ListItem<T> {\r\n    requestResult: TableProps<T>;\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n}\r\n\r\nexport interface Props<T> {\r\n    tableProps: ListItem<T>;\r\n    columns: ColumnProps<T>[];\r\n    keyProp?: string;\r\n    deleteFunction?: (id: number) => void\r\n}\r\n\r\nconst ListForm: React.FC<Props<any>> = (props) => {\r\n\r\n    const { formMode, setFormMode, sharedState, setSharedState } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        if (formMode === FormMode.SelectMultiple || formMode === FormMode.SelectOne) {\r\n            setSharedState({ ...sharedState, savedFormMode: formMode })\r\n            return;\r\n        }\r\n\r\n        if (sharedState?.savedFormMode) {\r\n            setFormMode(sharedState.savedFormMode);\r\n            return;\r\n        }\r\n\r\n        setFormMode(FormMode.List);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ paddingBottom: \"20px\" }}>\r\n                <ListFormHeader tableProps={props.tableProps} />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <ListFormTable\r\n                        deleteFunction={props.deleteFunction}\r\n                        keyProp={props.keyProp}\r\n                        columns={props.columns}\r\n                        tableProps={props.tableProps}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(ListForm);\r\n","import { useState, useEffect } from 'react';\r\nimport { TableProps } from '../components/ListForm/ListForm';\r\nimport api from './../apis/Api';\r\n\r\n\r\nexport interface Props {\r\n    URL: string,\r\n    valuesFilter?: any;\r\n}\r\n\r\nexport interface RequestResult {\r\n    requestResult: TableProps<any>,\r\n    isLoading: boolean;\r\n    filterRequest: PaginationQuery;\r\n    setFilterRequest: (values: PaginationQuery) => void\r\n    reflesh: () => void;\r\n\r\n}\r\n\r\nexport interface PaginationQuery {\r\n    pageSize: number;\r\n    currentPage: number;\r\n    filter?: string\r\n}\r\n\r\nexport function UseListPagined(props: Props): RequestResult {\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [filterRequest, setFilterRequest] = useState<PaginationQuery>({ pageSize: 10, currentPage: 1 })\r\n    const [responseBack, setResponseBack] = useState<TableProps<any>>(\r\n        {\r\n            current: 0,\r\n            pageSize: 0,\r\n            total: 0,\r\n            dataSource: []\r\n        }\r\n    );\r\n\r\n    function getDataBack() {\r\n        setIsLoading(true);\r\n        api.post(props.URL, { ...filterRequest, ...props.valuesFilter })\r\n            .then(response => {\r\n                setResponseBack({\r\n                    current: response.data.currentPage,\r\n                    pageSize: response.data.pageSize,\r\n                    total: response.data.totalItem,\r\n                    dataSource: response.data.result\r\n                });\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataBack();\r\n        console.error(\"Fui pro back\")\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.URL, filterRequest, props.valuesFilter])\r\n\r\n\r\n    let result = {\r\n        requestResult: responseBack,\r\n        isLoading,\r\n        filterRequest,\r\n        setFilterRequest,\r\n        reflesh: getDataBack\r\n    };\r\n    return result;\r\n}","import React, {  } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirPais } from '../../../../apis/Cidades/PaisApi';\r\n\r\nconst ListPais: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/pais/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Pais',\r\n            dataIndex: 'nome',\r\n            // key: 'pais',\r\n        },\r\n        {\r\n            title: 'Sigla',\r\n            dataIndex: 'sigla',\r\n            // key: 'sigla',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Pais\", URL: \"/pais\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirPais}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListPais);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(FormMode.SelectOne)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n}\r\n\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n        \r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okText=\"Selecionar\">\r\n                <RouterServiceModel path={props.path} setState={props.setState} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    ObjectName?: string;\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.ObjectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.ObjectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error ? \"error\" : \"validating\"}\r\n                help={meta.error ?? \"\"}>\r\n                <Row>\r\n                    <Col span={3}>\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber value={meta.value} onChange={helpers.setValue} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={19}>\r\n                        <ItemFormRender showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={2} style={{ textAlign: \"right\" }} >\r\n                        <ItemFormRender showLabel={showLabel}>\r\n                            <Button type=\"primary\" shape=\"circle\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as Yup from 'yup';\r\nimport { Estado } from './../../../../models/Cidades/Estado';\r\n\r\n\r\nexport const EstadoSchema = Yup.object().shape<Estado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Estado não pode ser vaziu.'),\r\n\r\n    uf: Yup.string()\r\n        .max(5, \"O campo [UF] não deve possuir mais de 5 caracteres.\")\r\n        .required('[UF] do Estado não pode ser vaziu.'),\r\n\r\n    paisId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Pais é obrigatório'),\r\n});","import { AxiosResponse } from 'axios'\r\nimport api from '../Api';\r\nimport { Estado } from '../../models/Cidades/Estado';\r\n\r\nexport const endPoint: string = 'api/Estado';\r\n\r\n\r\nexport function SaveEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, estado);\r\n}\r\n\r\nexport function UpdateEstado(estado: Estado): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, estado);\r\n}\r\n\r\nexport function GetEstadoById(id: number): Promise<AxiosResponse<Estado>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirEstado(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Estado } from '../../../../models/Cidades/Estado';\r\nimport { EstadoSchema } from './EstadoSchema';\r\nimport { UpdateEstado, SaveEstado, GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { GetPaisById } from '../../../../apis/Cidades/PaisApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterEstado: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [estado, setEstado] = useState<Estado>({ nome: \"\", uf: \"\", paisId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getEstado(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Estado, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateEstado(values);\r\n            } else {\r\n                await SaveEstado(values);\r\n            }\r\n\r\n            props.history.push(\"/Estado\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getEstado(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdpais = await GetEstadoById(id);\r\n        setEstado(bdpais.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/estado\"\r\n            breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Novo Estado\", URL: undefined }]}\r\n            initialValues={estado}\r\n            validationSchema={EstadoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Estado\" placeholder=\"Estado\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"uf\" label=\"UF\" placeholder=\"UF\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetPaisById}\r\n                        name=\"paisId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Pais\", label: \"Pais\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Pais!\" }}\r\n                        path=\"pais\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterEstado;\r\n","import React from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirEstado } from '../../../../apis/Cidades/EstadoApi';\r\n\r\nconst ListEstado: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Estado/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'UF',\r\n            dataIndex: 'uf',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Estado\", URL: \"/Estado\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirEstado}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListEstado;\r\n","import api from '../Api';\r\nimport { Cidade } from '../../models/Cidades/Cidade';\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nexport function SaveCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, cidade);\r\n}\r\n\r\nexport function UpdateCidade(cidade: Cidade): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, cidade);\r\n}\r\n\r\nexport function GetCidadeById(id: number): Promise<AxiosResponse<Cidade>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCidade(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirCidade } from '../../../../apis/Cidades/CidadeApi';\r\n\r\nconst ListCidade: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/Cidade/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Cidade',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'DDD',\r\n            dataIndex: 'ddd',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Cidade\", URL: \"/cidade\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCidade}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCidade;\r\n","import * as Yup from 'yup';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\n\r\n\r\nexport const CidadeSchema = Yup.object().shape<Cidade>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] da Cidade não pode ser vaziu.'),\r\n\r\n    ddd: Yup.string()\r\n        .max(5, \"O campo [DDD] não deve possuir mais de 5 caracteres.\")\r\n        .required('[DDD] do Cidade não pode ser vaziu.'),\r\n\r\n    estadoId: Yup.number()\r\n        .nullable()\r\n        .typeError(\"Id inválido\")\r\n        .required('O campo Estado é obrigatório'),\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Cidade } from '../../../../models/Cidades/Cidade';\r\nimport { UpdateCidade, SaveCidade, GetCidadeById } from '../../../../apis/Cidades/CidadeApi';\r\nimport { GetEstadoById } from '../../../../apis/Cidades/EstadoApi';\r\nimport { CidadeSchema } from './CidadeSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst CreateCidade: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [cidade, setCidade] = useState<Cidade>({ nome: \"\", ddd: \"\", estadoId: undefined })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCidade(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Cidade, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCidade(values);\r\n            } else {\r\n                await SaveCidade(values);\r\n            }\r\n\r\n            props.history.push(\"/Cidade\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getCidade(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetCidadeById(id);\r\n        setCidade(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/cidade\"\r\n            breadcrumbList={[{ displayName: \"Cidade\", URL: \"/Cidade\" }, { displayName: \"Novo Cidade\", URL: undefined }]}\r\n            initialValues={cidade}\r\n            validationSchema={CidadeSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Cidade\" placeholder=\"Cidade\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Input name=\"ddd\" label=\"DDD\" placeholder=\"DDD\" required />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <SelectModel\r\n                        fetchMethod={GetEstadoById}\r\n                        name=\"estadoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Estado\", label: \"Estado\" }}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Estado!\" }}\r\n                        path=\"estado\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCidade;\r\n","import React from 'react';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\n\r\nconst ListUser: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/User/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Usuário',\r\n            dataIndex: 'userName',\r\n            key: 'userName',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'phoneNumber',\r\n            key: 'phoneNumber',\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Usuários\", URL: \"/User\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                columns={columns} />\r\n\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListUser;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport LoginUserModel from '../../models/Users/LoginUser';\r\nimport AuthenticatedUser from '../../models/Users/AuthenticatedUser';\r\nimport UserModel from '../../models/Users/UserModel';\r\nimport UserChangePasswordModel from '../../models/Users/UserChangePasswordModel';\r\n\r\nexport const endPoint: string = 'api/user';\r\n\r\n\r\nexport function tryLoginUser(user: LoginUserModel): Promise<AxiosResponse<AuthenticatedUser>> {\r\n    return api.post(endPoint + \"/authorize\", user);\r\n}\r\n\r\nexport function UpdateUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, user);\r\n}\r\n\r\nexport function ChangePasswordUser(user: UserChangePasswordModel): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint + \"/Change-Password\", user);\r\n}\r\n\r\n\r\nexport function SaveUser(user: UserModel): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, user);\r\n}\r\n\r\n\r\nexport function GetUserById(id: number): Promise<AxiosResponse<UserModel>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n","import * as Yup from 'yup';\r\nimport UserModel from '../../../models/Users/UserModel';\r\nimport { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport UserChangePasswordModel from '../../../models/Users/UserChangePasswordModel';\r\n\r\n\r\nexport const UserSchema = (formMode: FormMode) => Yup.object().shape<UserModel>({\r\n\r\n    userName: Yup\r\n        .string()\r\n        .required(\"Informe o nome do usuário.\"),\r\n\r\n    phoneNumber: Yup\r\n        .string()\r\n        .nullable()\r\n        .required(\"Informe o número de telefone.\"),\r\n\r\n    email: Yup\r\n        .string()\r\n        .email(\"Informe um email válido.\")\r\n        .required(\"Informe o email.\"),\r\n\r\n    password: Yup\r\n        .string()\r\n        .required(() => formMode === FormMode.New ? \"Informe uma senha.\" : undefined),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required((e) => formMode === FormMode.New ? \"Informe uma senha.\" : undefined)\r\n});\r\n\r\nexport const UserChangePasswor = Yup.object().shape<UserChangePasswordModel>({\r\n\r\n    currentPassword: Yup\r\n        .string()\r\n        .required(\"Informe a senha atual.\"),\r\n\r\n    newPassword: Yup\r\n        .string()\r\n        .required(\"Informe a nova senha.\"),\r\n\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword'), null], \"Senha e Confirmar senha não coincidem.\")\r\n        .required(\"Informe a nova senha.\")\r\n});","import React, { useContext } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Icon, Tabs } from 'antd';\r\nimport \"./RegisterUserStyle.css\"\r\nimport RegisterUserGeneral from './Components/RegisterUserGeneral';\r\nimport BasicLayoutContext, { FormMode } from '../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport ChangePassword from './Components/ChangePassword';\r\n\r\nenum Menus {\r\n    Profile = \"Profile\",\r\n    changePassword = \"changePassword\"\r\n}\r\n\r\nconst RegisterUser: React.FC<RouteComponentProps & RouteComponentProps<any>> = () => {\r\n\r\n    const { TabPane } = Tabs;\r\n    const { formMode } = useContext(BasicLayoutContext)\r\n    \r\n    return (\r\n        <Tabs defaultActiveKey={Menus.Profile} >\r\n            <TabPane tab={<><Icon type=\"user\" />Informações basicas</>} key={Menus.Profile}>\r\n                <RegisterUserGeneral />\r\n            </TabPane>\r\n\r\n            <TabPane disabled={formMode === FormMode.New}\r\n                tab={<><Icon type=\"key\" />Trocar de senha</>}\r\n                key={Menus.changePassword}>\r\n                <ChangePassword />\r\n            </TabPane>\r\n        </Tabs>\r\n    );\r\n\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport UserModel from '../../../../models/Users/UserModel';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { GetUserById, UpdateUser, SaveUser } from '../../../../apis/Users/UserApi';\r\nimport BasicLayoutContext, { FormMode } from '../../../../layouts/BasicLayout/BasicLayoutContext';\r\nimport { UserSchema } from './../UserSchema';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst RegisterUserGeneral: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [userModel, setUserModel] = useState<UserModel>({ userName: \"\", email: \"\", phoneNumber: \"\", password: \"\", confirmPassword: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n    const { formMode } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n        getUser(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n    async function getUser(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetUserById(id);\r\n            setUserModel(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    async function onSubmit(values: UserModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateUser(values);\r\n            } else {\r\n                await SaveUser(values);\r\n            }\r\n            props.history.push(\"/user\")\r\n        }\r\n        \r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n            <CrudFormLayout\r\n                isLoading={loading}\r\n                backPath=\"/user\"\r\n                breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n                initialValues={userModel}\r\n                validationSchema={UserSchema(formMode)}\r\n                onSubmit={(onSubmit)}\r\n            >\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"userName\" label=\"Nome\" placeholder=\"Nome\" required />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Input name=\"phoneNumber\" label=\"Telefone\" placeholder=\"(45) 9882932328\" required />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"email\" label=\"E-mail\" placeholder=\"joao@gmai.com\" required type=\"email\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row hidden={!(formMode === FormMode.New)}>\r\n                    <Col span={12}>\r\n                        <Input name=\"password\" label=\"Senha\" required type=\"password\" />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(RegisterUserGeneral);\r\n","import React, { useState } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Row, Col } from 'antd';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport { ChangePasswordUser } from '../../../../apis/Users/UserApi';\r\nimport { FormikHelpers } from 'formik';\r\nimport UserChangePasswordModel from '../../../../models/Users/UserChangePasswordModel';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { UserChangePasswor } from '../UserSchema';\r\n\r\nconst ChangePassword: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function onSubmit(values: UserChangePasswordModel, formikHelpers: FormikHelpers<any>) {\r\n\r\n\r\n        try {\r\n            setLoading(true);\r\n            await ChangePasswordUser(values);\r\n            props.history.push(\"/user\")\r\n        }\r\n        catch (e) {\r\n            errorBack(formikHelpers, e, [\"passwordMismatch\"]);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            initialErrors={{ password: \"Senha deve conter no minimo 6 caracteres.\" }}\r\n            backPath=\"/user\"\r\n            breadcrumbList={[{ displayName: \"Usuários\", URL: \"/user\" }, { displayName: \"Novo Usuario\", URL: undefined }]}\r\n            initialValues={{ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\", password: \"\" }}\r\n            validationSchema={UserChangePasswor}\r\n            onSubmit={(onSubmit)}\r\n        >\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"currentPassword\" label=\"Senha Atual\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"newPassword\" label=\"Nova Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={12}>\r\n                    <Input name=\"confirmPassword\" label=\"Confirmar Senha\" required type=\"password\" />\r\n                </Col>\r\n            </Row>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Titular } from '../../models/Associados/Titular';\r\n\r\nexport const endPoint: string = 'api/associados';\r\n\r\n\r\nexport function SaveTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, titular);\r\n}\r\n\r\nexport function UpdateTitular(titular: Titular): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, titular);\r\n}\r\n\r\nexport function GetTitularById(id: number): Promise<AxiosResponse<Titular>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirTitular(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import * as Yup from 'yup';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport { Associado } from '../../../models/Associados/Associado';\r\n\r\n\r\nexport const TitularSchema = Yup.object().shape<Titular>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n    cpf: Yup.string()\r\n        .max(50, \"O campo [CPF] não deve possuir mais de 20 caracteres.\")\r\n        .required('[CPF] do Dependente não pode ser vaziu.'),\r\n});\r\n\r\nexport const AssociadoSchema = Yup.object().shape<Associado>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Titular não pode ser vaziu.'),\r\n\r\n    rg: Yup.string()\r\n        .max(50, \"O campo [RG] não deve possuir mais de 20 caracteres.\")\r\n        .required('[RG] do Dependente não pode ser vaziu.'),\r\n\r\n});","import React, {  } from 'react';\r\nimport { Row, Col, Modal } from 'antd';\r\nimport { Formik, FormikHelpers, FormikProps } from 'formik';\r\nimport { Input, DatePicker } from '../../../../components/WithFormItem/withFormItem';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport { AssociadoSchema } from '../TitularSchema';\r\n\r\nexport interface Porps {\r\n    showModal: boolean,\r\n    onCancel: () => void;\r\n    onSave: (item: Associado) => void;\r\n}\r\n\r\nconst CreateAssociado: React.FC<Porps> = (props) => {\r\n\r\n    const { showModal, onSave, onCancel } = props;\r\n    const associadoDefault: Associado = {\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n    };\r\n\r\n    function onSaveForm(values: Associado, formikHelpers: FormikHelpers<Associado>) {\r\n        onSave(values);\r\n        formikHelpers.resetForm();\r\n    }\r\n\r\n    function onCancelForm(props: FormikProps<Associado>) {\r\n        props.resetForm();\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={associadoDefault}\r\n            enableReinitialize={true}\r\n            validationSchema={AssociadoSchema}\r\n            onSubmit={onSaveForm}>\r\n            {props => (\r\n                <Modal\r\n                    title=\"Cadastro de Dependente\"\r\n                    width={800}\r\n                    visible={showModal}\r\n                    destroyOnClose={true}\r\n\r\n                    okText=\"Salvar\"\r\n                    onOk={props.submitForm}\r\n\r\n                    onCancel={() => onCancelForm(props)}\r\n                >\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input name=\"id\" label=\"Id\" readOnly />\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Modal >\r\n            )}\r\n        </Formik >\r\n    );\r\n\r\n}\r\n\r\nexport default CreateAssociado;\r\n","import React, { useState } from 'react';\r\nimport { Button, Table, Tooltip, Tag } from 'antd';\r\nimport { FieldArray, FieldArrayRenderProps, useFormikContext } from 'formik';\r\nimport { Associado } from '../../../../models/Associados/Associado';\r\nimport CreateAssociado from './CreateAssociado';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { Titular } from './../../../../models/Associados/Titular';\r\n\r\nexport interface Porps {\r\n}\r\n\r\nconst Dependente: React.FC<Porps> = () => {\r\n\r\n    const columns: ColumnProps<Associado>[] = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Data Nascimento',\r\n            dataIndex: 'dataNascimento',\r\n        },\r\n        {\r\n            title: \"Ação\",\r\n            width: \"90px\",\r\n            render: (text: any, record: Associado, index: number) => {\r\n\r\n                return (\r\n                    <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                        <Tag color=\"red\" key={index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => onRemoveAssocido(index)} >Remover</Tag>\r\n                    </Tooltip>)\r\n                    ;\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formik = useFormikContext<Titular>();\r\n\r\n\r\n    function onSaveAssociado(value: Associado, field: FieldArrayRenderProps) {\r\n        field.insert(0, value);\r\n        closeModalAssociado();\r\n    }\r\n\r\n    function onRemoveAssocido(indexEvent: number) {\r\n        let dependentes = formik.values.dependentes?.filter((record, indexRow) => indexRow !== indexEvent);\r\n\r\n        formik.setFieldValue(\"dependentes\", dependentes)\r\n    }\r\n\r\n    function closeModalAssociado() {\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flex: 1,\r\n                justifyContent: \"flex-end\"\r\n            }}>\r\n                <Button type=\"primary\" onClick={() => setShowModal(true)} >Adicionar dependente</Button>\r\n            </div>\r\n\r\n            <Table\r\n                columns={columns}\r\n                bordered\r\n                size=\"small\"\r\n                dataSource={formik.values.dependentes || []}\r\n                rowKey={(record: any, index: number) => index.toString()} />\r\n\r\n            <FieldArray\r\n                name=\"dependentes\"\r\n                render={arrayHelpers => (\r\n                    <CreateAssociado\r\n                        showModal={showModal}\r\n                        onCancel={() => setShowModal(false)}\r\n                        onSave={(item) => onSaveAssociado(item, arrayHelpers)}\r\n                    />\r\n                )} />\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dependente;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\nimport CrudFormLayout from '../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { UpdateTitular, SaveTitular, GetTitularById } from '../../../apis/Associados/AssociadoApi';\r\nimport { TitularSchema } from './TitularSchema';\r\nimport { Input, DatePicker } from '../../../components/WithFormItem/withFormItem';\r\nimport { Titular } from '../../../models/Associados/Titular';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport Dependente from './Components/Dependente';\r\n\r\nconst CreateTitular: React.FC<RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [titular, setTitular] = useState<Titular>({\r\n        nome: \"\",\r\n        rg: \"\",\r\n        telefone: \"\",\r\n        cpf: \"\",\r\n        email: \"\",\r\n        cep: \"\",\r\n        bairro: \"\",\r\n        endereco: \"\",\r\n        numero: \"\",\r\n\r\n        dependentes: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getTitular(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: Titular, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateTitular(values);\r\n            } else {\r\n                await SaveTitular(values);\r\n            }\r\n\r\n            props.history.push(\"/Titular\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getTitular(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetTitularById(id);\r\n            setTitular(bdestado.data);\r\n        }\r\n        finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/titular\"\r\n            breadcrumbList={[{ displayName: \"Titular\", URL: \"/Titular\" }, { displayName: \"Novo Titular\", URL: undefined }]}\r\n            initialValues={titular}\r\n            validationSchema={TitularSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Id\" readOnly />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"nome\" label=\"Nome\" placeholder=\"João\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"cpf\" label=\"CPF\" placeholder=\"000.000.000-00\" required />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Input name=\"rg\" label=\"Rg\" placeholder=\"0.000.000.0\" required />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data de Nascimento\" placeholder=\"10/10/2010\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"São João\" />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"av. das coisas\" />\r\n                </Col>\r\n                <Col span={2}>\r\n                    <Input name=\"numero\" label=\"Numero\" placeholder=\"011\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Divider dashed >Dependentes</Divider>\r\n\r\n            <Dependente />\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateTitular;\r\n","import React, { } from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { UseListPagined } from '../../../hoc/UseListPagined';\r\nimport { ExcluirTitular } from './../../../apis/Associados/AssociadoApi';\r\nimport ListForm from '../../../components/ListForm/ListForm';\r\nimport FormLayout from '../../../layouts/FormBasicLayout/FormBasicLayout';\r\n\r\nconst ListTitular: React.FC<RouteComponentProps> = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/associados/list\" });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'CPF',\r\n            dataIndex: 'cpf',\r\n        },\r\n        {\r\n            title: 'RG',\r\n            dataIndex: 'rg',\r\n        },\r\n        {\r\n            title: 'Telefone',\r\n            dataIndex: 'telefone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Bairro',\r\n            dataIndex: 'bairro',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Associados\", URL: \"/associados\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirTitular}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(ListTitular);\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { FormaPagamento } from '../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/forma-pagamento';\r\n\r\nexport function SaveFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, formapagamento);\r\n}\r\n\r\nexport function UpdateFormaPagamento(formapagamento: FormaPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, formapagamento);\r\n}\r\n\r\nexport function GetFormaPagamentoById(id: number): Promise<AxiosResponse<FormaPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirFormaPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { ExcluirFormaPagamento } from '../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamento } from './../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\n\r\nconst ListFormaPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/forma-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<FormaPagamento>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Forma de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirFormaPagamento}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListFormaPagamento;\r\n","import * as Yup from 'yup';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const FormaPagamentoSchema = Yup.object().shape<FormaPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('Nome da Forma de Pagamento não pode ser vaziu.')\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { Input } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { UpdateFormaPagamento, SaveFormaPagamento, GetFormaPagamentoById } from '../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamentoSchema } from './FormaPagamentoSchema';\r\n\r\nconst CreateFormaPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [formapagamento, setFormaPagamento] = useState<FormaPagamento>({ nome: \"\" })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFormaPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: FormaPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateFormaPagamento(values);\r\n            } else {\r\n                await SaveFormaPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/forma-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\"]);\r\n        }\r\n    }\r\n\r\n    async function getFormaPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let bdestado = await GetFormaPagamentoById(id);\r\n        setFormaPagamento(bdestado.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/forma-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Forma de Pagamento\", URL: \"/forma-pagamento\" }, { displayName: \"Nova Forma de Pagamento\", URL: undefined }]}\r\n            initialValues={formapagamento}\r\n            validationSchema={FormaPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Input name=\"nome\" label=\"Forma de Pagamento\" placeholder=\"Dinheiro\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateFormaPagamento;\r\n","import api from '../Api';\r\nimport { AxiosResponse } from 'axios';\r\nimport { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\n\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nexport function SaveCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.post(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function UpdateCondicaoPagamento(condicaopagamento: CondicaoPagamento): Promise<AxiosResponse<any>> {\r\n    return api.put(endPoint, condicaopagamento);\r\n}\r\n\r\nexport function GetCondicaoPagamentoById(id: number): Promise<AxiosResponse<CondicaoPagamento>> {\r\n    return api.get(`${endPoint}/${id.toString()}`);\r\n}\r\n\r\nexport function ExcluirCondicaoPagamento(id: number): Promise<AxiosResponse<any>> {\r\n    return api.delete(`${endPoint}/${id.toString()}`);\r\n}","import React, { } from 'react';\r\nimport FormLayout from '../../../../layouts/FormBasicLayout/FormBasicLayout';\r\nimport ListForm from '../../../../components/ListForm/ListForm';\r\nimport { UseListPagined } from '../../../../hoc/UseListPagined';\r\nimport { CondicaoPagamento } from './../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { ExcluirCondicaoPagamento } from '../../../../apis/CondicaoPagamento/CondicaoPagamento';\r\n\r\nconst ListCondicaoPagamento: React.FC = () => {\r\n\r\n    const response = UseListPagined({ URL: \"/api/condicao-pagamento/list\" });\r\n\r\n    const columns: ColumnProps<CondicaoPagamento>[] = [\r\n        {\r\n            title: 'Codigo',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: \"100px\"\r\n        },\r\n        {\r\n            title: 'Condição de Pagamento',\r\n            dataIndex: 'nome',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    return (\r\n        <FormLayout breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Listagem\", URL: undefined }]} >\r\n\r\n            <ListForm\r\n                tableProps={response}\r\n                deleteFunction={ExcluirCondicaoPagamento}\r\n                columns={columns} />\r\n\r\n        </FormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default ListCondicaoPagamento;\r\n","import React, { memo } from 'react';\r\nimport { Table, Form } from 'antd';\r\nimport { ColumnProps, TableComponents } from 'antd/lib/table';\r\nimport EditableFormRow from './Components/EditableFormRow';\r\nimport EditableCell from './Components/EditableCell';\r\nimport { useField } from 'formik';\r\nimport EditableCellAction from './Components/EditableCellAction';\r\nimport \"./editable-table-style.css\"\r\nimport EditableRowFooter from './Components/EditableRowFooter';\r\n\r\nexport enum RowMode {\r\n    edit = \"edit\",\r\n    new = 'new',\r\n    remove = 'remove',\r\n    view = 'view'\r\n}\r\n\r\nexport enum TypeAttribute {\r\n    number = \"number\",\r\n    text = \"text\"\r\n}\r\n\r\nexport interface ColumnEditableProps<T> extends ColumnProps<T> {\r\n    editable?: boolean;\r\n    renderEditable?: (text: any, record: T, index: number) => React.ReactNode;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nexport interface Props<T> {\r\n    columns: ColumnEditableProps<T>[];\r\n    rowKey?: string;\r\n    initiallValues: T;\r\n    name: string;\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nexport interface Record {\r\n    rowMode: RowMode\r\n    tableKey: string;\r\n}\r\n\r\nconst EditableTable: React.FC<Props<any>> = (props) => {\r\n\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const rowKey = props.rowKey ?? \"id\";\r\n    const dataSource = mapRecord(field.value as any[]);\r\n\r\n    const components: TableComponents = {\r\n        body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n        },\r\n    };\r\n\r\n    const errorStyle: React.CSSProperties = {\r\n        borderWidth: \"1px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"red\",\r\n        borderRadius: \"5px\",\r\n    }\r\n\r\n    const hasListError = !Array.isArray(meta.error) && (meta.error?.length ?? \"\") > 2;\r\n\r\n    const columnsAction = props.columns.concat({\r\n        key: \"Action\",\r\n        title: \"Ações\",\r\n        width: \"180px\",\r\n        render: (text: any, record: Record, index: number) => <EditableCellAction index={index} record={record} handleRowMode={handleRowMode} handleRemove={handleRemove} />\r\n    });\r\n\r\n    const columns: ColumnProps<any>[] = columnsAction.map((col: ColumnEditableProps<any>) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: (record: Record, rowIndex: number) => ({\r\n                record,\r\n                editable: col.editable ?? false,\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                renderEditable: col.renderEditable,\r\n                type: col.type ?? TypeAttribute.text,\r\n                rowIndex: rowIndex\r\n            }),\r\n        };\r\n    });\r\n\r\n    function handleSave(values: Record & any) {\r\n\r\n        const dataSourceNew = dataSource.map(e => e.tableKey !== values.tableKey ? e : { ...values, rowMode: RowMode.view });\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRemove(values: Record & any) {\r\n\r\n        const dataSourceNew = dataSource.filter(e => e.tableKey !== values.tableKey);\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRowMode(record: Record & any, rowMode: RowMode) {\r\n\r\n        const dataSourceNew = dataSource.map(e => e.tableKey !== record.tableKey ? e : { ...record, rowMode });\r\n        helpers.setValue(dataSourceNew);\r\n    }\r\n\r\n    function handleRowNew() {\r\n\r\n        let mapedDataSource = mapRecord(dataSource.concat({ ...props.initiallValues, rowMode: RowMode.new }));\r\n        helpers.setValue(mapedDataSource);\r\n    }\r\n\r\n    function mapRecord(dataSource: Record[]): Record[] {\r\n        return (dataSource || []).map((e) => {\r\n            return { ...e, rowMode: e.rowMode ?? RowMode.view, tableKey: e.tableKey ?? (e as any)[rowKey] ?? Date.now() }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                style={hasListError ? errorStyle : {}}\r\n                components={components}\r\n                bordered\r\n                dataSource={dataSource}\r\n                columns={columns}\r\n                rowKey=\"tableKey\"\r\n                size=\"small\"\r\n                onRow={(record: any, index: any) => ({\r\n                    index,\r\n                    record,\r\n                    initiallValues: props.initiallValues,\r\n                    handleSave: handleSave,\r\n                    validationSchema: props.validationSchema\r\n                })}\r\n                pagination={{}}\r\n                footer={() => <EditableRowFooter onNewRow={handleRowNew} />}\r\n            />\r\n\r\n            <Form.Item\r\n                validateStatus=\"error\"\r\n                help={hasListError ? meta.error : \"\"}\r\n            >\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(EditableTable);\r\n","import * as Yup from 'yup';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoParcela } from './../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\n\r\n\r\nexport const CondicaoPagamentoParcelaSchema = Yup.object().shape<CondicaoPagamentoParcela>({\r\n    numeroDias: Yup.number()\r\n        .required(\"Informe o número de dias.\")\r\n        .min(0, \"O número de dias deve ser maior que 0.\"),\r\n    percentual: Yup.number()\r\n        .required(\"Informe o percentual.\")\r\n        .min(0, \"O percentual deve ser maior que 0.\")\r\n        .max(100, \"O percentual não pode ser maior que 100.\"),\r\n    formaPagamento: Yup.object().shape<FormaPagamento>({ id: Yup.number().required(\"Informe uma Dondição de Pagamento.\")})\r\n});\r\n\r\n\r\n\r\nexport const CondicaoPagamentoSchema = Yup.object().shape<CondicaoPagamento>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo Nome não deve possuir mais de 50 caracteres.\")\r\n        .required('O campo Condição de Pagamento não pode ser vazio.'),\r\n    juro: Yup.number().required(\"Informe um número válido.\").typeError(\"Informe um número válido.\").min(0, \"O valor não pode ser menor que 0.\"),\r\n    multa: Yup.number().required(\"Informe um número válido.\").typeError(\"Informe um número válido.\").min(0, \"O valor não pode ser menor que 0.\"),\r\n    desconto: Yup.number().required(\"Informe um número válido.\").typeError(\"Informe um número válido.\").min(0, \"O valor não pode ser menor que 0.\"),\r\n    parcela: Yup.array().of(CondicaoPagamentoParcelaSchema).min(1, \"Informe ao menos uma parcela.\")\r\n});\r\n","import React, { memo } from 'react';\r\nimport { Record, RowMode } from './../EditableTable'\r\nimport { Formik, FormikHelpers } from 'formik';\r\n\r\nexport interface Props {\r\n    record: Record\r\n    initiallValues: Record,\r\n    handleSave: (values: Record, formikHelpers: FormikHelpers<Record>) => void,\r\n    validationSchema?: any | (() => any);\r\n}\r\n\r\nconst EditableFormRow: React.FC<Props> = (props) => {\r\n\r\n    const { record, initiallValues, handleSave, validationSchema, ...restProps } = props\r\n\r\n    if (record.rowMode === RowMode.view) {\r\n        return (\r\n            <tr {...restProps} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            initialValues={record}\r\n            enableReinitialize={true}\r\n            onSubmit={handleSave}>\r\n            <tr {...restProps} />\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default memo(EditableFormRow);\r\n","import React, { memo } from 'react';\r\nimport { Record, RowMode, TypeAttribute } from './../EditableTable'\r\nimport { Input, InputNumber } from '../../WithFormItem/withFormItem';\r\nimport { isFunction } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: Record & any;\r\n    editable: boolean;\r\n    dataIndex: string;\r\n    title: string;\r\n    renderEditable?: (text: any, record: any, index: number) => React.ReactNode;\r\n    rowIndex: number;\r\n    type?: TypeAttribute;\r\n}\r\n\r\nconst EditableCell: React.FC<Props> = (props) => {\r\n\r\n\r\n    if (props.record === undefined || props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <td> {props.children} </td>\r\n        );\r\n    }\r\n\r\n    if (isFunction(props.renderEditable)) {\r\n        return (\r\n            <td>\r\n                {props.renderEditable(props.record[props.dataIndex], props.record, props.rowIndex)}\r\n            </td>\r\n        );\r\n    }\r\n\r\n    if (props.type === TypeAttribute.number) {\r\n        return (\r\n            <td>\r\n                <InputNumber label=\"\" name={props.dataIndex} decimalSeparator=\",\"></InputNumber>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <td>\r\n            <Input label=\"\" name={props.dataIndex}></Input>\r\n        </td>\r\n    );\r\n}\r\n\r\nexport default memo(EditableCell);\r\n","import React, { memo } from 'react';\r\nimport { Record, RowMode } from './../EditableTable'\r\nimport { Tooltip, Tag } from 'antd';\r\nimport { useFormikContext } from 'formik';\r\n\r\n\r\nexport interface Props {\r\n    record: Record;\r\n    index: number;\r\n    handleRowMode: (record: Record, rowMode: RowMode) => void;\r\n    handleRemove: (record: Record) => void;\r\n}\r\n\r\nconst EditableCellAction: React.FC<Props> = (props) => {\r\n\r\n    const { submitForm, errors } = useFormikContext();\r\n\r\n    console.log(\"errors\", errors)\r\n\r\n    function handleCancel(record: Record) {\r\n        if (record.rowMode === RowMode.new) {\r\n            props.handleRemove(record);\r\n            return;\r\n        }\r\n\r\n        props.handleRowMode(record, RowMode.view)\r\n    }\r\n\r\n    if (props.record.rowMode === RowMode.view) {\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Editar Registro Selecionado.\"  >\r\n                    <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRowMode(props.record, RowMode.edit)} >Editar</Tag>\r\n                </Tooltip>\r\n                <Tooltip placement=\"top\" title=\"Remove Registro Selecionado.\"  >\r\n                    <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => props.handleRemove(props.record)} >Remover</Tag>\r\n                </Tooltip>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip placement=\"top\" title=\"Cancela Edição do Registro Selecionado.\"  >\r\n                <Tag color=\"red\" key={props.index + \"13\"} className=\"custom-cursor-pointer\" onClick={() => handleCancel(props.record)}>Cancelar</Tag>\r\n            </Tooltip>\r\n            <Tooltip placement=\"top\" title=\"Salva Registro Selecionado.\"  >\r\n                <Tag color=\"green\" key={props.index + \"12\"} className=\"custom-cursor-pointer\" onClick={() => submitForm()} >Salvar</Tag>\r\n            </Tooltip>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (EditableCellAction);\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nexport interface Props {\r\n    onNewRow: () => void;\r\n}\r\n\r\nconst EditableRowFooter: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <div className=\"footer-action-editable-table\">\r\n            <Button type=\"primary\" icon=\"plus-circle\" onClick={() => props.onNewRow()}>Adicionar</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (EditableRowFooter);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Divider } from 'antd';\r\nimport { Input, InputNumber } from '../../../../components/WithFormItem/withFormItem';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FormikHelpers } from 'formik';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\nimport { CondicaoPagamento } from '../../../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { UpdateCondicaoPagamento, SaveCondicaoPagamento, GetCondicaoPagamentoById } from '../../../../apis/CondicaoPagamento/CondicaoPagamento';\r\nimport { CondicaoPagamentoSchema, CondicaoPagamentoParcelaSchema } from './CondicaoPagamentoSchema';\r\nimport EditableTable, { ColumnEditableProps, TypeAttribute } from '../../../../components/EditableTable/EditableTable';\r\nimport SelectModel from '../../../../components/SelectModel/SelectModelOne';\r\nimport { GetFormaPagamentoById } from '../../../../apis/CondicaoPagamento/FormaPagamento';\r\nimport { FormaPagamento } from '../../../../models/CondicaoPagamento/FormaPagamento';\r\nimport { CondicaoPagamentoParcela } from '../../../../models/CondicaoPagamento/CondicaoPagamentoParcela';\r\n\r\nconst CreateCondicaoPagamento: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [condicaopagamento, setCondicaoPagamento] = useState<CondicaoPagamento>({\r\n        nome: \"\",\r\n        juro: 0,\r\n        multa: 0,\r\n        desconto: 0,\r\n        parcela: [\r\n\r\n        ]\r\n    })\r\n\r\n    const columns: ColumnEditableProps<CondicaoPagamento>[] = [\r\n        { dataIndex: \"id\", title: \"id\" },\r\n        { dataIndex: \"numeroDias\", title: \"Número de Dias\", editable: true, type: TypeAttribute.number },\r\n        { dataIndex: \"percentual\", title: \"Percentual\", editable: true, type: TypeAttribute.number },\r\n        {\r\n            dataIndex: \"formaPagamento\", title: \"Forma de Pagamento\", editable: true,\r\n            render: (text: FormaPagamento) => {\r\n                return text?.nome;\r\n            },\r\n            renderEditable:\r\n                () => {\r\n                    return <SelectModel\r\n                        fetchMethod={GetFormaPagamentoById}\r\n                        name=\"formaPagamento.id\"\r\n                        ObjectName=\"formaPagamento\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        showLabel={false}\r\n                        label={{ title: \"Seleção de Forma de Pagamento\", label: \"\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Forma de Pagamento!\" }}\r\n                        path=\"forma-pagamento\" />\r\n                },\r\n        }\r\n    ];\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getCondicaoPagamento(props.match.params.id);\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit(values: CondicaoPagamento, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            if (props.match.params.id) {\r\n                await UpdateCondicaoPagamento(values);\r\n            } else {\r\n                await SaveCondicaoPagamento(values);\r\n            }\r\n\r\n            props.history.push(\"/condicao-pagamento\")\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e, [\"nome\", \"parcela\"]);\r\n        }\r\n    }\r\n\r\n    async function getCondicaoPagamento(id: number) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            let bdestado = await GetCondicaoPagamentoById(id);\r\n            setCondicaoPagamento({ ...condicaopagamento, ...bdestado.data });\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/condicao-pagamento\"\r\n            breadcrumbList={[{ displayName: \"Condição de Pagamento\", URL: \"/condicao-pagamento\" }, { displayName: \"Nova Condição de Pagamento\", URL: undefined }]}\r\n            initialValues={condicaopagamento}\r\n            validationSchema={CondicaoPagamentoSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            {(formik) => (\r\n                <>\r\n                    <Row>\r\n                        <Col span={2}>\r\n                            <Input name=\"id\" label=\"Codigo\" placeholder=\"Codigo\" readOnly />\r\n                        </Col>\r\n                        <Col span={13}>\r\n                            <Input name=\"nome\" label=\"Condição de Pagamento\" placeholder=\"30/60/90\" required />\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <InputNumber name=\"multa\" label=\"Multa\" placeholder=\"0\" required />\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <InputNumber name=\"juro\" label=\"Juro\" placeholder=\"0\" required />\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <InputNumber name=\"desconto\" label=\"Desconto\" placeholder=\"0\" required />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Divider>Parcelas</Divider>\r\n                            <EditableTable columns={columns}\r\n                                initiallValues={{\r\n                                    numeroDias: undefined,\r\n                                    percentual: Math.round((100 - ((formik.values.parcela as CondicaoPagamentoParcela[]) ?? []).reduce((e, a) => e + a.percentual, 0)) * 100) / 100,\r\n                                    formaPagamento: undefined\r\n                                }}\r\n                                name=\"parcela\"\r\n                                validationSchema={CondicaoPagamentoParcelaSchema}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateCondicaoPagamento;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport RegisterPais from '../../../pages/Cidades/Pais/RegisterPais/RegisterPais';\r\nimport ListPais from '../../../pages/Cidades/Pais/ListPais/ListPais';\r\nimport RegisterEstado from '../../../pages/Cidades/Estado/RegisterEstado/RegisterEstado';\r\nimport ListEstado from '../../../pages/Cidades/Estado/ListEstado/ListEstado';\r\nimport ListCidade from '../../../pages/Cidades/Cidade/ListCidade/ListCidade';\r\nimport CreateCidade from '../../../pages/Cidades/Cidade/CreateCidade/CreateCidade';\r\nimport ListUser from '../../../pages/Users/ListUser/ListUser';\r\nimport RegisterUser from '../../../pages/Users/RegisterUser/RegisterUser';\r\nimport CreateTitular from '../../../pages/Associados/CreateTitular/CreateTitular';\r\nimport ListTitular from '../../../pages/Associados/ListTitular/ListTitular';\r\nimport ListFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/ListFormaPagamento/ListFormaPagamento';\r\nimport CreateFormaPagamento from '../../../pages/CondicaoPagamento/FormaPagamento/CreateFormaPagamento/CreateFormaPagamento';\r\nimport ListCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/ListCondicaoPagamento/ListCondicaoPagamento';\r\nimport CreateCondicaoPagamento from '../../../pages/CondicaoPagamento/CondicaoPagamento/CreateCondicaoPagamento/CreateCondicaoPagamento';\r\n\r\nconst RoutePath: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Route path=\"/pais/new\" component={RegisterPais} />\r\n            <Route path=\"/pais/edit/:id\" component={RegisterPais} />\r\n            <Route exact path=\"/pais\" component={ListPais} />\r\n\r\n            <Route path=\"/estado/new\" component={RegisterEstado} />\r\n            <Route path=\"/estado/edit/:id\" component={RegisterEstado} />\r\n            <Route exact path=\"/estado\" component={ListEstado} />\r\n\r\n            <Route path=\"/cidade/new\" component={CreateCidade} />\r\n            <Route path=\"/cidade/edit/:id\" component={CreateCidade} />\r\n            <Route exact path=\"/cidade\" component={ListCidade} />\r\n\r\n\r\n            <Route exact path=\"/user/new\" component={RegisterUser} />\r\n            <Route exact path=\"/user/edit/:id\" component={RegisterUser} />\r\n            <Route exact path=\"/user\" component={ListUser} />\r\n\r\n            <Route exact path=\"/titular/new\" component={CreateTitular} />\r\n            <Route exact path=\"/titular/edit/:id\" component={CreateTitular} />\r\n            <Route exact path=\"/titular\" component={ListTitular} />\r\n            \r\n            <Route exact path=\"/forma-pagamento/new\" component={CreateFormaPagamento} />\r\n            <Route exact path=\"/forma-pagamento/edit/:id\" component={CreateFormaPagamento} />\r\n            <Route exact path=\"/forma-pagamento\" component={ListFormaPagamento} />\r\n\r\n            <Route exact path=\"/condicao-pagamento/new\" component={CreateCondicaoPagamento} />\r\n            <Route exact path=\"/condicao-pagamento/edit/:id\" component={CreateCondicaoPagamento} />\r\n            <Route exact path=\"/condicao-pagamento\" component={ListCondicaoPagamento} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoutePath;\r\n","import * as Yup from 'yup';\r\nimport LoginUserModel from '../../../models/Users/LoginUser';\r\n\r\n\r\nexport const LoginUserSchema = Yup.object().shape<LoginUserModel>({\r\n    userName: Yup.string().required(\"Infrome o login.\"),\r\n    password: Yup.string().required(\"Infrome a senha.\"),\r\n});","import React, { } from 'react';\r\nimport { Form, Icon, Button, Card, Row, Col } from 'antd';\r\nimport { Input, FormItem } from \"formik-antd\"\r\nimport \"./LoginUserStyle.css\"\r\nimport { Formik, FormikHelpers } from 'formik';\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { LoginUserSchema } from './LoginUserSchema';\r\nimport { tryLoginUser } from '../../../apis/Users/UserApi';\r\nimport { message } from 'antd';\r\nimport { login, getUserName } from '../../../services/Authenticate';\r\nimport { errorBack } from '../../../utils/MessageApi';\r\n\r\nconst LoginUser: React.FC<RouteComponentProps> = (props) => {\r\n\r\n    const history = props.history;\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let redirectUrl = params.get('redirectUrl');\r\n\r\n    async function handleSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n\r\n        try {\r\n\r\n            let response = await tryLoginUser(values);\r\n            login(response.data);\r\n            message.success(`Bem vindo ${getUserName()}!!!`);\r\n            history.push(redirectUrl || \"/\");\r\n\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={handleSubmit}\r\n            initialValues={{ userName: \"\", password: \"\" }}\r\n            validationSchema={LoginUserSchema}\r\n            enableReinitialize={true}>\r\n            {({ submitForm }) => (\r\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: \"100%\" }}>\r\n                    <Col xs={24} sm={20} md={15} lg={12} xl={6} xxl={6}>\r\n                        <Card title=\"Credenciais do sistema\" className=\"ant-card-ant-card-bordered\">\r\n                            <Form className=\"login-form\">\r\n\r\n                                <FormItem name=\"userName\" required={true} className=\"form-custom-item-form\" >\r\n                                    <Input\r\n                                        autoFocus\r\n                                        tabIndex={1}\r\n                                        autoComplete=\"on\"\r\n                                        name=\"userName\"\r\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        placeholder=\"Usuario\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <FormItem name=\"password\" required={true} className=\"form-custom-item-form\">\r\n                                    <Input\r\n                                        tabIndex={2}\r\n                                        name=\"password\"\r\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                        type=\"password\"\r\n                                        placeholder=\"Senha\"\r\n                                    />\r\n                                </FormItem>\r\n\r\n                                <Form.Item className=\"forget-password-item-form\">\r\n                                    <Link to=\"forget-password\" className=\"login-form-forgot\" > Esqueci a senha</Link>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item className=\"form-custom-item-footer\">\r\n                                    <Button type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() => submitForm()}\r\n                                        style={{ width: \"100%\" }}\r\n                                        tabIndex={2}\r\n                                    >\r\n                                        Logar\r\n                                        </Button>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginUser);","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route, Router } from 'react-router-dom';\r\nimport BasicLayout from '../../layouts/BasicLayout/BasicLayout';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport LoginUser from '../../pages/Users/Login/LoginUser';\r\nimport { history } from './routing'\r\n\r\nconst RouterService: React.FC = () => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>((localStorage.getItem(\"formMode\") || FormMode.New) as FormMode)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"formMode\", formMode.toString())\r\n    }, [formMode])\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch  >\r\n                <Route exact path=\"/login\" component={LoginUser} />\r\n\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n                    <BasicLayout>\r\n                        <RoutePath />\r\n                    </BasicLayout>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default RouterService;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport RouterService from './services/RouterService/RouterService';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <RouterService>\r\n      \r\n    </RouterService>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"antd/es/input\"\r\nimport 'formik-antd/es/input/style';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}