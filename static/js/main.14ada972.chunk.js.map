{"version":3,"sources":["components/formikContainer/FormikContainer.tsx","components/camera/CameraFoto.jsx","view/createNewExpense/CreateNewExpenseStyle.tsx","layout/HeaderContext.ts","view/createNewExpense/componets/GetImage.tsx","view/createNewExpense/componets/NewExpense.tsx","view/createNewExpense/CreateNewExpense.tsx","components/sidebar/component/Header.tsx","components/sidebar/component/SiderDrawer.tsx","components/sidebar/SidebarStyle.tsx","components/sidebar/Sidebar.tsx","view/dashBoard/DashBoard.tsx","layout/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FormikContainer","props","initialValues","onSubmit","validationSchema","render","renderProps","Zoom","in","style","transitionDelay","children","CameraFoto","useState","load","setLoad","paddingBottom","paddingTop","position","width","textAlign","CircularProgress","fontSize","onTakePhoto","dataUri","onCameraError","idealFacingMode","FACING_MODES","ENVIRONMENT","imageType","IMAGE_TYPES","JPG","imageCompression","isImageMirror","isSilentMode","isDisplayStartCameraError","isFullscreen","sizeFactor","onCameraStart","setTimeout","onCameraStop","ImageConteiner","styled","figure","Image","img","FigCaptionLegend","figcaption","HeaderContext","React","createContext","headerVisible","setHeaderVisible","HeaderProvider","Provider","Consumer","GetImage","cameraVisible","setCameraVisible","uriImage","setUriImage","useContext","useEffect","console","log","className","transform","transformOrigin","src","Cached","color","onClick","connect","showPosition","location","longitude","coords","latitude","formik","setFieldValue","navigator","geolocation","getCurrentPosition","values","Grid","container","direction","justify","item","xs","name","label","type","component","TextField","margin","fullWidth","defaulValue","urlImage","amount","undefined","expense","Yup","email","required","locationDesciption","Header","AppBar","clsx","classes","appBar","appBarShift","open","Toolbar","IconButton","aria-label","handleDrawerOpen","edge","menuButton","hide","Typography","variant","noWrap","withRouter","theme","useTheme","MenuOption","text","icon","url","Drawer","display","drawer","drawerOpen","drawerClose","paper","toolbar","handleDrawerClose","Divider","List","map","index","ListItem","button","key","history","push","ListItemIcon","ListItemText","primary","useStyles","makeStyles","breakpoints","down","createStyles","root","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","up","alignItems","justifyContent","padding","mixins","content","paddingLeft","paddingRight","hidden","visibility","opacity","show","Sidebar","setOpen","DashBoard","lg","Card","CardHeader","red","A700","title","subheader","CardContent","pink","CardActions","Button","size","purple","blue","Fab","bottom","right","Home","value","path","CreateNewExpense","exact","App","utils","DateFnsUtils","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Notification","requestPermission"],"mappings":"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","file":"static/js/main.14ada972.chunk.js","sourcesContent":["import React, { } from \"react\";\r\nimport { Formik, FormikConfig, Form } from \"formik\";\r\nimport { Zoom } from \"@material-ui/core\";\r\n\r\ninterface Props extends FormikConfig<any> {\r\n    children?: JSX.Element[] | JSX.Element\r\n}\r\n\r\nexport const FormikContainer: React.SFC<Props> = (props) => {\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={props.initialValues}\r\n            onSubmit={props.onSubmit}\r\n            validationSchema={props.validationSchema}\r\n            render={(renderProps) => {\r\n                return (\r\n                    <Zoom in={true} style={{ transitionDelay: '5ms' }}>\r\n                        <Form>\r\n                            {props.children}\r\n                        </Form>\r\n                    </Zoom>\r\n                )\r\n            }} />\r\n    );\r\n}\r\n\r\nexport default FormikContainer;\r\n\r\n// validationSchema\r\n// initialValues\r\n// onSubmit","import React from 'react';\r\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { setTimeout } from 'timers';\r\n\r\n//https://www.npmjs.com/package/react-html5-camera-photo\r\n// export class CameraFoto extends Component {\r\nexport const CameraFoto = (props) => {\r\n\r\n  const [load, setLoad] = useState(true)\r\n\r\n  function onTakePhoto(dataUri) {\r\n    setLoad(true);\r\n\r\n    if (props.onTakePhoto) {\r\n      props.onTakePhoto(dataUri);\r\n    }\r\n  }\r\n\r\n  function onCameraError() {\r\n    setLoad(false);\r\n\r\n    if (props.onCameraError) {\r\n      props.onCameraError();\r\n    }\r\n  }\r\n\r\n  function onCameraStart() {\r\n\r\n    setTimeout(() => {\r\n      setLoad(false);\r\n    }, 300);\r\n\r\n  }\r\n\r\n  function onCameraStop() {\r\n    setLoad(true);\r\n  }\r\n\r\n\r\n  function renderLoadCamera() {\r\n    return (\r\n      load ?\r\n        <div style={{ paddingBottom: \"300px\" }}>\r\n          <div style={{ paddingTop: \"200px\", position: \"absolute\", width: \"100%\", textAlign: \"center\" }}>\r\n\r\n            <CircularProgress style={{ fontSize: \"24px\" }} />\r\n            <p style={{ fontSize: \"24px\" }} >AGUARDE!!</p>\r\n\r\n          </div>\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* position: static|absolute|fixed|relative|sticky|initial|inherit; */}\r\n      {renderLoadCamera()}\r\n      <div >\r\n        <Camera\r\n          onTakePhoto={onTakePhoto}\r\n          onCameraError={onCameraError}\r\n          idealFacingMode={FACING_MODES.ENVIRONMENT}\r\n          // idealResolution = {{height: 1080, width: 1920 }}\r\n          imageType={IMAGE_TYPES.JPG}\r\n          imageCompression={1}\r\n          // isMaxResolution={false}\r\n          isImageMirror={false}\r\n          isSilentMode={true}\r\n          isDisplayStartCameraError={true}\r\n          isFullscreen={true}\r\n          sizeFactor={1}\r\n          onCameraStart={onCameraStart}\r\n          onCameraStop={onCameraStop}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default CameraFoto;","import styled from \"styled-components\";\r\n\r\nexport const ImageConteiner = styled.figure`\r\n    position: relative;\r\n    margin: 0;\r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid;\r\n`\r\n\r\nexport const FigCaptionLegend = styled.figcaption`\r\n    position: absolute;\r\n    top: 90%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n`","import React from 'react'\r\n\r\nexport interface HeaderContextProp {\r\n    headerVisible: boolean;\r\n    setHeaderVisible: (value: boolean) => void;\r\n}\r\n\r\nconst HeaderContext = React.createContext<HeaderContextProp>({ headerVisible: true, setHeaderVisible: () => { } });\r\n\r\nexport const HeaderProvider = HeaderContext.Provider\r\nexport const HeaderConsumer = HeaderContext.Consumer\r\n\r\nexport default HeaderContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useState, useContext, useEffect } from \"react\";\r\nimport CameraFoto from \"../../../components/camera/CameraFoto\";\r\nimport { ImageConteiner, FigCaptionLegend, Image } from \"../CreateNewExpenseStyle\";\r\nimport { Cached } from '@material-ui/icons';\r\nimport HeaderContext, { HeaderContextProp } from \"../../../layout/HeaderContext\";\r\nimport { Zoom } from \"@material-ui/core\";\r\n\r\nexport const GetImage: React.SFC<{}> = () => {\r\n\r\n    const [cameraVisible, setCameraVisible] = useState<boolean>(true)\r\n    const [uriImage, setUriImage] = useState<string>(\"\");\r\n    const { headerVisible, setHeaderVisible } = useContext<HeaderContextProp>(HeaderContext)\r\n\r\n    useEffect(() => {\r\n        setHeaderVisible(false);\r\n\r\n        return () => {\r\n            setHeaderVisible(true);\r\n        };\r\n    }, [])\r\n\r\n    function onTakePhoto(dataUri: string) {\r\n        setCameraVisible(false);\r\n        setUriImage(dataUri);\r\n        setHeaderVisible(true);\r\n    }\r\n\r\n    function onCameraError() {\r\n        setCameraVisible(false);\r\n        setHeaderVisible(true)\r\n        console.log(\"Deu Errrorororororoororrooro\")\r\n    }\r\n\r\n    // style={{width:\"52px\", height:\"52px\" }} viewBox=\"0 0 24 24\" onClick={() => alert(\"Oi\")}\r\n    // <path fill=\"#000000\" d=\"M2 12C2 16.97 6.03 21 11 21C13.39 21 15.68 20.06 17.4 18.4L15.9 16.9C14.63 18.25 12.86 19 11 19C4.76 19 1.64 11.46 6.05 7.05C10.46 2.64 18 5.77 18 12H15L19 16H19.1L23 12H20C20 7.03 15.97 3 11 3C6.03 3 2 7.03 2 12Z\" />\r\n    function renderImageOptions() {\r\n        return (\r\n            <Cached color=\"error\" style={{ fontSize: \"50px\" }} onClick={() => {\r\n                setCameraVisible(true);\r\n                setHeaderVisible(false)\r\n            }} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        cameraVisible ?\r\n            <CameraFoto onTakePhoto={onTakePhoto} onCameraError={onCameraError} />\r\n            :\r\n            <Zoom in={true}>\r\n                <ImageConteiner>\r\n                    <label className=\"MuiFormLabel-root MuiInputLabel-root \" style={{\r\n                        transform: \"translate(0, 1.5px) scale(0.75)\",\r\n                        transformOrigin: \"top left\",\r\n                    }} >Nota</label>\r\n                    <Image src={uriImage} ></Image>\r\n                    <FigCaptionLegend >\r\n                        {renderImageOptions()}\r\n                    </FigCaptionLegend >\r\n\r\n                </ImageConteiner>\r\n            </Zoom>\r\n    );\r\n}\r\n\r\nexport default GetImage;","import React, { useEffect } from \"react\";\r\nimport { Field, connect, FormikContext } from \"formik\";\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport GetImage from \"./GetImage\";\r\nimport { Location } from './../../../models/Expense';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport TextFielda from '@material-ui/core/TextField';\r\n\r\ninterface Props {\r\n    formik: FormikContext<any>;\r\n}\r\n\r\nexport const NewExpense: React.SFC<Props> = (props) => {\r\n\r\n\r\n    function getLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            console.log(\"Geo Location not supported by browser\");\r\n        }\r\n    }\r\n    //function that retrieves the position\r\n    function showPosition(position: any) {\r\n        let location: Location = {\r\n            longitude: position.coords.longitude,\r\n            latitude: position.coords.latitude\r\n        };\r\n\r\n        props.formik.setFieldValue(\"location\", location);\r\n    }\r\n\r\n    getLocation();\r\n\r\n    const handleDateChange = (date: Date | null) => {\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.formik.setFieldValue(\"locationDesciption\", props.formik.values.location.latitude + \" \" + props.formik.values.location.longitude);\r\n\r\n    }, [props.formik.values.location])\r\n\r\n    const DatePickerField = ({ field, form, ...other }: any) => {\r\n        const currentError = form.errors[field.name];\r\n\r\n        return (\r\n            <KeyboardDatePicker\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                name={field.name}\r\n                value={field.value}\r\n                format=\"dd/MM/yyyy\"\r\n                helperText={currentError}\r\n                error={Boolean(currentError)}\r\n                onError={error => {\r\n                    // handle as a side effect\r\n                    if (error !== currentError) {\r\n                        form.setFieldError(field.name, error);\r\n                    }\r\n                }}\r\n                // if you are using custom validation schema you probably want to pass `true` as third argument\r\n                onChange={date => form.setFieldValue(field.name, date, false)}\r\n                {...other}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid container direction=\"row\" justify=\"flex-start\" >\r\n\r\n            <Grid item xs={12}>\r\n\r\n                <GetImage />\r\n                \r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    name=\"valorTotal\"\r\n                    label=\"Valor Total\"\r\n                    type=\"text\"\r\n                    component={TextField}\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    name=\"locationDesciption\"\r\n                    label=\"Localização\"\r\n                    type=\"text\"\r\n                    component={TextField}\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n\r\n            </Grid>\r\n\r\n\r\n            {/* <Grid item xs={12}>\r\n                <Field\r\n                    name=\"date\"\r\n                    label=\"Data\"\r\n                    component={DatePickerField}\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n\r\n            </Grid> */}\r\n\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default connect<{}, {}>(NewExpense);","import React, { useState } from \"react\";\r\nimport { connect } from \"formik\";\r\nimport * as Yup from \"yup\"\r\nimport FormikContainer from \"../../components/formikContainer/FormikContainer\";\r\nimport NewExpense from \"./componets/NewExpense\";\r\nimport { Expense } from \"../../models/Expense\";\r\n\r\n\r\nexport const CreateNewExpense: React.SFC<{}> = () => {\r\n\r\n    const defaulValue: Expense = { urlImage: \"\", amount: undefined, location: { latitude: 0, longitude: 0 } }\r\n\r\n    const [expense, setExpense] = useState<Expense>(defaulValue)\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string()\r\n            .required(\"Name is required, sqn\")\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <FormikContainer\r\n            validationSchema={validationSchema}\r\n            initialValues={{ ...expense, locationDesciption: \"\" }}\r\n            onSubmit={() => { }}\r\n        >\r\n            <NewExpense />\r\n\r\n        </FormikContainer >\r\n    );\r\n}\r\n\r\nexport default connect(CreateNewExpense);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\ninterface Props {\r\n    classes: any;\r\n    open: any;\r\n    handleDrawerOpen: () => void;\r\n}\r\n\r\nexport const Header: React.SFC<Props> = (props) => {\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(props.classes.appBar, {\r\n                [props.classes.appBarShift]: props.open,\r\n            })}>\r\n\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(props.classes.menuButton, {\r\n                        [props.classes.hide]: props.open,\r\n                    })}\r\n                >\r\n\r\n                    <MenuIcon />\r\n\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Gestão da Casa v1.2\r\n                    </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Divider, ListItem, ListItemIcon, ListItemText, List } from \"@material-ui/core\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n    classes: any;\r\n    open: boolean;\r\n    handleDrawerClose: () => void;\r\n}\r\n\r\ninterface MenuOption {\r\n    text: string,\r\n    icon: JSX.Element,\r\n    url: string;\r\n}\r\n\r\nexport const SiderDrawer: React.SFC<Props> = (props) => {\r\n\r\n    const theme = useTheme();\r\n    const MenuOption: MenuOption[] = [{ text: \"Home\", icon: <InboxIcon />, url: \"DashBoard\" }, { text: \"Novo Gasto\", icon: <MailIcon />, url: \"CreateNewExpense\" }];\r\n\r\n\r\n    return (\r\n        <Drawer style={{ display: \"contents\" }}\r\n            variant=\"permanent\"\r\n            className={clsx(props.classes.drawer, {\r\n                [props.classes.drawerOpen]: props.open,\r\n                [props.classes.drawerClose]: !props.open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [props.classes.drawerOpen]: props.open,\r\n                    [props.classes.drawerClose]: !props.open,\r\n                }),\r\n            }}\r\n            open={props.open}>\r\n\r\n            <div className={props.classes.toolbar}>\r\n                <IconButton onClick={props.handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <List>\r\n                {MenuOption.map((item, index) => (\r\n                    <ListItem button key={index} onClick={() => { props.history.push(item.url); props.handleDrawerClose() }} >\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </Drawer>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(SiderDrawer);","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 300;\r\n\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => {\r\n    console.log(\"asdasdlsda\", theme.breakpoints.down('sm'));\r\n    return createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: 0,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            // flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n            width: \"100%\",\r\n            paddingTop: theme.spacing(9) + 4,\r\n            paddingLeft: theme.spacing(9) + 8,\r\n            paddingRight: \"10px\",\r\n            paddingBottom: \"10px\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: \"8px\",\r\n            },\r\n            margin: \"10px\",\r\n        },\r\n\r\n        transition: { transition: \"transform 3000ms;\" },\r\n\r\n        hidden: {\r\n            visibility: \"hidden\",\r\n            opacity: 0,\r\n            transition: \"visibility 0s, opacity 0.5s linear\",\r\n        },\r\n\r\n        show: {\r\n            transition: \"visibility 0s, opacity 0.5s linear\",\r\n        }\r\n    })\r\n}\r\n);","import React, { useContext } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Header } from './component/Header';\r\nimport SiderDrawer from './component/SiderDrawer';\r\nimport { useStyles } from './SidebarStyle';\r\nimport HeaderContext, { HeaderContextProp } from '../../layout/HeaderContext';\r\nimport Button from '@material-ui/core/Button';\r\n\r\ninterface Props {\r\n  children?: JSX.Element[] | JSX.Element\r\n}\r\n\r\n// export default function Sidebar() {\r\nexport const Sidebar: React.SFC<Props> = (props) => {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const { headerVisible, setHeaderVisible } = useContext<HeaderContextProp>(HeaderContext)\r\n\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n\r\n      <div className={headerVisible ? classes.show : classes.hidden}>\r\n\r\n        <Header classes={classes} handleDrawerOpen={handleDrawerOpen} open={open} />\r\n        <SiderDrawer classes={classes} open={open} handleDrawerClose={handleDrawerClose} />\r\n\r\n      </div>\r\n\r\n\r\n      <div className={headerVisible ? classes.content : classes.show}>\r\n        {props.children}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","import { Grid, Card, CardContent, CardActions, Button, CardHeader, Fab } from \"@material-ui/core\";\r\nimport { red, purple, pink, blue } from '@material-ui/core/colors';\r\nimport React from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\r\n\r\nexport const DashBoard: React.SFC<{}> = () => {\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: red.A700 }}\r\n                            title=\"Gasto Total do Mês\"\r\n                            subheader=\"30/01/3019\"\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[900] }}  >R$ 500,00</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: blue.A700 }}\r\n                            title=\"Meus Gastos do Mês\"\r\n                            subheader=\"30/01/3019\"\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[500] }}  >R$ 500,00</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid><Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: red.A700 }}\r\n                            title=\"Gasto Total do Mês\"\r\n                            subheader=\"30/01/3019\"\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[900] }}  >R$ 500,00</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: blue.A700 }}\r\n                            title=\"Meus Gastos do Mês\"\r\n                            subheader=\"30/01/3019\"\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[500] }}  >R$ 500,00</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n\r\n                <Fab aria-label={\"fab.label\"} style={{\r\n                    position: 'fixed',\r\n                    bottom: \"20px\",\r\n                    right: \"20px\",\r\n                }}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashBoard;","import * as React from 'react';\r\nimport CreateNewExpense from '../view/createNewExpense/CreateNewExpense';\r\nimport { Sidebar } from '../components/sidebar/Sidebar';\r\nimport DashBoard from '../view/dashBoard/DashBoard';\r\nimport { HeaderProvider } from './HeaderContext';\r\nimport { useState } from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nexport const Home: React.SFC<{}> = () => {\r\n\r\n    const [headerVisible, setHeaderVisible] = useState<boolean>(true);\r\n\r\n    return (\r\n        <>\r\n            <BrowserRouter >\r\n                <Switch >\r\n                    <HeaderProvider value={{ headerVisible: headerVisible, setHeaderVisible: setHeaderVisible }}>\r\n                        <Sidebar >\r\n        \r\n                            <Route path=\"/CreateNewExpense\" component={CreateNewExpense} />\r\n                            <Route path=\"/DashBoard\" component={DashBoard} />\r\n                            <Route path=\"/\" exact component={DashBoard} />\r\n\r\n                        </Sidebar>\r\n                    </HeaderProvider>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport { Home } from './layout/Home';\nimport DateFnsUtils from '@date-io/date-fns'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <body>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Home></Home>\n        </MuiPickersUtilsProvider>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        \n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  console.log(\"Iniciando SW\")\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n\n        \n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n// Notification.requestPermission().then(function (result) {\n//     console.log(result);\n// });\n\n\n// Notification.s\n\n// function notifyMe() {\n//     var i = 0;\n//     // Using an interval cause some browsers (including Firefox) are blocking notifications if there are too much in a certain time.\n//     var interval = window.setInterval(function () {\n//       // Thanks to the tag, we should only see the \"Hi! 9\" notification \n//       var n = new Notification(\"Hi! \" + i, {tag: 'soManyNotification'});\n//       if (i++ == 9) {\n//         window.clearInterval(interval);\n//       }\n//     }, 200);\n// }\n\n// notifyMe();\n\nserviceWorker.register();\n\nNotification.requestPermission(function (status) {\n    console.log('Notification permission status:', status);\n});\n\n// function showNotification() {\n//     Notification.requestPermission(function (result) {\n//         if (result === 'granted') {\n//             navigator.serviceWorker.ready.then(function (registration) {\n//                 registration.showNotification('Vibration Sample', {\n//                     body: 'Buzz! Buzz!',\n//                     icon: '../images/touch/chrome-touch-icon-192x192.png',\n//                     vibrate: [200, 100, 200, 100, 200, 100, 200],\n//                     tag: 'vibration-sample'\n//                 });\n//             });\n//         }\n//     });\n// }\n\n// setTimeout(() => {\n//     if (Notification.permission == 'granted') {\n//       navigator.serviceWorker.getRegistration().then(function (registration1) {\n//         var options = {\n//           body: 'Here is a notification body!',\n//           icon: 'images/example.png',\n//           vibrate: [100, 50, 100],\n//           data: {\n//             dateOfArrival: Date.now(),\n//             primaryKey: 1\n//           }\n//         };\n//         if (registration1) {\n//           registration1.showNotification('Hello world!', options);\n//         }\n//       });\n//     }\n\n//   }, 5000);\n\n// showNotification();"],"sourceRoot":""}