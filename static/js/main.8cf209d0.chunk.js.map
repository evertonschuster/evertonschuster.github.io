{"version":3,"sources":["layout/HeaderContext.ts","components/formikContainer/FormikContainer.tsx","components/camera/CameraFoto.jsx","view/createNewExpense/CreateNewExpenseStyle.tsx","view/createNewExpense/components/GetImage.tsx","view/createNewExpense/components/NewExpense.tsx","services/Authenticate.ts","apis/Api.ts","apis/ExpenseApi.ts","view/createNewExpense/CreateNewExpense.tsx","components/sidebar/component/Header.tsx","components/sidebar/component/SiderDrawer.tsx","components/sidebar/SidebarStyle.tsx","components/sidebar/Sidebar.tsx","apis/DashbardApi.ts","view/dashBoard/DashBoard.tsx","components/camera/QrCode.jsx","view/createNewExpenseQrCode/components/ListExpenseNota.tsx","view/createNewExpenseQrCode/createNewExpenseQrCode.tsx","view/login/components/Login.tsx","apis/UsersApi.ts","view/login/LoginContainer.tsx","layout/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderContext","React","createContext","headerVisible","setHeaderVisible","formLoading","setFormLoading","HeaderProvider","Provider","Consumer","FormikContainer","props","useContext","useState","state","setState","renderMessage","renderProps","submitCount","Object","keys","errors","map","key","undefined","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent","style","backgroundColor","red","aria-describedby","message","id","display","alignItems","ErrorOutline","paddingRight","action","IconButton","aria-label","color","onClick","hideMessage","Close","initialValues","onSubmit","validationSchema","render","Zoom","in","isSubmitting","children","Grid","item","xs","height","CameraFoto","load","setLoad","paddingBottom","paddingTop","position","width","textAlign","CircularProgress","fontSize","onTakePhoto","dataUri","onCameraError","idealFacingMode","FACING_MODES","ENVIRONMENT","imageType","IMAGE_TYPES","JPG","imageCompression","isImageMirror","isSilentMode","isDisplayStartCameraError","isFullscreen","sizeFactor","onCameraStart","setTimeout","onCameraStop","ImageConteiner","styled","figure","Image","img","FigCaptionLegend","figcaption","connect","cameraVisible","setCameraVisible","zIndex","right","top","formik","setFieldValue","console","log","className","transform","transformOrigin","src","values","urlImage","disabled","Cached","showPosition","location","longitude","coords","latitude","useEffect","navigator","geolocation","getCurrentPosition","container","direction","justify","spacing","name","label","type","component","TextField","margin","fullWidth","validation","disableToolbar","error","dateBuy","helperText","autoOk","variant","value","format","onChange","date","multiline","rows","Button","marginTop","TOKEN_KEY","isAuthenticated","localStorage","getItem","login","token","setItem","removeToken","removeItem","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Authorization","response","originalRequest","status","_retry","window","href","SaveNewExpenseEndPoint","withRouter","defaulValue","amount","description","Date","expense","Yup","shape","nullable","min","required","locationDesciption","formikActions","quantity","post","SaveNewExpense","then","setSubmitting","history","push","catch","e","Header","AppBar","clsx","classes","appBar","appBarShift","LinearProgress","Toolbar","handleDrawerOpen","edge","menuButton","hide","Typography","noWrap","theme","useTheme","MenuOption","text","icon","url","Drawer","drawer","drawerOpen","drawerClose","paper","toolbar","handleDrawerClose","Divider","List","index","ListItem","button","ListItemIcon","ListItemText","primary","useStyles","makeStyles","createStyles","root","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","breakpoints","up","down","justifyContent","padding","mixins","content","paddingLeft","hidden","visibility","opacity","show","Sidebar","setOpen","clientX","setClientX","clientY","setClientY","showHeader","setShowHeader","onTouchMove","event","lastClientX","touches","Math","abs","lasClientY","pageY","onTouchStart","getExpenses","data","get","moment","DashBoard","renderExpense","lg","Card","CardHeader","A700","title","me","subheader","dateUpdate","CardContent","pink","aumont","toFixed","CardActions","size","purple","blue","another","current","aux","JSON","stringify","setMonth","getMonth","before","getBeforeCurrentMonth","stateHelper","parse","renderCurentMonth","to","Fab","bottom","QrCode","delay","onError","err","onScan","listExpense","setListExpense","loading","setLoading","checked","setChecked","checkedAll","setCheckedAll","handleToggle","currentIndex","indexOf","newChecked","splice","length","handleToggleAll","Array","fill","v","i","SaveNewListExpense","filter","includes","alert","uri","GetExpenseWithQRCode","disableShrink","labelId","role","dense","Checkbox","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","CreateNewExpenseQrCode","setUri","Login","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","flexDirection","avatar","palette","secondary","main","form","submit","CssBaseline","sm","md","Paper","elevation","square","Avatar","autoFocus","pathname","user","LoginService","RemoveTokenService","Home","path","exact","LoginContainer","CreateNewExpense","process","App","utils","DateFnsUtils","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","Notification","requestPermission"],"mappings":"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","file":"static/js/main.8cf209d0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport interface HeaderContextProp {\r\n    headerVisible: boolean;\r\n    setHeaderVisible: (value: boolean) => void;\r\n\r\n    formLoading: boolean;\r\n    setFormLoading: (value: boolean) => void;\r\n\r\n}\r\n\r\nconst HeaderContext = React.createContext<HeaderContextProp>(\r\n    {\r\n        headerVisible: true,\r\n        setHeaderVisible: () => { },\r\n\r\n        formLoading: true,\r\n        setFormLoading: () => { },\r\n    }\r\n);\r\n\r\nexport const HeaderProvider = HeaderContext.Provider\r\nexport const HeaderConsumer = HeaderContext.Consumer\r\n\r\nexport default HeaderContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext, useState } from \"react\";\r\nimport { Formik, FormikConfig, Form, FormikProps } from \"formik\";\r\nimport { Zoom, Grid, SnackbarContent, Icon, Snackbar, IconButton } from \"@material-ui/core\";\r\nimport HeaderContext from \"../../layout/HeaderContext\";\r\nimport { Close as CloseIcon, ErrorOutline as ErrorOutlineIcon } from '@material-ui/icons';\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\ninterface Props extends FormikConfig<any> {\r\n    children: JSX.Element[] | JSX.Element\r\n}\r\n\r\nexport const FormikContainer: React.SFC<Props> = (props) => {\r\n\r\n    const { setFormLoading } = useContext(HeaderContext)\r\n    const [state, setState] = useState<any>({})\r\n\r\n\r\n    function hideMessage(key: string) {\r\n        setState({ ...state, [key]: false })\r\n    }\r\n\r\n    function renderMessage(renderProps: FormikProps<any>) {\r\n\r\n\r\n\r\n        // if (renderProps.submitCount > 0 && renderProps.isSubmitting && renderProps.isValidating) {\r\n\r\n        //     console.log(\"Entreii\")\r\n\r\n        //     let tempState = state;\r\n        //     Object.keys(renderProps.errors).map(key => {\r\n        //         return { ...tempState, [key]: true }\r\n        //     });\r\n\r\n        //     setState(tempState)\r\n        // }\r\n\r\n        if (renderProps.submitCount > 0) {\r\n\r\n            return (\r\n                // console.log(renderProps.errors[key])\r\n                Object.keys(renderProps.errors).map(key => {\r\n\r\n                    if (state[key] == undefined) {\r\n                        setState({ ...state, [key]: true })\r\n                    }\r\n\r\n                    return (\r\n                        <Snackbar\r\n                            key={key}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={state[key]}\r\n                            autoHideDuration={6000}\r\n                            \r\n                            onClose={() => { }}\r\n                        >\r\n\r\n                            <SnackbarContent\r\n                                style={{ backgroundColor: red[600] }}\r\n                                aria-describedby=\"client-snackbar\"\r\n                                message={\r\n                                    <span id=\"client-snackbar\" style={{ display: 'flex', alignItems: 'center' }} >\r\n                                        <ErrorOutlineIcon style={{ paddingRight: \"10px\" }} />\r\n                                        {renderProps.errors[key]}\r\n                                    </span>\r\n                                }\r\n                                action={[\r\n                                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={() => { hideMessage(key) }} >\r\n                                        <CloseIcon />\r\n                                    </IconButton>,\r\n                                ]}\r\n                            />\r\n                        </Snackbar>\r\n                    )\r\n                })\r\n\r\n            )\r\n\r\n        }\r\n\r\n        // Object.keys(renderProps.errors).forEach(key => console.log(renderProps.errors[key]))\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={props.initialValues}\r\n            onSubmit={props.onSubmit}\r\n\r\n            validationSchema={props.validationSchema}\r\n            render={(renderProps) => {\r\n                return (\r\n                    <Zoom in={true}>\r\n                        <Form >\r\n\r\n                            {renderMessage(renderProps)}\r\n\r\n                            {setFormLoading(renderProps.isSubmitting)}\r\n\r\n                            {props.children}\r\n\r\n                            <Grid item xs={12}>\r\n                                <div style={{ height: \"300px\" }}>\r\n                                    &nbsp;\r\n                                </div>\r\n                            </Grid>\r\n\r\n                        </Form>\r\n                    </Zoom>\r\n                )\r\n            }} />\r\n    );\r\n}\r\n{/* <div style={{ paddingTop: \"200px\", position: \"absolute\", width: \"100%\", textAlign: \"center\" }}> */ }\r\n\r\n\r\nexport default FormikContainer;\r\n\r\n// validationSchema\r\n// initialValues\r\n// onSubmit","import React from 'react';\r\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { setTimeout } from 'timers';\r\n\r\n//https://www.npmjs.com/package/react-html5-camera-photo\r\n// export class CameraFoto extends Component {\r\nexport const CameraFoto = (props) => {\r\n\r\n  const [load, setLoad] = useState(true)\r\n\r\n  function onTakePhoto(dataUri) {\r\n    setLoad(true);\r\n\r\n    if (props.onTakePhoto) {\r\n      props.onTakePhoto(dataUri);\r\n    }\r\n  }\r\n\r\n  function onCameraError() {\r\n    setLoad(false);\r\n\r\n    if (props.onCameraError) {\r\n      props.onCameraError();\r\n    }\r\n  }\r\n\r\n  function onCameraStart() {\r\n\r\n    setTimeout(() => {\r\n      setLoad(false);\r\n    }, 300);\r\n\r\n  }\r\n\r\n  function onCameraStop() {\r\n    setLoad(true);\r\n  }\r\n\r\n\r\n  function renderLoadCamera() {\r\n    return (\r\n      load ?\r\n        <div style={{ paddingBottom: \"300px\" }}>\r\n          <div style={{ paddingTop: \"200px\", position: \"absolute\", width: \"100%\", textAlign: \"center\" }}>\r\n\r\n            <CircularProgress style={{ fontSize: \"24px\" }} />\r\n            <p style={{ fontSize: \"24px\" }} >AGUARDE!!</p>\r\n\r\n          </div>\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* position: static|absolute|fixed|relative|sticky|initial|inherit; */}\r\n      {renderLoadCamera()}\r\n      <div >\r\n        <Camera\r\n          onTakePhoto={onTakePhoto}\r\n          onCameraError={onCameraError}\r\n          idealFacingMode={FACING_MODES.ENVIRONMENT}\r\n          // idealResolution = {{height: 1080, width: 1920 }}\r\n          imageType={IMAGE_TYPES.JPG}\r\n          imageCompression={1}\r\n          // isMaxResolution={false}\r\n          isImageMirror={false}\r\n          isSilentMode={true}\r\n          isDisplayStartCameraError={true}\r\n          isFullscreen={true}\r\n          sizeFactor={1}\r\n          onCameraStart={onCameraStart}\r\n          onCameraStop={onCameraStop}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default CameraFoto;","import styled from \"styled-components\";\r\n\r\nexport const ImageConteiner = styled.figure`\r\n    position: relative;\r\n    margin: 0;\r\n`\r\n\r\nexport const Image = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid;\r\n`\r\n\r\nexport const FigCaptionLegend = styled.figcaption`\r\n    position: absolute;\r\n    top: 90%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n`","import React, { useState, useContext, useEffect } from \"react\";\r\nimport CameraFoto from \"../../../components/camera/CameraFoto\";\r\nimport { ImageConteiner, FigCaptionLegend, Image } from \"../CreateNewExpenseStyle\";\r\nimport { Cached } from '@material-ui/icons';\r\nimport { Zoom } from \"@material-ui/core\";\r\nimport { connect, FormikContext } from \"formik\";\r\n\r\n\r\ninterface Props {\r\n    disabled: boolean;\r\n}\r\n\r\ninterface FormikPartProps {\r\n    formik: FormikContext<any>;\r\n}\r\n\r\nexport const GetImage: React.SFC<Props & FormikPartProps> = (props) => {\r\n\r\n    const [cameraVisible, setCameraVisible] = useState<boolean>(true)\r\n\r\n    function onTakePhoto(dataUri: string) {\r\n        props.formik.setFieldValue(\"urlImage\", dataUri);\r\n        setCameraVisible(false);\r\n    }\r\n\r\n    function onCameraError() {\r\n        setCameraVisible(false);\r\n        console.log(\"Deu Errrorororororoororrooro\")\r\n    }\r\n\r\n    function renderImageOptions() {\r\n\r\n        if (props.disabled) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Cached color=\"error\" style={{ fontSize: \"50px\" }} onClick={() => {\r\n                setCameraVisible(true);\r\n            }} />\r\n        );\r\n    }\r\n\r\n    if (cameraVisible) {\r\n        return (\r\n            <div style={{ position: \"fixed\", zIndex: 10000, right: 0, top: 0 }} >\r\n                <CameraFoto onTakePhoto={onTakePhoto} onCameraError={onCameraError} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Zoom in={true}>\r\n            <ImageConteiner>\r\n                <label className=\"MuiFormLabel-root MuiInputLabel-root \" style={{\r\n                    transform: \"translate(0, 1.5px) scale(0.75)\",\r\n                    transformOrigin: \"top left\",\r\n                }} >Nota</label>\r\n                <Image src={props.formik.values.urlImage} ></Image>\r\n                <FigCaptionLegend >\r\n                    {renderImageOptions()}\r\n                </FigCaptionLegend >\r\n\r\n            </ImageConteiner>\r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default connect<Props, any>(GetImage);","import React, { useEffect } from \"react\";\r\nimport { Field, connect, FormikContext, FastField } from \"formik\";\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport GetImage from \"./GetImage\";\r\nimport { Location } from '../../../models/Expense';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\ninterface Props {\r\n    formik: FormikContext<any>;\r\n}\r\n\r\nexport const NewExpense: React.SFC<Props> = (props) => {\r\n\r\n\r\n    function getLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            console.log(\"Geo Location not supported by browser\");\r\n        }\r\n    }\r\n\r\n    function showPosition(position: any) {\r\n        let location: Location = {\r\n            longitude: position.coords.longitude,\r\n            latitude: position.coords.latitude\r\n        };\r\n\r\n        props.formik.setFieldValue(\"location\", location);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLocation();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.formik.setFieldValue(\"locationDesciption\", props.formik.values.location.latitude + \" \" + props.formik.values.location.longitude);\r\n\r\n    }, [props.formik.values.location])\r\n\r\n    return (\r\n\r\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={2}>\r\n\r\n            <Grid item xs={12}>\r\n\r\n                <GetImage disabled={props.formik.isSubmitting} />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <FastField\r\n                    name=\"amount\"\r\n                    label=\"Valor Total\"\r\n                    type=\"number\"\r\n                    component={TextField}\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <FastField\r\n                    validation={\"false\"}\r\n                    name=\"locationDesciption\"\r\n                    label=\"Localização\"\r\n                    type=\"text\"\r\n                    component={TextField}\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <KeyboardDatePicker\r\n                    disabled={props.formik.isSubmitting}\r\n                    disableToolbar\r\n                    error={props.formik.errors.dateBuy != undefined}\r\n                    helperText={props.formik.errors.dateBuy}\r\n                    autoOk\r\n                    label=\"Data da compra\"\r\n                    variant=\"inline\"\r\n                    name=\"dateBuy\"\r\n                    value={props.formik.values.dateBuy}\r\n                    format=\"dd/MM/yyyy\"\r\n                    onChange={date => { props.formik.setFieldValue(\"dateBuy\", date) }}\r\n                    fullWidth />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Field\r\n                    name=\"description\"\r\n                    label=\"Descrição\"\r\n                    component={TextField}\r\n                    margin=\"normal\"\r\n                    multiline={true}\r\n                    rows=\"4\"\r\n                    fullWidth />\r\n\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12} container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ marginTop: \"20px\" }} >\r\n                    Salvar\r\n                </Button>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default connect<{}, {}>(NewExpense);\r\n","export const TOKEN_KEY = \"GestaoPessoalToken\";\r\n\r\n// export const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\n\r\nexport function isAuthenticated() {\r\n    return localStorage.getItem(TOKEN_KEY) !== null;\r\n}\r\n\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\n\r\nexport const login = (token: string) => {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n};\r\n\r\nexport const removeToken = () => {\r\n    localStorage.removeItem(TOKEN_KEY);\r\n}","import axios from \"axios\";\r\nimport { getToken, removeToken } from \"../services/Authenticate\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://gestao-da-casa.herokuapp.com/\"\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n    const token = getToken();\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n\r\n\r\n    return config;\r\n});\r\n\r\napi.interceptors.response.use((response) => {\r\n    return response\r\n},\r\n    function (error) {\r\n\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n            \r\n            window.location.href = \"/login\"\r\n            \r\n        }\r\n    }\r\n)\r\n\r\nexport default api;","import axios, { AxiosResponse } from 'axios'\r\nimport { Expense } from '../models/Expense'\r\nimport api from './Api';\r\n\r\nexport const SaveNewExpenseEndPoint: string = 'Api/Expense';\r\n\r\nexport function SaveNewExpense(expense: Expense): Promise<AxiosResponse<Expense>> {\r\n    return api.post(`${SaveNewExpenseEndPoint}`, expense)\r\n}\r\n\r\n\r\nexport function SaveNewListExpense(listExpense: Expense[]): Promise<AxiosResponse<Expense>> {\r\n    return api.post(`${SaveNewExpenseEndPoint}/listExpense`, listExpense)\r\n}\r\n\r\nexport function GetExpenseWithQRCode(uri: String): Promise<AxiosResponse<Expense[]>> {\r\n    return api.post(`${SaveNewExpenseEndPoint}/QrCode`, { uri })\r\n}","import React, { useState } from \"react\";\r\nimport { connect, FormikActions } from \"formik\";\r\nimport * as Yup from \"yup\"\r\nimport FormikContainer from \"../../components/formikContainer/FormikContainer\";\r\nimport NewExpense from \"./components/NewExpense\";\r\nimport { Expense } from \"../../models/Expense\";\r\nimport { SaveNewExpense } from \"../../apis/ExpenseApi\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\n\r\nexport const CreateNewExpense: React.SFC<RouteComponentProps<any>> = (props) => {\r\n\r\n    const defaulValue: Expense = { urlImage: \"\", amount: 0, description: \"\", location: { latitude: 0, longitude: 0 }, dateBuy: new Date() }\r\n\r\n    const [expense, setExpense] = useState<Expense>(defaulValue)\r\n\r\n    const validationSchema = Yup.object().shape<Expense | any>({\r\n        description: Yup.string().nullable(),\r\n        urlImage: Yup.string().nullable(),\r\n        amount: Yup.number().min(1, \"Insira o valor total\").required(\"Insira o valor total\"),\r\n        dateBuy: Yup.date().nullable().required(\"Informe a data\"),\r\n\r\n        locationDesciption: Yup.string().required(\"Localização invalida\")\r\n    })\r\n\r\n    function onSubmit(item: Expense, formikActions: FormikActions<Expense>) {\r\n\r\n        item.quantity = 1;\r\n        SaveNewExpense(item)\r\n            .then(a => {\r\n                formikActions.setSubmitting(false);\r\n                props.history.push(\"/\");\r\n            })\r\n            .catch(e => {\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <FormikContainer\r\n            validationSchema={validationSchema}\r\n            initialValues={{ ...expense, locationDesciption: \"\" }}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <NewExpense />\r\n\r\n        </FormikContainer >\r\n    );\r\n}\r\n\r\nexport default withRouter(CreateNewExpense);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    classes: any;\r\n    open: any;\r\n    handleDrawerOpen: () => void;\r\n    formLoading: boolean;\r\n}\r\n\r\nexport const Header: React.SFC<Props> = (props) => {\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(props.classes.appBar, {\r\n                [props.classes.appBarShift]: props.open,\r\n            })}>\r\n\r\n            {props.formLoading ?\r\n                <LinearProgress color=\"secondary\" />\r\n                :\r\n                null\r\n            }\r\n\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={props.handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(props.classes.menuButton, {\r\n                        [props.classes.hide]: props.open,\r\n                    })}\r\n                >\r\n\r\n                    <MenuIcon />\r\n\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    Gestão da Casa v1.2\r\n                    </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Divider, ListItem, ListItemIcon, ListItemText, List } from \"@material-ui/core\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n    classes: any;\r\n    open: boolean;\r\n    handleDrawerClose: () => void;\r\n}\r\n\r\ninterface MenuOption {\r\n    text: string,\r\n    icon: JSX.Element,\r\n    url: string;\r\n}\r\n\r\nexport const SiderDrawer: React.SFC<Props> = (props) => {\r\n\r\n    const theme = useTheme();\r\n    const MenuOption: MenuOption[] = [\r\n        { text: \"Home\", icon: <InboxIcon />, url: \"DashBoard\" },\r\n        { text: \"Novo Gasto QRCode\", icon: <InboxIcon />, url: \"CreateNewExpenseQrCode\" },\r\n        { text: \"Novo Gasto\", icon: <MailIcon />, url: \"CreateNewExpense\" }];\r\n\r\n\r\n    return (\r\n        <Drawer style={{ display: \"contents\" }}\r\n            variant=\"permanent\"\r\n            className={clsx(props.classes.drawer, {\r\n                [props.classes.drawerOpen]: props.open,\r\n                [props.classes.drawerClose]: !props.open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [props.classes.drawerOpen]: props.open,\r\n                    [props.classes.drawerClose]: !props.open,\r\n                }),\r\n            }}\r\n            open={props.open}>\r\n\r\n            <div className={props.classes.toolbar}>\r\n                <IconButton onClick={props.handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <List>\r\n                {MenuOption.map((item, index) => (\r\n                    <ListItem button key={index} onClick={() => { props.history.push(item.url); props.handleDrawerClose() }} >\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </Drawer>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(SiderDrawer);","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 300;\r\n\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => {\r\n    return createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: 0,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            // flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n            width: \"100%\",\r\n            paddingTop: theme.spacing(9) + 4,\r\n            paddingLeft: theme.spacing(9) + 8,\r\n            paddingRight: \"10px\",\r\n            paddingBottom: \"10px\",\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: \"8px\",\r\n            },\r\n            margin: \"10px\",\r\n        },\r\n\r\n        transition: { transition: \"transform 3000ms;\" },\r\n\r\n        hidden: {\r\n            visibility: \"hidden\",\r\n            opacity: 0,\r\n            transition: \"visibility 0s, opacity 0.5s linear\",\r\n        },\r\n\r\n        show: {\r\n            transition: \"visibility 0s, opacity 0.5s linear\",\r\n        }\r\n    })\r\n}\r\n);","import React, { useContext, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Header } from './component/Header';\r\nimport SiderDrawer from './component/SiderDrawer';\r\nimport { useStyles } from './SidebarStyle';\r\nimport HeaderContext, { HeaderContextProp } from '../../layout/HeaderContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Alert } from 'react-native';\r\nvar prevX = -1;\r\n\r\ninterface Props {\r\n  children?: JSX.Element[] | JSX.Element\r\n}\r\n\r\n// export default function Sidebar() {\r\nexport const Sidebar: React.SFC<Props> = (props) => {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [clientX, setClientX] = useState<number>(0)\r\n  const [clientY, setClientY] = useState<number>(0)\r\n  const [showHeader, setShowHeader] = useState<boolean>(true)\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTouchStart = (event: any) => {\r\n    //Data for open/close menu\r\n    setClientX(event.touches[0].clientX);\r\n\r\n    //visible the header\r\n    setClientY(event.touches[0].clientY);\r\n\r\n\r\n  }\r\n\r\n  const handleTouchMove = (event: any) => {\r\n    //Data for open/close menu\r\n    let lastClientX = event.touches[0].clientX;\r\n    if (Math.abs(lastClientX - clientX) > 100) {\r\n\r\n      if (lastClientX > clientX) {\r\n        setOpen(true);\r\n        setShowHeader(true);\r\n\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    //mudar para o valor do scroll\r\n    //visible the header\r\n    let lasClientY = event.touches[0].clientY;\r\n    if (Math.abs(lasClientY - clientY) > 30) {\r\n      if (lastClientX > clientX) {\r\n        setShowHeader(false);\r\n      } else {\r\n        setShowHeader(true);\r\n      }\r\n    }\r\n\r\n    if (event.touches[0].pageY < 800) {\r\n      setShowHeader(true);\r\n    }\r\n\r\n  }\r\n\r\n  const { headerVisible, setHeaderVisible, formLoading } = useContext<HeaderContextProp>(HeaderContext)\r\n\r\n  return (\r\n\r\n    <div\r\n      className={classes.root}\r\n      onTouchMove={handleTouchMove}\r\n      onTouchStart={handleTouchStart}>\r\n\r\n      {/* <CssBaseline /> */}\r\n\r\n      <div className={headerVisible && showHeader ? classes.show : classes.hidden}>\r\n\r\n        <Header classes={classes} handleDrawerOpen={handleDrawerOpen} open={open} formLoading={formLoading} />\r\n        <SiderDrawer classes={classes} open={open} handleDrawerClose={handleDrawerClose} />\r\n\r\n      </div>\r\n\r\n\r\n      <div className={headerVisible ? classes.content : classes.show}>\r\n        {props.children}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}","import { AxiosResponse } from 'axios'\r\nimport api from './Api';\r\nimport moment from 'moment';\r\n\r\nexport const SaveNewExpenseEndPoint: string = 'api/Dashboard';\r\n\r\n\r\nexport function getExpenses(data: Date): Promise<AxiosResponse<any>> {\r\n    return api.get(`${SaveNewExpenseEndPoint}/${moment(data).format(\"YYYY-MM-DD\")}`)\r\n}\r\n\r\n","import { Grid, Card, CardContent, CardActions, Button, CardHeader, Fab } from \"@material-ui/core\";\r\nimport { red, purple, pink, blue } from '@material-ui/core/colors';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getExpenses } from \"../../apis/DashbardApi\";\r\nimport Moment from 'react-moment';\r\n\r\nexport const DashBoard: React.SFC<{}> = () => {\r\n\r\n    const [state, setState] = useState()\r\n\r\n    useEffect(() => {\r\n        getCurrentMonth();\r\n    }, []);\r\n\r\n    function getBeforeCurrentMonth() {\r\n        let date = new Date();\r\n        date.setMonth(date.getMonth() - 1);\r\n\r\n        getExpenses(date)\r\n            .then(response => {\r\n                setState({ ...state, before: response.data });\r\n            })\r\n    }\r\n\r\n    function getCurrentMonth() {\r\n        getExpenses(new Date())\r\n            .then(response => {\r\n                setState({ current: response.data });\r\n\r\n                let aux = { current: response.data };\r\n                localStorage.setItem(\"DashBoard\", JSON.stringify(aux));\r\n\r\n                getBeforeCurrentMonth();\r\n            })\r\n    }\r\n\r\n    function renderCurentMonth() {\r\n\r\n        let stateHelper = state;\r\n\r\n        if (state == null || state.current == null) {\r\n            if (localStorage.getItem(\"DashBoard\") != null) {\r\n                stateHelper = JSON.parse(localStorage.getItem(\"DashBoard\") || \"\");\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return renderExpense(stateHelper.current);\r\n\r\n    }\r\n\r\n    function renderBeforeCurrentMonth() {\r\n\r\n        if(state == undefined || state.before == undefined){\r\n            return null;\r\n        }\r\n\r\n        return renderExpense(state.before);\r\n    }\r\n\r\n    function renderExpense(expense: any) {\r\n        return (\r\n            <>\r\n                <Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: red.A700 }}\r\n                            title={expense.me.description}\r\n                            subheader={<Moment format=\"DD/MM/YY HH:mm\">{expense.dateUpdate}</Moment >}\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[900] }}  >R$ {expense.me.aumont.toFixed(2)}</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={4}>\r\n                    <Card  >\r\n                        <CardHeader style={{ color: blue.A700 }}\r\n                            title={expense.another.description}\r\n                            subheader={<Moment format=\"DD/MM/YY HH:mm\">{expense.another.dateUpdate}</Moment >}\r\n                        />\r\n\r\n                        <CardContent>\r\n                            <span style={{ fontSize: \"30px\", color: pink[500] }}  >R$ {expense.another.aumont.toFixed(2)}</span>\r\n                        </CardContent>\r\n\r\n                        <CardActions >\r\n                            <Button size=\"medium\" style={{ marginLeft: \"auto\", color: purple[400] }}>Visualizar</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n\r\n                {renderCurentMonth()}\r\n                {renderBeforeCurrentMonth()}\r\n\r\n                <Link to=\"CreateNewExpense\">\r\n                    <Fab aria-label={\"fab.label\"} style={{\r\n                        position: 'fixed',\r\n                        bottom: \"20px\",\r\n                        right: \"20px\",\r\n                    }}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashBoard;","import React from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport { useState } from 'react';\r\n\r\n// export class QrCode extends Component {\r\nexport const QrCode = (props) => {\r\n\r\n  const handleScan = data => {\r\n    if (data) {\r\n     props.setState(data)\r\n    }\r\n  }\r\n  const handleError = err => {\r\n    console.error(err)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <QrReader\r\n        delay={300}\r\n        onError={handleError}\r\n        onScan={handleScan}\r\n        style={{ width: '100%' }}\r\n      />\r\n    </div >\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { GetExpenseWithQRCode as GetExpenseWithQRCodeApi, SaveNewListExpense } from \"../../../apis/ExpenseApi\";\r\nimport { List, Zoom, ListItem, ListItemIcon, Checkbox, ListItemText, ListItemSecondaryAction, CircularProgress, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport { Expense } from \"../../../models/Expense\";\r\nimport HeaderContext from \"../../../layout/HeaderContext\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\n\r\ninterface Props extends RouteComponentProps<any> {\r\n    uri: String;\r\n}\r\n\r\nexport const ListExpenseNota: React.SFC<Props> = (props) => {\r\n\r\n    const [listExpense, setListExpense] = useState<Expense[]>([]);\r\n    const [loading, setLoading] = useState<Boolean>(false);\r\n    const [checked, setChecked] = React.useState<number[]>([-1]);\r\n    const [checkedAll, setCheckedAll] = useState<boolean>(true)\r\n    const { setFormLoading } = useContext(HeaderContext);\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setCheckedAll(newChecked.length == listExpense.length);\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const handleToggleAll = () => () => {\r\n\r\n        if (checkedAll) {\r\n            setCheckedAll(false);\r\n            setChecked([]);\r\n        } else {\r\n            setChecked(Array(listExpense.length).fill(0).map((v, i) => i));\r\n            setCheckedAll(true);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (!props.uri) return;\r\n\r\n        setLoading(true);\r\n        setFormLoading(true);\r\n\r\n        GetExpenseWithQRCode();\r\n    }, [props.uri])\r\n\r\n\r\n    function GetExpenseWithQRCode() {\r\n        GetExpenseWithQRCodeApi(props.uri)\r\n            .then(e => {\r\n                setListExpense(e.data);\r\n                setLoading(false);\r\n                setChecked(Array(e.data.length).fill(0).map((v, i) => i));\r\n                setFormLoading(false);\r\n            })\r\n            .catch(e => alert(e))\r\n    }\r\n\r\n    function onSubmit() {\r\n        setFormLoading(true);\r\n\r\n        let listSave = listExpense.filter((e, index) => checked.includes(index));\r\n        SaveNewListExpense(listSave).then(e => {\r\n            setFormLoading(false);\r\n            props.history.push(\"/\");\r\n        })\r\n            .catch(e => alert(e))\r\n    }\r\n\r\n\r\n    function renderBody() {\r\n        return (\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={2}>\r\n\r\n                <Grid item xs={12}>\r\n                    <List >\r\n                        {listExpense.map((value, index) => {\r\n                            const labelId = `checkbox-list-label-${index}`;\r\n\r\n                            return (\r\n                                <ListItem key={index} role={undefined} dense button onClick={handleToggle(index)}>\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={checked.indexOf(index) !== -1}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText id={labelId} primary={value.description} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <ListItemText id={labelId} primary={value.amount} />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                        <ListItem key={-1} role={undefined} dense button onClick={handleToggleAll()}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    checked={checkedAll}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={\"-1\"} primary={\"Todos\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name=\"description\"\r\n                        label=\"Descrição\"\r\n                        margin=\"normal\"\r\n                        multiline={true}\r\n                        rows=\"7\"\r\n                        fullWidth />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} container direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ marginTop: \"20px\" }} onClick={onSubmit} >\r\n                        Salvar\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        loading ?\r\n            <div style={{ paddingTop: \"200px\", position: \"absolute\", width: \"100%\", textAlign: \"center\" }}>\r\n                <CircularProgress disableShrink style={{ fontSize: \"52px\" }} />\r\n            </div>\r\n            :\r\n            <Zoom in={true}>\r\n                {renderBody()}\r\n            </Zoom>\r\n        // </FormikContainer >\r\n    );\r\n}\r\n\r\nexport default withRouter(ListExpenseNota);","import React, { useState, useEffect } from \"react\";\r\nimport { Expense } from \"../../models/Expense\";\r\nimport { FormikActions } from \"formik\";\r\nimport FormikContainer from \"../../components/formikContainer/FormikContainer\";\r\nimport { QrCode } from \"../../components/camera/QrCode\";\r\nimport { List, ListItem, ListItemIcon, Checkbox, ListItemText, ListItemSecondaryAction, IconButton, Zoom } from \"@material-ui/core\";\r\nimport ListExpenseNota from \"./components/ListExpenseNota\";\r\n\r\nexport const CreateNewExpenseQrCode: React.SFC<{}> = () => {\r\n\r\n    const [uri, setUri] = useState<String>(\"\");\r\n\r\n    function renderQRCodeReader() {\r\n        return (\r\n            <div>\r\n                <QrCode setState={setUri}></QrCode>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return uri ? <ListExpenseNota uri={uri} /> : renderQRCodeReader();\r\n}\r\n\r\nexport default CreateNewExpenseQrCode;","import React, { useContext, useEffect } from \"react\";\r\nimport HeaderContext from \"../../../layout/HeaderContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, CssBaseline, Paper, Avatar, Typography, Button } from \"@material-ui/core\";\r\nimport { FastField, Field } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport const Login: React.SFC<Props> = () => {\r\n\r\n     const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            height: '100vh',\r\n        },\r\n        image: {\r\n            backgroundImage: 'url(https://source.unsplash.com/random)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(8, 4),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root} >\r\n\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n\r\n                    <Avatar className={classes.avatar} />\r\n\r\n                    <Typography component=\"h1\" variant=\"h5\">Sign in</Typography>\r\n\r\n                    <Field\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        label=\"Usuario\"\r\n                        autoFocus\r\n                        component={TextField}\r\n                        fullWidth />\r\n\r\n\r\n                    <Field\r\n                        name=\"password\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        component={TextField}\r\n                        fullWidth />\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}>\r\n                        Sign In\r\n                    </Button>\r\n\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import { AxiosResponse } from 'axios'\r\nimport api from './Api';\r\n\r\nexport const SaveNewExpenseEndPoint: string = 'Api/Users';\r\n\r\n\r\nexport function TryLogin(user: any): Promise<AxiosResponse<any>> {\r\n    return api.post(`${SaveNewExpenseEndPoint}/authenticate`, user)\r\n}\r\n\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Formik, Form, FormikActions } from 'formik';\r\nimport Login from './components/Login';\r\nimport { Zoom } from '@material-ui/core';\r\nimport { TryLogin as TryLoginApi } from '../../apis/UsersApi';\r\nimport { login as LoginService, removeToken as RemoveTokenService, isAuthenticated } from \"./../../services/Authenticate\"\r\nimport HeaderContext from '../../layout/HeaderContext';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LoginContainer: React.SFC<RouteComponentProps<any>> = (props) => {\r\n\r\n    const { setHeaderVisible } = useContext(HeaderContext)\r\n\r\n    useEffect(() => {\r\n\r\n        setHeaderVisible(false);\r\n\r\n        return () => {\r\n            setHeaderVisible(true);\r\n        };\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    function onSubmit(values: any, formikActions: FormikActions<any>) {\r\n\r\n        TryLoginApi(values).then(response => {\r\n            LoginService(response.data.token)\r\n\r\n            setTimeout(() => {\r\n                props.history.push(\"/DashBoard\")\r\n            }, 50);\r\n        })\r\n            .catch((error) => {\r\n                RemoveTokenService();\r\n            })\r\n\r\n    }\r\n\r\n\r\n    if (isAuthenticated()) {\r\n        return <Redirect to={{ pathname: \"/DashBoard\" }} />\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{}}\r\n            onSubmit={onSubmit}\r\n\r\n            render={(renderProps) => {\r\n                return (\r\n                    <Zoom in={true}>\r\n                        <Form >\r\n\r\n                            <Login />\r\n\r\n                        </Form>\r\n                    </Zoom>\r\n                )\r\n            }} />\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginContainer);","import * as React from 'react';\r\nimport CreateNewExpense from '../view/createNewExpense/CreateNewExpense';\r\nimport { Sidebar } from '../components/sidebar/Sidebar';\r\nimport DashBoard from '../view/dashBoard/DashBoard';\r\nimport { HeaderProvider } from './HeaderContext';\r\nimport { useState, Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { BrowserRouter, RouteProps } from 'react-router-dom';\r\nimport CreateNewExpenseQrCode from '../view/createNewExpenseQrCode/createNewExpenseQrCode';\r\nimport { isAuthenticated } from '../services/Authenticate';\r\nimport LoginContainer from '../view/login/LoginContainer';\r\n\r\n\r\nexport const Home: React.SFC<{}> = () => {\r\n\r\n    const [headerVisible, setHeaderVisible] = useState<boolean>(true);\r\n    const [formLoading, setFormLoading] = useState<boolean>(false);\r\n\r\n\r\n    function ValidateUser() {\r\n\r\n        if (!isAuthenticated()) {\r\n            return <Redirect to={{ pathname: \"/Login\" }} />\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <HeaderProvider value={\r\n            {\r\n                headerVisible,\r\n                setHeaderVisible,\r\n                formLoading,\r\n                setFormLoading\r\n            }\r\n        }>\r\n\r\n            <BrowserRouter >\r\n                <Switch >\r\n                    <Route path=\"/Login\" exact component={LoginContainer} />\r\n\r\n                    <Sidebar >\r\n\r\n                        <div>\r\n                            {ValidateUser()}\r\n                        </div>\r\n\r\n                        <Route path=\"/CreateNewExpense\" component={CreateNewExpense} />\r\n                        <Route path=\"/DashBoard\" component={DashBoard} />\r\n                        <Route path=\"/CreateNewExpenseQrCode\" exact component={CreateNewExpenseQrCode} />\r\n                        <Route path=\"/\" exact component={DashBoard} />\r\n\r\n                    </Sidebar>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </HeaderProvider>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Home } from './layout/Home';\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\n\r\nconsole.log(\"process.env.NODE_ENV\", process.env)\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n        <Home></Home>\r\n\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        \n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  console.log(\"Iniciando SW\")\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n\n        \n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n// Notification.requestPermission().then(function (result) {\n//     console.log(result);\n// });\n\n\n// Notification.s\n\n// function notifyMe() {\n//     var i = 0;\n//     // Using an interval cause some browsers (including Firefox) are blocking notifications if there are too much in a certain time.\n//     var interval = window.setInterval(function () {\n//       // Thanks to the tag, we should only see the \"Hi! 9\" notification \n//       var n = new Notification(\"Hi! \" + i, {tag: 'soManyNotification'});\n//       if (i++ == 9) {\n//         window.clearInterval(interval);\n//       }\n//     }, 200);\n// }\n\n// notifyMe();\n\nserviceWorker.unregister();\n\nNotification.requestPermission(function (status) {\n    console.log('Notification permission status:', status);\n});\n\n// function showNotification() {\n//     Notification.requestPermission(function (result) {\n//         if (result === 'granted') {\n//             navigator.serviceWorker.ready.then(function (registration) {\n//                 registration.showNotification('Vibration Sample', {\n//                     body: 'Buzz! Buzz!',\n//                     icon: '../images/touch/chrome-touch-icon-192x192.png',\n//                     vibrate: [200, 100, 200, 100, 200, 100, 200],\n//                     tag: 'vibration-sample'\n//                 });\n//             });\n//         }\n//     });\n// }\n\n// setTimeout(() => {\n//     if (Notification.permission == 'granted') {\n//       navigator.serviceWorker.getRegistration().then(function (registration1) {\n//         var options = {\n//           body: 'Here is a notification body!',\n//           icon: 'images/example.png',\n//           vibrate: [100, 50, 100],\n//           data: {\n//             dateOfArrival: Date.now(),\n//             primaryKey: 1\n//           }\n//         };\n//         if (registration1) {\n//           registration1.showNotification('Hello world!', options);\n//         }\n//       });\n//     }\n\n//   }, 5000);\n\n// showNotification();"],"sourceRoot":""}