{"version":3,"sources":["pages/Pessoas/Funcionarios/FormFuncionario/FuncionarioSchema.ts","pages/Pessoas/Funcionarios/FormFuncionario/components/GeralForm.tsx","pages/Pessoas/Funcionarios/FormFuncionario/FormFuncionario.tsx","apis/Cidades/CidadeApi.ts","apis/Movimentos/ServicoApi.ts"],"names":["FuncionarioSchema","Yup","shape","nome","max","required","GeralForm","span","name","label","placeholder","readOnly","Option","key","value","SelectModelOne","fetchMethod","CidadeApi","GetById","bind","keyDescription","title","errorMessage","noSelection","path","format","FuncaoFuncionarioApi","SelectModelMoreWithTable","ServicoApi","columns","dataIndex","rows","FormFuncionario","props","useState","apelido","bairro","cep","complemento","cPFCPNJ","dataNascimento","undefined","email","endereco","estadoCivil","id","nacionalidade","observacoes","rgInscricaoEstadual","sexo","telefone","cnh","funcionario","loading","setLoading","a","useEffect","getFuncionario","match","params","CrudFormLayout","isLoading","backPath","breadcrumbList","displayName","URL","initialValues","validationSchema","onSubmit","ApiBase"],"mappings":"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","file":"static/js/37.4cce1437.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\n\r\n\r\nexport const FuncionarioSchema = Yup.object().shape<Funcionario | any>({\r\n    nome: Yup.string()\r\n        .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n        .required('[Nome] do Funcionario não pode ser vaziu.'),\r\n});\r\n","import React from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, DatePicker, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport SelectModelMoreWithTable from '../../../../../components/SelectModel/SelectModelMoreWithTable';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { ServicoApi } from '../../../../../apis/Movimentos/ServicoApi';\r\nimport { FuncaoFuncionarioApi } from '../../../../../apis/Pessoas/FuncaoFuncionarioApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n    const columns: ColumnProps<any>[] = [\r\n        {\r\n            title: 'Serviço',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Valor',\r\n            dataIndex: 'valor',\r\n        },\r\n        {\r\n            title: 'Categoria',\r\n            dataIndex: 'categoria.nome',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Funcionário\" placeholder=\"João da silva\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label=\"Apelido\" placeholder=\"João\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"estadoCivil\" label=\"Estado Civíl\" placeholder=\"Solteiro(a)\" required >\r\n                        <SelectAntd.Option key=\"Casado\" value=\"Casado\">Casado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Divorciado\" value=\"Divorciado\">Divorciado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Separadoo\" value=\"Separado\">Separado(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Solteiro\" value=\"Solteiro\">Solteiro(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Viuvo\" value=\"Viuvo\">Viúvo(a).</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <Select name=\"sexo\" label=\"Sexo\" placeholder=\"Masculino\" required >\r\n                        <SelectAntd.Option key=\"Masculino\" value=\"Masculino\">Masculino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Feminino\" value=\"Feminino\">Feminino.</SelectAntd.Option>\r\n                        <SelectAntd.Option key=\"Outros\" value=\"Outros\">Outros.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={4} >\r\n                    <Input name=\"nacionalidade\" label=\"Nacionalidade\" placeholder=\"Brasileiro.\" required />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataNascimento\" label=\"Data Nascimento\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label=\"RG\" placeholder=\"99.999.999-X\" required />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label=\"CPF\" placeholder=\"000.000.000-00\" />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <SelectModelOne\r\n                        fetchMethod={FuncaoFuncionarioApi.GetById.bind(FuncaoFuncionarioApi)}\r\n                        name=\"funcaoFuncionarioId\"\r\n                        keyDescription=\"FuncaoFuncionario\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção da Função Funcionário\", label: \"Função Funcionário\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Função Funcionário!\" }}\r\n                        path=\"funcao-funcionario\" />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cnh\" label=\"CNH\" placeholder=\"999999999\" />\r\n                </Col>\r\n\r\n                <Col span={3} >\r\n                    <DatePicker name=\"dataValidadeCNH\" label=\"Data de Validade\" placeholder=\"01/01/2001\" required format=\"DD/MM/yyyy\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={24}>\r\n                    <SelectModelMoreWithTable\r\n                        fetchMethod={ServicoApi.GetById.bind(ServicoApi)}\r\n                        label={{ label: \"Serviços\", title: \"Selecione um Serviço\" }}\r\n                        name=\"servicoIds\"\r\n                        columns={columns}\r\n                        errorMessage={{ noSelection: \"Selecione ao menos um Serviço\" }}\r\n                        path=\"servico\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { FuncionarioSchema } from './FuncionarioSchema';\r\nimport { Funcionario } from '../../../../models/Pessoas/Funcionario';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormFuncionario: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [funcionario] = useState<Funcionario>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        estadoCivil: undefined,\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        sexo: undefined,\r\n        telefone: \"\",\r\n        cnh: \"\"\r\n\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFuncionario();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFuncionario() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/funcionario\"\r\n            breadcrumbList={[{ displayName: \"Funcionários\", URL: \"/funcionario\" }, { displayName: \"Novo Funcionário\", URL: undefined }]}\r\n            initialValues={funcionario}\r\n            validationSchema={FuncionarioSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFuncionario;\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { Servico } from '../../models/Movimentos/Servico';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/servicos';\r\n\r\nclass Api extends ApiBase<Servico>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const ServicoApi = new Api();"],"sourceRoot":""}