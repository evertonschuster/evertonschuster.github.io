{"version":3,"sources":["pages/Pessoas/Fornecedores/FormFornecedor/FornecedorSchema.ts","pages/Pessoas/Fornecedores/FormFornecedor/components/GeralForm.tsx","pages/Pessoas/Fornecedores/FormFornecedor/FormFornecedor.tsx","layouts/FormBasicLayout/FormBasicLayout.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/ModalForm/ModalFormContext.ts","hoc/WithFormItem.tsx","hoc/useDebouncedCallback.ts","components/WithFormItem/withFormItem.tsx","layouts/CrudFormLayout/components/FormikForm.tsx","layouts/CrudFormLayout/CrudFormLayout.tsx","components/SelectModel/SelectModelOne.tsx","services/RouterService/RouterServiceModel.tsx","components/ModalForm/ModalForm.tsx","apis/Cidades/CidadeApi.ts","apis/CondicaoPagamento/CondicaoPagamentoApi.ts","models/Pessoas/Pessoa.ts"],"names":["FornecedorSchema","Yup","shape","GeralForm","useField","name","field","setFieldValue","useFormikContext","useEffect","undefined","value","span","label","placeholder","readOnly","required","Option","key","TIPO_PESSOA","Fisica","Juridica","fast","SelectModelOne","fetchMethod","CidadeApi","GetById","bind","keyDescription","title","errorMessage","noSelection","path","CondicaoPagamentoApi","rows","FormFornecedor","props","useState","apelido","bairro","cep","complemento","cPFCPNJ","dataNascimento","email","endereco","id","nacionalidade","nome","observacoes","rgInscricaoEstadual","telefone","tipo","fornecedor","loading","setLoading","a","getFornecedor","match","params","CrudFormLayout","isLoading","backPath","breadcrumbList","displayName","URL","initialValues","validationSchema","onSubmit","memo","setBreadcrumb","useContext","BasicLayoutContext","className","children","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ModalFormContext","React","createContext","state","setState","ModalFormContextProvider","Provider","Consumer","withFormItem","Field","propsConf","basicLayoutContext","isViewMode","formMode","FormMode","View","isDisabled","disabled","autoComplete","style","width","withFormItemCustom","WithItemNone","showLabel","padding","ItemFormRender","useDebouncedCallback","callback","wait","argsRef","useRef","timeout","cleanup","current","clearTimeout","args","setTimeout","Input","formikAntd","InputNumber","decimalSeparator","TextArea","MaskedInput","Select","DatePicker","Switch","FormikForm","forwardRef","ref","history","useHistory","formik","keyLocalStorage","location","pathname","toLowerCase","localStorage","getItem","Modal","confirm","content","onOk","getFormLocalStorage","onCancel","removeSavedFormLocalStorageForm","cancelText","okText","verefiSavedForm","useImperativeHandle","saveFormLocalStorage","values","ceatedDate","Date","formData","setItem","JSON","stringify","removeItem","savedForm","parse","setValues","onKeyUp","event","onKeyDown","isSubmitting","zIndex","height","margin","left","top","position","background","type","fontSize","color","theme","isFunction","justify","paddingTop","display","flexDirection","paddingRight","textAlign","dataCriacao","toLocaleString","day","month","year","hour","minute","dataAtualizacao","renderDatas","marginRight","onClick","push","submitForm","withRouter","childRef","formikHelpers","errorBack","FormBasicLayout","enableReinitialize","keyEvent","charCode","keyCode","preventDefault","visible","setVisible","description","setDescription","keyId","meta","helpers","objectName","helpersObject","setSubmitting","showDescription","getDesciptionValues","respose","data","setValue","handleClick","Item","validateStatus","error","touched","help","col","inputId","min","onChange","setTouched","onBlur","btnSearch","icon","inputDescription","SelectOne","isNaN","Number","breadcrumb","sharedState","setSharedState","setFormMode","basename","RoutePath","to","CloseForm","concat","destroyOnClose","Array","isArray","length","message","SelectMultiple","ApiBase","SEXO","ESTADO_CIVIL"],"mappings":"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","file":"static/js/9.a28681f0.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\n\r\n\r\nexport const FornecedorSchema = Yup.object().shape<Fornecedor | {}>({\r\n    // nome: Yup.string()\r\n    //     .max(50, \"O campo [Nome] não deve possuir mais de 50 caracteres.\")\r\n    //     .required('[Nome] do Fornecedor não pode ser vaziu.'),\r\n});\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Select as SelectAntd } from 'antd';\r\nimport { Input, Select, InputNumber, TextArea } from '../../../../../components/WithFormItem/withFormItem';\r\nimport { TIPO_PESSOA } from '../../../../../models/Pessoas/Pessoa';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Fornecedor } from './../../../../../models/Pessoas/Fornecedor';\r\nimport SelectModelOne from '../../../../../components/SelectModel/SelectModelOne';\r\nimport { CidadeApi } from '../../../../../apis/Cidades/CidadeApi';\r\nimport { CondicaoPagamentoApi } from '../../../../../apis/CondicaoPagamento/CondicaoPagamentoApi';\r\n\r\nconst GeralForm: React.FC = () => {\r\n\r\n    const [field,] = useField<TIPO_PESSOA>({ name: \"tipo\" });\r\n    const { setFieldValue } = useFormikContext<Fornecedor>();\r\n\r\n    useEffect(() => {\r\n\r\n        setFieldValue(\"estadoCivil\", undefined);\r\n        setFieldValue(\"sexo\", undefined);\r\n        setFieldValue(\"dataNascimento\", undefined);\r\n        setFieldValue(\"nacionalidade\", undefined);\r\n\r\n    }, [field.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row>\r\n                <Col span={2}>\r\n                    <Input name=\"id\" label=\"Código\" placeholder=\"Codigo\" readOnly />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Select name=\"tipo\" label=\"Tipo\" required>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Fisica} value={TIPO_PESSOA.Fisica}>Pessoa Física.</SelectAntd.Option>\r\n                        <SelectAntd.Option key={TIPO_PESSOA.Juridica} value={TIPO_PESSOA.Juridica}>Pessoa Jurídica.</SelectAntd.Option>\r\n                    </Select>\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"nome\" label=\"Fornecedor\" placeholder={field.value === TIPO_PESSOA.Fisica ? \"João da silva\" : \"Eletrônicos do João\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <Input name=\"apelido\" label={field.value === TIPO_PESSOA.Fisica ? \"Apelido\" : \"Nome Fantasia\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"João\" : \"Eletrôjoão\"} fast={false} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col span={5}>\r\n                    <Input name=\"endereco\" label=\"Endereço\" placeholder=\"Av das americas.\" required />\r\n                </Col>\r\n\r\n                <Col span={2}>\r\n                    <InputNumber name=\"numero\" label=\"Número\" placeholder=\"549\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"complemento\" label=\"Complemento\" placeholder=\"\" />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"bairro\" label=\"Bairro\" placeholder=\"Jardim Horizonte.\" required />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <Input name=\"cep\" label=\"CEP\" placeholder=\"85890-000\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CidadeApi.GetById.bind(CidadeApi)}\r\n                        name=\"cidadeId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Cidade\", label: \"Cidade\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Cidade!\" }}\r\n                        path=\"cidade\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"telefone\" label=\"Telefone\" placeholder=\"(45)988293328\" required />\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                    <Input name=\"email\" label=\"Email\" placeholder=\"joao@gmail.com\" required />\r\n                </Col>\r\n\r\n                <Col span={6}>\r\n                    <Input name=\"contato\" label=\"Contato\" placeholder=\"João\" required />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Input name=\"rgInscricaoEstadual\" label={field.value === TIPO_PESSOA.Fisica ? \"RG\" : \"Inscrição Estadual\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"99.999.999-X\" : \"999.999.999.999\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                    <Input name=\"cPFCPNJ\" label={field.value === TIPO_PESSOA.Fisica ? \"CPF\" : \"CNPJ\"} placeholder={field.value === TIPO_PESSOA.Fisica ? \"000.000.000-00\" : \"99.999.999/0001-84\"} required fast={false} />\r\n                </Col>\r\n\r\n                <Col span={3}>\r\n                    <InputNumber name=\"limiteCredito\" label=\"Limite de Crédito\" placeholder=\"500,00\" required />\r\n                </Col>\r\n\r\n                <Col span={7}>\r\n                    <SelectModelOne\r\n                        fetchMethod={CondicaoPagamentoApi.GetById.bind(CondicaoPagamentoApi)}\r\n                        name=\"condicaoPagamentoId\"\r\n                        keyDescription=\"nome\"\r\n                        required={true}\r\n                        label={{ title: \"Seleção de Condição de Pagamento\", label: \"Condição de Pagamento\" }}\r\n                        errorMessage={{ noSelection: \"Selecione uma Condição de Pagamento!\" }}\r\n                        path=\"condicao-pagamento\" />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col span={13}>\r\n                    <TextArea name=\"observacao\" label=\"Observação\" rows={4} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GeralForm\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CrudFormLayout from '../../../../layouts/CrudFormLayout/CrudFormLayout';\r\nimport { Fornecedor } from '../../../../models/Pessoas/Fornecedor';\r\nimport { FornecedorSchema } from './FornecedorSchema';\r\nimport { TIPO_PESSOA } from '../../../../models/Pessoas/Pessoa';\r\nimport GeralForm from './components/GeralForm';\r\nimport { errorBack } from '../../../../utils/MessageApi';\r\n\r\nconst FormFornecedor: React.FC<RouteComponentProps & RouteComponentProps<any>> = (props) => {\r\n\r\n\r\n    const [fornecedor] = useState<Fornecedor>({\r\n        apelido: \"\",\r\n        bairro: \"\",\r\n        cep: \"\",\r\n        complemento: \"\",\r\n        cPFCPNJ: \"\",\r\n        dataNascimento: undefined,\r\n        email: \"\",\r\n        endereco: \"\",\r\n        id: \"\",\r\n        nacionalidade: \"\",\r\n        nome: \"\",\r\n        observacoes: \"\",\r\n        rgInscricaoEstadual: \"\",\r\n        telefone: \"\",\r\n        tipo: TIPO_PESSOA.Juridica\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        getFornecedor();\r\n    }, [props.match.params.id])\r\n\r\n\r\n    async function onSubmit() {\r\n\r\n    }\r\n\r\n    async function getFornecedor() {\r\n        try {\r\n\r\n\r\n        } catch (e) {\r\n            errorBack(null, e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CrudFormLayout\r\n            isLoading={loading}\r\n            backPath=\"/fornecedor\"\r\n            breadcrumbList={[{ displayName: \"Fornecedores\", URL: \"/fornecedor\" }, { displayName: \"Novo Fornecedor\", URL: undefined }]}\r\n            initialValues={fornecedor}\r\n            validationSchema={FornecedorSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n\r\n            <GeralForm></GeralForm>\r\n\r\n        </CrudFormLayout>\r\n    );\r\n\r\n}\r\n\r\nexport default FormFornecedor;\r\n","import React, { useContext, useEffect, memo, ReactNode } from 'react';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport BasicLayoutContext from '../BasicLayout/BasicLayoutContext';\r\nimport \"./form-basic-layout.style.css\";\r\n\r\nexport interface Props {\r\n    breadcrumbList?: BreadcrumbProp[],\r\n    children?: ReactNode\r\n}\r\n\r\nconst FormBasicLayout: React.FC<Props> = (props) => {\r\n\r\n    const { setBreadcrumb } = useContext(BasicLayoutContext);\r\n\r\n    useEffect(() => {\r\n\r\n        setBreadcrumb(props.breadcrumbList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"form-application-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo<Props>(FormBasicLayout);\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react'\r\n\r\nexport interface ModalFormContextProp<T> {\r\n    state?: T | T[];\r\n    setState: (value?: T | T[]) => void;\r\n}\r\n\r\nconst ModalFormContext = React.createContext<ModalFormContextProp<any>>(\r\n    {\r\n        state: undefined,\r\n        setState: () => { },\r\n    }\r\n);\r\n\r\nexport const ModalFormContextProvider = ModalFormContext.Provider\r\nexport const ModalFormContextConsumer = ModalFormContext.Consumer\r\n\r\nexport default ModalFormContext\r\n\r\n// headerVisible\r\n// setHeaderVisible","import React, { useContext } from 'react'\r\nimport { FormItem } from 'formik-antd';\r\nimport BasicLayoutContext, { FormMode } from '../layouts/BasicLayout/BasicLayoutContext';\r\nimport { useField } from 'formik';\r\n\r\ninterface WithFormITemProps {\r\n    label: string;\r\n    required?: boolean;\r\n}\r\n\r\ninterface PropsItemForm {\r\n    showLabel?: boolean;\r\n    label?: string;\r\n    required?: boolean;\r\n    padding?: boolean;\r\n}\r\n\r\nexport const withFormItem = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field autoComplete=\"off\" disabled={isDisabled} {...propsConf} {...props} required={false} style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const withFormItemCustom = <P extends object>(Field: React.ComponentType<P>, propsConf?: any): React.FC<P & WithFormITemProps> => (props: any) => {\r\n\r\n    const basicLayoutContext = useContext(BasicLayoutContext);\r\n    const [field, meta, helpers] = useField({ name: props.name });\r\n\r\n    const isViewMode = basicLayoutContext != null && basicLayoutContext.formMode === FormMode.View;\r\n    const isDisabled = props.disabled || isViewMode;\r\n\r\n    return (\r\n        <FormItem name={props.name} label={props.label || \"\"} required={props.required} className=\"form-custom-item\" >\r\n            <Field\r\n                autoComplete=\"off\"\r\n                disabled={isDisabled}\r\n                {...field}\r\n                {...propsConf}\r\n                {...props}\r\n                required={false}\r\n                style={{ width: \"100%\" }} />\r\n        </FormItem >\r\n    )\r\n}\r\n\r\nexport const WithItemNone: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className={`ant-row ant-form-item ant-form-item-with-help ${props.padding === true || props.padding === undefined ? \"form-custom-item\" : \"\"}`}>\r\n            {showLabel ? <div className=\"ant-col ant-form-item-label\">\r\n                <span>&nbsp;</span >\r\n            </div > : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const ItemFormRender: React.FC<PropsItemForm> = (props) => {\r\n    const showLabel = props.showLabel ?? true;\r\n\r\n    return (\r\n        <div className=\"ant-row ant-form-item ant-form-item-with-help form-custom-item\">\r\n            {showLabel ?\r\n                <div className=\"ant-col ant-form-item-label\">\r\n                    <label className={props.required ? \"ant-form-item-required\" : \"\"}>{props.label ?? <>&nbsp;</>}</label>\r\n                </div>\r\n                : \"\"\r\n            }\r\n\r\n            <div className=\"ant-col ant-form-item-control-wrapper\">\r\n                <div className=\"ant-form-item-control \">\r\n                    <span className=\"ant-form-item-children\">\r\n\r\n                        {props.children}\r\n\r\n                    </span>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nexport function useDebouncedCallback<A extends any[]>(callback: (...args: A) => void, wait: number) {\r\n    // track args & timeout handle between calls\r\n    const argsRef = useRef<A>();\r\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\r\n\r\n    function cleanup() {\r\n        if (timeout.current) {\r\n            clearTimeout(timeout.current);\r\n        }\r\n    }\r\n\r\n    // make sure our timeout gets cleared if\r\n    // our consuming component gets unmounted\r\n    useEffect(() => cleanup, []);\r\n\r\n    return function debouncedCallback(...args: A) \r\n    {\r\n        // capture latest args\r\n        argsRef.current = args;\r\n\r\n        // clear debounce timer\r\n        cleanup();\r\n\r\n        // start waiting again\r\n        timeout.current = setTimeout(() => {\r\n            if (argsRef.current) {\r\n                callback(...argsRef.current);\r\n            }\r\n        }, wait);\r\n    };\r\n}\r\n","import * as formikAntd from \"formik-antd\"\r\nimport { withFormItem, withFormItemCustom } from \"../../hoc/WithFormItem\"\r\nimport MaskedInput from 'react-text-mask'\r\n\r\nexport const Input = withFormItem(formikAntd.Input, { fast: true });\r\nexport const InputNumber = withFormItem(formikAntd.InputNumber, { decimalSeparator: \",\", fast: true });\r\nexport const InputMasked = withFormItemCustom(MaskedInput, { fast: true });\r\nexport const TextArea = withFormItem(formikAntd.Input.TextArea, { fast: true });\r\n\r\nexport const Select = withFormItem(formikAntd.Select, { fast: true })\r\n\r\nexport const DatePicker = withFormItem(formikAntd.DatePicker, { fast: true });\r\n\r\nexport const Switch = withFormItem(formikAntd.Switch, { fast: true });","import React, { forwardRef, useImperativeHandle, useEffect } from 'react'\r\nimport { FormikProps, isFunction, useFormikContext } from 'formik'\r\nimport { Icon, Form, Row, Col, Button, Modal } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDebouncedCallback } from '../../../hoc/useDebouncedCallback';\r\n\r\nexport interface Props {\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n    onKeyDown: (event: React.KeyboardEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport interface FormikFormRef {\r\n    removeSavedFormLocalStorageForm: () => void;\r\n}\r\n\r\ninterface FormData {\r\n    ceatedDate: Date;\r\n    formData: any,\r\n}\r\n\r\nconst FormikForm: React.FC<Props & any> = forwardRef<FormikFormRef, Props>((props, ref) => {\r\n    const history = useHistory();\r\n    const formik = useFormikContext();\r\n    const keyLocalStorage = `form-chache${history.location.pathname.toLowerCase()}`;\r\n\r\n\r\n    useEffect(() => {\r\n        verefiSavedForm();\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        removeSavedFormLocalStorageForm\r\n    }));\r\n\r\n    const saveFormLocalStorage = useDebouncedCallback(() => {\r\n        var values: FormData = {\r\n            ceatedDate: new Date(),\r\n            formData: formik.values,\r\n        };\r\n\r\n        localStorage.setItem(keyLocalStorage, JSON.stringify(values))\r\n    }, 600);\r\n\r\n    function removeSavedFormLocalStorageForm() {\r\n        localStorage.removeItem(keyLocalStorage);\r\n    }\r\n\r\n    function getFormLocalStorage() {\r\n        var savedForm = JSON.parse(localStorage.getItem(keyLocalStorage) ?? \"\") as FormData;\r\n        formik.setValues(savedForm.formData);\r\n    }\r\n\r\n    function verefiSavedForm() {\r\n        if (!localStorage.getItem(keyLocalStorage)) {\r\n            return;\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: \"Recuperação de formulário\",\r\n            content: \"Existem dados não salvos, deseja recuperar?\",\r\n            onOk: getFormLocalStorage,\r\n            onCancel: removeSavedFormLocalStorageForm,\r\n            cancelText: \"Remover\",\r\n            okText: \"Recuperar\"\r\n        })\r\n    }\r\n\r\n    function onKeyDown(event: React.KeyboardEvent<HTMLFormElement>) {\r\n        saveFormLocalStorage();\r\n        props.onKeyDown(event);\r\n    }\r\n\r\n    function renderLoading(isLoading: boolean) {\r\n\r\n        if (!isLoading && !props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                zIndex: 100,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                margin: \"0em\",\r\n                left: \"0em\",\r\n                top: \"0em\",\r\n                position: \"fixed\"\r\n            }} >\r\n                <div style={{ background: \"#00000026\", height: \"100%\" }}>\r\n                    <Icon type=\"loading\" style={{ position: \"absolute\", top: \"50%\", left: \"50%\", fontSize: '72px', color: '#08c' }} theme=\"outlined\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function renderDatas(formik: FormikProps<any>) {\r\n        return (\r\n            <>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Criação: {formik.values?.dataCriacao ? new Date(formik.values?.dataCriacao).toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n                <span style={{ textAlign: \"end\" }} >\r\n                    Data Atualização: {formik.values?.dataAtualizacao ? new Date(formik.values.dataAtualizacao)?.toLocaleString(undefined, {\r\n                    day: \"numeric\",\r\n                    month: \"numeric\",\r\n                    year: \"numeric\",\r\n\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\"\r\n                }) : \"  /  /\"}</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Form onKeyUp={onKeyDown} >\r\n            {renderLoading(formik.isSubmitting)}\r\n\r\n            {isFunction(props.children)\r\n                ? props.children(formik)\r\n                : props.children}\r\n\r\n            < Row type=\"flex\" justify=\"end\" style={{ paddingTop: \"25px\" }}>\r\n                <Col span={7}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        paddingRight: 20\r\n                    }}>\r\n                    {renderDatas(formik)}\r\n                </Col>\r\n                <Col>\r\n                    <Button type=\"danger\" style={{ marginRight: \"10px\" }} onClick={() => history.push(props.backPath)}>Cancelar</Button>\r\n                    <Button type=\"primary\" onClick={() => formik.submitForm()}>Salvar</Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n})\r\n\r\nexport default FormikForm\r\n","import React, { useRef } from 'react';\r\nimport { Formik, FormikConfig, FormikHelpers, FormikProps, FormikContextType } from 'formik';\r\nimport FormBasicLayout from '../FormBasicLayout/FormBasicLayout';\r\nimport { BreadcrumbProp } from '../BasicLayout/BasicLayout';\r\nimport { errorBack } from '../../utils/MessageApi';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport FormikForm, { FormikFormRef } from './components/FormikForm';\r\n\r\nexport interface Props extends FormikConfig<any> {\r\n    breadcrumbList?: BreadcrumbProp[];\r\n    isLoading?: boolean;\r\n    backPath: string;\r\n    children?: ((props: FormikProps<any>) => React.ReactNode) | React.ReactNode;\r\n}\r\n\r\n\r\nconst CrudFormBasicLayout: React.FC<Props & RouteComponentProps> = (props) => {\r\n\r\n    const childRef = useRef<FormikFormRef>();\r\n\r\n    \r\n    async function onSubmit(values: any, formikHelpers: FormikHelpers<any>) {\r\n        try {\r\n            childRef.current?.removeSavedFormLocalStorageForm();\r\n            await props.onSubmit(values, formikHelpers);\r\n        } catch (e) {\r\n            errorBack(formikHelpers, e)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    function onKeyDown(keyEvent: React.KeyboardEvent<HTMLFormElement>) {\r\n        if ((keyEvent.charCode || keyEvent.keyCode) === 13) {\r\n            keyEvent.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormBasicLayout breadcrumbList={props.breadcrumbList} >\r\n            <Formik\r\n                {...props}\r\n                onSubmit={onSubmit}\r\n                enableReinitialize={true}  >\r\n                <FormikForm\r\n                    ref={childRef}\r\n                    backPath={props.backPath}\r\n                    isLoading={props.isLoading}\r\n                    children={props.children}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Formik>\r\n        </FormBasicLayout >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(CrudFormBasicLayout);\r\n","import React, { useState, useEffect, memo } from 'react';\r\nimport { Row, Col, Button, Form } from 'antd';\r\nimport { Input as InputAntd, InputNumber } from \"antd\"\r\nimport { ItemFormRender, WithItemNone } from '../../hoc/WithFormItem';\r\nimport ModelForm, { ErrorMessage, Label } from '../ModalForm/ModalForm';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { useDebouncedCallback } from '../../hoc/useDebouncedCallback';\r\nimport { AxiosResponse } from 'axios';\r\nimport \"./select-model-one-style.css\";\r\nimport { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ICol {\r\n    inputId?: number,\r\n    btnSearch?: number,\r\n    inputDescription?: number,\r\n}\r\n\r\nexport interface Props {\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    name: string;\r\n    keyId?: string;\r\n    keyDescription: string;\r\n    required?: boolean;\r\n    fetchMethod: (id: number) => Promise<AxiosResponse<any>>;\r\n    showLabel?: boolean;\r\n    showDescription?: boolean;\r\n    objectName?: string;\r\n    col?: ICol\r\n}\r\n\r\n\r\nconst SelectModelOne: React.FC<Props> = (props) => {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [description, setDescription] = useState(\"\")\r\n    const keyId = props.keyId || \"id\";\r\n    const keyDescription = props.keyDescription || \"nome\";\r\n    const required = props.required || true;\r\n    const showLabel = props.showLabel ?? true;\r\n    const [field, meta, helpers] = useField(props.name);\r\n    const [, , helpersObject] = useField(props.objectName ?? props.name); //Todo\r\n    const { setSubmitting } = useFormikContext();\r\n    const showDescription = props.showDescription !== false;\r\n\r\n    useEffect(() => {\r\n        let id = field.value;\r\n        handleClick(id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [field.value])\r\n\r\n    async function getDesciptionValues(id: number) {\r\n\r\n        if (id) {\r\n            let respose = await props.fetchMethod(id);\r\n            if (respose.data) {\r\n                setDescription(respose.data[keyDescription]);\r\n\r\n                if (props.objectName) {\r\n                    helpersObject.setValue(respose.data)\r\n                }\r\n            } else {\r\n                setDescription(\"\");\r\n            }\r\n        } else {\r\n            setDescription(\"\")\r\n        }\r\n    }\r\n\r\n    function setState(params: any) {\r\n        let id = params[keyId];\r\n        helpers.setValue(id);\r\n    }\r\n\r\n    const handleClick = useDebouncedCallback(async (id) => {\r\n        try {\r\n            setSubmitting(true)\r\n            await getDesciptionValues(id);\r\n\r\n        } finally {\r\n            setSubmitting(false)\r\n        }\r\n    }, 500);\r\n\r\n    function onChangeId(value: number | undefined) {\r\n        helpers.setValue(value);\r\n        helpers.setTouched(true);\r\n    }\r\n\r\n    function onBlurId() {\r\n        helpers.setTouched(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                className=\"select-model-one-style-item\"\r\n                validateStatus={meta.error && meta.touched ? \"error\" : \"validating\"}\r\n                help={meta.error && meta.touched ? meta.error : \"\"}>\r\n                <Row>\r\n                    <Col span={(props.col?.inputId) ?? (showDescription ? 8 : 19)} >\r\n                        <ItemFormRender showLabel={showLabel} label={props.label.label} required={required}>\r\n                            <InputNumber min={0} value={meta.value} onChange={onChangeId} onBlur={onBlurId} style={{ width: \"inherit\" }} />\r\n                        </ItemFormRender>\r\n                    </Col>\r\n                    <Col span={(props.col?.btnSearch) ?? (showDescription ? 3 : 5)} style={{ textAlign: \"center\" }} >\r\n                        <WithItemNone showLabel={showLabel} padding={false} >\r\n                            <Button type=\"primary\" icon=\"search\" onClick={() => setVisible(true)} ></Button>\r\n                        </WithItemNone>\r\n                    </Col>\r\n                    {showDescription && <Col span={(props.col?.inputDescription) ?? 13} >\r\n                        <WithItemNone showLabel={showLabel}>\r\n                            <InputAntd value={description} />\r\n                        </WithItemNone>\r\n                    </Col>}\r\n                </Row>\r\n\r\n                <ModelForm\r\n                    required={props.required}\r\n                    visible={visible}\r\n                    formMode={FormMode.SelectOne}\r\n                    setVisible={setVisible}\r\n                    setState={setState}\r\n                    state={isNaN(field.value) ? [] : { [keyId]: Number(field.value) }}\r\n                    label={props.label}\r\n                    errorMessage={props.errorMessage}\r\n                    path={props.path} />\r\n            </Form.Item>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(SelectModelOne);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { BasicLayoutContextProvider, FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\nimport RoutePath from './Components/RoutePath';\r\nimport { BreadcrumbProp } from '../../layouts/BasicLayout/BasicLayout';\r\n\r\nexport interface Props {\r\n    path?: string;\r\n    setState: (values: void) => void;\r\n    formMode : FormMode\r\n}\r\n\r\nconst RouterServiceModel: React.FC<RouteComponentProps & Props> = (props) => {\r\n\r\n    const [breadcrumb, setBreadcrumb] = useState<BreadcrumbProp[]>();\r\n    const [sharedState, setSharedState] = useState();\r\n    const [formMode, setFormMode] = useState<FormMode>(props.formMode)\r\n\r\n    return (\r\n        <BrowserRouter basename={props.history.location.pathname}  >\r\n            <Switch >\r\n                <BasicLayoutContextProvider value={{\r\n                    breadcrumb, setBreadcrumb,\r\n                    formMode, setFormMode,\r\n                    sharedState, setSharedState,\r\n                }}>\r\n\r\n                    <RoutePath />\r\n\r\n                    <Redirect to={{ pathname: \"/\" + (props.path || \"\") }} ></Redirect>\r\n                </BasicLayoutContextProvider>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default withRouter(RouterServiceModel);\r\n","import React, { useState, memo, useContext, useEffect } from 'react';\r\nimport { Modal, message } from 'antd';\r\nimport RouterServiceModel from '../../services/RouterService/RouterServiceModel';\r\nimport { ModalFormContextProvider } from './ModalFormContext';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport BasicLayoutContext, { FormMode } from '../../layouts/BasicLayout/BasicLayoutContext';\r\n\r\nexport interface ErrorMessage {\r\n    noSelection: string;\r\n}\r\n\r\nexport interface Label {\r\n    title: string;\r\n    label: string;\r\n}\r\n\r\nexport interface Props<T> {\r\n    visible: boolean;\r\n    setVisible: (values: boolean) => void;\r\n    setState: (values: T | T[]) => void;\r\n    state: T | T[];\r\n    path: string;\r\n    errorMessage: ErrorMessage;\r\n    label: Label;\r\n    required?: boolean;\r\n    formMode: FormMode\r\n}\r\n/**\r\n *\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\nconst ModelForm: React.FC<Props<any> & RouteComponentProps> = (props) => {\r\n\r\n\r\n\r\n    const [state, setState] = useState<any[]>();\r\n\r\n    function CloseForm() {\r\n        props.setVisible(!props.visible);\r\n        props.history.push(props.location.pathname)\r\n\r\n    }\r\n\r\n    function handleCancel() {\r\n        CloseForm();\r\n    }\r\n\r\n    function handleOk() {\r\n\r\n\r\n        if (props.required && (state === undefined || (Array.isArray(state) && state.length === 0))) {\r\n            message.error(props.errorMessage.noSelection);\r\n            return;\r\n        }\r\n\r\n        if (props.formMode === FormMode.SelectMultiple) {\r\n            props.setState(state);\r\n        } else {\r\n            if (state != null && state.length > 0) {\r\n                props.setState(state[0]);\r\n            }\r\n        }\r\n\r\n        CloseForm()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setState([].concat(props.state))\r\n    }, [props.state])\r\n\r\n    return (\r\n        <ModalFormContextProvider value={{ setState, state }}>\r\n\r\n            <Modal\r\n                width=\"90%\"\r\n                title={props.label.title}\r\n                visible={props.visible}\r\n                destroyOnClose={true}\r\n                onOk={handleOk}\r\n                okText=\"Selecionar\"\r\n                onCancel={handleCancel}>\r\n                <RouterServiceModel path={props.path} setState={props.setState} formMode={props.formMode} />\r\n\r\n            </Modal>\r\n\r\n        </ModalFormContextProvider >\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(memo(ModelForm));\r\n","import { Cidade } from '../../models/Cidades/Cidade';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/Cidade';\r\n\r\nclass Api extends ApiBase<Cidade>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CidadeApi = new Api();","import { CondicaoPagamento } from '../../models/CondicaoPagamento/CondicaoPagamento';\r\nimport { ApiBase } from '../Api';\r\n\r\nexport const endPoint: string = 'api/condicao-pagamento';\r\n\r\nclass Api extends ApiBase<CondicaoPagamento>{\r\n\r\n    constructor() {\r\n        super(endPoint);\r\n    }\r\n}\r\nexport const CondicaoPagamentoApi = new Api();","export interface Pessoa {\r\n    id?: string,\r\n    nome?: string,\r\n    apelido?: string,\r\n    rgInscricaoEstadual?: string,\r\n    cPFCPNJ?: string,\r\n    endereco?: string,\r\n    bairro?: string,\r\n    complemento?: string,\r\n    cep?: string,\r\n    dataNascimento?: Date,\r\n    nacionalidade?: string,\r\n    telefone?: string,\r\n    email?: string,\r\n    observacoes?: string,\r\n}\r\n\r\nexport enum SEXO {\r\n    Masculino = \"Masculino\",\r\n    Feminino = \"Feminino\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum ESTADO_CIVIL {\r\n    Casado = \"Casado\",\r\n    Divorciado = \"Divorciado\",\r\n    Separadoo = \"Separadoo\",\r\n    Solteiro = \"Solteiro\",\r\n    Viuvo = \"Viuvo\",\r\n    Outros = \"Outros\",\r\n}\r\n\r\nexport enum TIPO_PESSOA {\r\n    Fisica = \"Fisica\",\r\n    Juridica = \"Juridica\",\r\n}"],"sourceRoot":""}